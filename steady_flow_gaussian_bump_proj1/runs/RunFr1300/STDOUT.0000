(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint65d
(PID.TID 0000.0001) // Build user:        hugke729
(PID.TID 0000.0001) // Build host:        hugke729
(PID.TID 0000.0001) // Build date:        Thu Jan 26 13:37:01 PST 2017
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the
(PID.TID 0000.0001) ># namelist terminator. Other systems
(PID.TID 0000.0001) ># use a / character (as shown here).
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    2 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    1 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    1 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =  200 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =    1 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    4 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    4 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =  100 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =  400 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =    1 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    1 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    2 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    T ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=    F ;/* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ======= Starting MPI parallel Run =========
(PID.TID 0000.0001)  My Processor Name (len:  8 ) = hugke729
(PID.TID 0000.0001)  Located at (  0,  0) on processor grid (0:  1,0:  0)
(PID.TID 0000.0001)  Origin at  (     1,     1) on global grid (1:   400,1:     1)
(PID.TID 0000.0001)  North neighbor = processor 0000
(PID.TID 0000.0001)  South neighbor = processor 0000
(PID.TID 0000.0001)   East neighbor = processor 0001
(PID.TID 0000.0001)   West neighbor = processor 0001
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   1,   1:   1)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000002, Process = 000001, Comm = messages
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000002, Process = 000001, Comm = messages
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) ># | Model parameters |
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># See src/ini_parms.F for possible parameters.
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > tRefFile='TRef.bin'
(PID.TID 0000.0001) > sRef= 25*35.,
(PID.TID 0000.0001) > viscAz=1.E-5,
(PID.TID 0000.0001) > viscAh=1.0E-4,
(PID.TID 0000.0001) > no_slip_sides=.FALSE.,
(PID.TID 0000.0001) > no_slip_bottom=.FALSE.,
(PID.TID 0000.0001) > viscA4=0.E12,
(PID.TID 0000.0001) > diffKhT=1.0E-4,
(PID.TID 0000.0001) > diffKzT=1.E-5,
(PID.TID 0000.0001) > diffKhS=1.E3,
(PID.TID 0000.0001) > diffKzS=1.E-5,
(PID.TID 0000.0001) > f0=0.E-4,
(PID.TID 0000.0001) > beta=0.02E-11,
(PID.TID 0000.0001) > tAlpha=2.E-4,
(PID.TID 0000.0001) > sBeta =0.E-4,
(PID.TID 0000.0001) > gravity=9.81,
(PID.TID 0000.0001) > gBaro=9.81,
(PID.TID 0000.0001) > rigidLid=.FALSE.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) > eosType='LINEAR',
(PID.TID 0000.0001) > nonHydrostatic=.FALSE.,
(PID.TID 0000.0001) > readBinaryPrec=64,
(PID.TID 0000.0001) > useSingleCpuIO=.TRUE.
(PID.TID 0000.0001) > writeBinaryPrec=64,
(PID.TID 0000.0001) > writeStatePrec=64,
(PID.TID 0000.0001) > saltStepping=.FALSE.,
(PID.TID 0000.0001) ># minimum cell fraction.  This reduces steppiness..
(PID.TID 0000.0001) >  hFacMin=0.1,
(PID.TID 0000.0001) ># implicSurfPress=0.5,
(PID.TID 0000.0001) ># implicDiv2DFlow=0.5,
(PID.TID 0000.0001) ># nonlinFreeSurf=3,
(PID.TID 0000.0001) ># hFacInf=0.2,
(PID.TID 0000.0001) ># hFacSup=1.8,
(PID.TID 0000.0001) >  exactConserv=.FALSE.,
(PID.TID 0000.0001) >  implicitDiffusion=.TRUE.
(PID.TID 0000.0001) >  implicitViscosity=.TRUE.
(PID.TID 0000.0001) ># Superbee on:
(PID.TID 0000.0001) > tempAdvScheme=77,
(PID.TID 0000.0001) > staggerTimeStep=.TRUE.,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dMaxIters=1000,
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-13,
(PID.TID 0000.0001) > cg3dMaxIters=400,
(PID.TID 0000.0001) > cg3dTargetResidual=1.E-13,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) > niter0=0,
(PID.TID 0000.0001) ># times are in s
(PID.TID 0000.0001) > startTime=0,
(PID.TID 0000.0001) > endTime=3600,
(PID.TID 0000.0001) > deltaT=6,
(PID.TID 0000.0001) > abEps=0.1,
(PID.TID 0000.0001) ># once per tide checkpoint...
(PID.TID 0000.0001) > pChkptFreq=21600,
(PID.TID 0000.0001) > chkptFreq=0.0,
(PID.TID 0000.0001) > dumpFreq=3600,
(PID.TID 0000.0001) > monitorFreq=7200,
(PID.TID 0000.0001) ># Forcing for boundary condition files
(PID.TID 0000.0001) > periodicExternalForcing=.FALSE.,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingCartesianGrid=.TRUE.,
(PID.TID 0000.0001) > usingSphericalPolarGrid=.FALSE.,
(PID.TID 0000.0001) > delXfile='delXvar.bin',
(PID.TID 0000.0001) > delY=5.e3,
(PID.TID 0000.0001) > delRfile = 'delZvar.bin',
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Input datasets
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile='topo.bin',
(PID.TID 0000.0001) > mdsioLocalDir='../../',
(PID.TID 0000.0001) > hydrogThetaFile='T0.bin',
(PID.TID 0000.0001) > uVelInitFile='U0.bin',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > useOBCS=.TRUE.,
(PID.TID 0000.0001) > useKL10=.TRUE.,
(PID.TID 0000.0001) > useDIAGNOSTICS=.FALSE.,
(PID.TID 0000.0001) > useMNC=.FALSE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/obcs                 compiled   and   used ( useOBCS                  = T )
 pkg/kl10                 compiled   and   used ( useKL10                  = T )
 pkg/diagnostics          compiled but not used ( useDiagnostics           = F )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled but not used ( +vectorInvariantMomentum = F )
 pkg/mom_fluxform         compiled   and   used ( & not vectorInvariantMom = T )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/timeave              compiled but not used ( taveFreq > 0.            = F )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  OBCS_READPARMS: opening data.obcs
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.obcs
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.obcs"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Open-boundaries
(PID.TID 0000.0001) > &OBCS_PARM01
(PID.TID 0000.0001) > OB_Iwest=1*1,
(PID.TID 0000.0001) > OB_Ieast=1*-1,
(PID.TID 0000.0001) > OB_Jnorth=80*0,
(PID.TID 0000.0001) > OB_Jsouth=80*0,
(PID.TID 0000.0001) > useOBCSsponge=.TRUE.,
(PID.TID 0000.0001) > OBEuFile = 'Ue.bin',
(PID.TID 0000.0001) > OBWuFile = 'Uw.bin',
(PID.TID 0000.0001) > OBEtFile = 'Te.bin',
(PID.TID 0000.0001) > OBWtFile = 'Tw.bin',
(PID.TID 0000.0001) > useOBCSprescribe=.TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Orlanski parameters
(PID.TID 0000.0001) > &OBCS_PARM02
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Sponge layer parameters
(PID.TID 0000.0001) > &OBCS_PARM03
(PID.TID 0000.0001) > Urelaxobcsinner=1000.,
(PID.TID 0000.0001) > Urelaxobcsbound=100.,
(PID.TID 0000.0001) > Vrelaxobcsinner=1000.0,
(PID.TID 0000.0001) > Vrelaxobcsbound=100.0,
(PID.TID 0000.0001) > spongeThickness=30,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  OBCS_READPARMS: finished reading data.obcs
(PID.TID 0000.0001)  OB_indexUnset = /* unset OB index value (i.e. no OB) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  Northern OB global indices : OB_Jnorth =
(PID.TID 0000.0001)   400 @        0                            /* I =  1:400 */
(PID.TID 0000.0001)  Southern OB global indices : OB_Jsouth =
(PID.TID 0000.0001)   400 @        0                            /* I =  1:400 */
(PID.TID 0000.0001)  Eastern  OB global indices : OB_Ieast =
(PID.TID 0000.0001)                     400                     /* J =  1 */
(PID.TID 0000.0001)  Western  OB global indices : OB_Iwest =
(PID.TID 0000.0001)                       1                     /* J =  1 */
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  KL10_READPARMS: opening data.kl10
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.kl10
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.kl10"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># =====================================================================
(PID.TID 0000.0001) ># | Parameters for Klymak and Legg (2010) vertical mixing scheme      |
(PID.TID 0000.0001) ># =====================================================================
(PID.TID 0000.0001) > &KL10_PARM01
(PID.TID 0000.0001) > KLwriteState=.TRUE.,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  KL10_READPARMS: finished reading data.kl10
(PID.TID 0000.0001) SET_PARMS: done
==> SYSTEM CALL (from INI_MODEL_IO): > mkdir -p ../../0000 <
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: delXvar.bin
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delX loaded from file: delXvar.bin
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: delZvar.bin
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delR loaded from file: delZvar.bin
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) %MON XC_max                       =   4.0872483443709E+05
(PID.TID 0000.0001) %MON XC_min                       =   1.2751655629139E+03
(PID.TID 0000.0001) %MON XC_mean                      =   2.0500000000000E+05
(PID.TID 0000.0001) %MON XC_sd                        =   8.2408027195681E+04
(PID.TID 0000.0001) %MON XG_max                       =   4.0744966887417E+05
(PID.TID 0000.0001) %MON XG_min                       =   4.5474735088646E-13
(PID.TID 0000.0001) %MON XG_mean                      =   2.0448750000000E+05
(PID.TID 0000.0001) %MON XG_sd                        =   8.2409028987204E+04
(PID.TID 0000.0001) %MON DXC_max                      =   2.5503311258278E+03
(PID.TID 0000.0001) %MON DXC_min                      =   1.0000000000000E+02
(PID.TID 0000.0001) %MON DXC_mean                     =   1.0250000000000E+03
(PID.TID 0000.0001) %MON DXC_sd                       =   8.1264954623580E+02
(PID.TID 0000.0001) %MON DXF_max                      =   2.5503311258278E+03
(PID.TID 0000.0001) %MON DXF_min                      =   1.0000000000000E+02
(PID.TID 0000.0001) %MON DXF_mean                     =   1.0250000000000E+03
(PID.TID 0000.0001) %MON DXF_sd                       =   8.1268033035903E+02
(PID.TID 0000.0001) %MON DXG_max                      =   2.5503311258278E+03
(PID.TID 0000.0001) %MON DXG_min                      =   1.0000000000000E+02
(PID.TID 0000.0001) %MON DXG_mean                     =   1.0250000000000E+03
(PID.TID 0000.0001) %MON DXG_sd                       =   8.1268033035903E+02
(PID.TID 0000.0001) %MON DXV_max                      =   2.5503311258278E+03
(PID.TID 0000.0001) %MON DXV_min                      =   1.0000000000000E+02
(PID.TID 0000.0001) %MON DXV_mean                     =   1.0250000000000E+03
(PID.TID 0000.0001) %MON DXV_sd                       =   8.1264954623580E+02
(PID.TID 0000.0001) %MON YC_max                       =   2.5000000000000E+03
(PID.TID 0000.0001) %MON YC_min                       =   2.5000000000000E+03
(PID.TID 0000.0001) %MON YC_mean                      =   2.5000000000000E+03
(PID.TID 0000.0001) %MON YC_sd                        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_max                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_mean                      =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_sd                        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYC_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYF_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYG_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYU_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RA_max                       =   1.2751655629139E+07
(PID.TID 0000.0001) %MON RA_min                       =   5.0000000000000E+05
(PID.TID 0000.0001) %MON RA_mean                      =   5.1250000000000E+06
(PID.TID 0000.0001) %MON RA_sd                        =   4.0634016517952E+06
(PID.TID 0000.0001) %MON RAW_max                      =   1.2751655629139E+07
(PID.TID 0000.0001) %MON RAW_min                      =   5.0000000000000E+05
(PID.TID 0000.0001) %MON RAW_mean                     =   5.1250000000000E+06
(PID.TID 0000.0001) %MON RAW_sd                       =   4.0632477311790E+06
(PID.TID 0000.0001) %MON RAS_max                      =   1.2751655629139E+07
(PID.TID 0000.0001) %MON RAS_min                      =   5.0000000000000E+05
(PID.TID 0000.0001) %MON RAS_mean                     =   5.1250000000000E+06
(PID.TID 0000.0001) %MON RAS_sd                       =   4.0634016517952E+06
(PID.TID 0000.0001) %MON RAZ_max                      =   1.2751655629139E+07
(PID.TID 0000.0001) %MON RAZ_min                      =   5.0000000000000E+05
(PID.TID 0000.0001) %MON RAZ_mean                     =   5.1250000000000E+06
(PID.TID 0000.0001) %MON RAZ_sd                       =   4.0632477311790E+06
(PID.TID 0000.0001) %MON AngleCS_max                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_min                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_mean                 =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_max                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_min                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_mean                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: TRef.bin
(PID.TID 0000.0001) S/R LOAD_REF_FILES: tRef loaded from file: TRef.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: topo.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model R_low (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =         -2.000000000000000E+03
(PID.TID 0000.0001) // CMAX =         -1.500000000000000E+03
(PID.TID 0000.0001) // CINT =          1.851851851851852E+01
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) K =   1
(PID.TID 0000.0001) //                I=6       I=16      I=26      I=36      I=46      I=56      I=66      I=76      I=86      I=96      I=106     I=116     I=126     I=136     I=146     I=156     I=166     I=176     I=186     I=196
(PID.TID 0000.0001) // |--J--|321012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|78901234
(PID.TID 0000.0001) //      5 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      4 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      3 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      2 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      0 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //     -1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //     -2 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //     -3 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model Ro_surf (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+32
(PID.TID 0000.0001) // CMAX =         -1.000000000000000E+32
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacC at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacW at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacS at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  2  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) %MON fCori_max                    =   5.0000000000000E-10
(PID.TID 0000.0001) %MON fCori_min                    =   5.0000000000000E-10
(PID.TID 0000.0001) %MON fCori_mean                   =   5.0000000000000E-10
(PID.TID 0000.0001) %MON fCori_sd                     =   1.3441684953987E-24
(PID.TID 0000.0001) %MON fCoriG_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_mean                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_sd                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_max                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_min                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_mean                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   0.0000000000000E+00
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  1.0000000000000001E-05
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)                 2.772408163265306E+01,      /* K =  1 */
(PID.TID 0000.0001)                 2.744816326530612E+01,      /* K =  2 */
(PID.TID 0000.0001)                 2.717224489795919E+01,      /* K =  3 */
(PID.TID 0000.0001)                 2.689632653061225E+01,      /* K =  4 */
(PID.TID 0000.0001)                 2.662040816326531E+01,      /* K =  5 */
(PID.TID 0000.0001)                 2.634448979591837E+01,      /* K =  6 */
(PID.TID 0000.0001)                 2.606857142857143E+01,      /* K =  7 */
(PID.TID 0000.0001)                 2.579265306122449E+01,      /* K =  8 */
(PID.TID 0000.0001)                 2.551673469387755E+01,      /* K =  9 */
(PID.TID 0000.0001)                 2.524081632653061E+01,      /* K = 10 */
(PID.TID 0000.0001)                 2.496489795918367E+01,      /* K = 11 */
(PID.TID 0000.0001)                 2.468897959183674E+01,      /* K = 12 */
(PID.TID 0000.0001)                 2.441306122448980E+01,      /* K = 13 */
(PID.TID 0000.0001)                 2.413714285714286E+01,      /* K = 14 */
(PID.TID 0000.0001)                 2.386122448979592E+01,      /* K = 15 */
(PID.TID 0000.0001)                 2.358530612244898E+01,      /* K = 16 */
(PID.TID 0000.0001)                 2.330938775510204E+01,      /* K = 17 */
(PID.TID 0000.0001)                 2.303346938775510E+01,      /* K = 18 */
(PID.TID 0000.0001)                 2.275755102040817E+01,      /* K = 19 */
(PID.TID 0000.0001)                 2.248163265306123E+01,      /* K = 20 */
(PID.TID 0000.0001)                 2.220571428571429E+01,      /* K = 21 */
(PID.TID 0000.0001)                 2.192979591836735E+01,      /* K = 22 */
(PID.TID 0000.0001)                 2.165387755102041E+01,      /* K = 23 */
(PID.TID 0000.0001)                 2.137795918367348E+01,      /* K = 24 */
(PID.TID 0000.0001)                 2.110204081632654E+01,      /* K = 25 */
(PID.TID 0000.0001)                 2.082612244897960E+01,      /* K = 26 */
(PID.TID 0000.0001)                 2.055020408163266E+01,      /* K = 27 */
(PID.TID 0000.0001)                 2.027428571428572E+01,      /* K = 28 */
(PID.TID 0000.0001)                 1.999836734693878E+01,      /* K = 29 */
(PID.TID 0000.0001)                 1.972244897959184E+01,      /* K = 30 */
(PID.TID 0000.0001)                 1.944653061224490E+01,      /* K = 31 */
(PID.TID 0000.0001)                 1.917061224489796E+01,      /* K = 32 */
(PID.TID 0000.0001)                 1.889469387755102E+01,      /* K = 33 */
(PID.TID 0000.0001)                 1.861877551020408E+01,      /* K = 34 */
(PID.TID 0000.0001)                 1.834285714285714E+01,      /* K = 35 */
(PID.TID 0000.0001)                 1.806693877551020E+01,      /* K = 36 */
(PID.TID 0000.0001)                 1.779102040816326E+01,      /* K = 37 */
(PID.TID 0000.0001)                 1.751510204081632E+01,      /* K = 38 */
(PID.TID 0000.0001)                 1.723918367346938E+01,      /* K = 39 */
(PID.TID 0000.0001)                 1.696326530612244E+01,      /* K = 40 */
(PID.TID 0000.0001)                 1.668734693877551E+01,      /* K = 41 */
(PID.TID 0000.0001)                 1.641142857142857E+01,      /* K = 42 */
(PID.TID 0000.0001)                 1.613551020408163E+01,      /* K = 43 */
(PID.TID 0000.0001)                 1.585959183673469E+01,      /* K = 44 */
(PID.TID 0000.0001)                 1.558367346938775E+01,      /* K = 45 */
(PID.TID 0000.0001)                 1.530775510204081E+01,      /* K = 46 */
(PID.TID 0000.0001)                 1.503183673469387E+01,      /* K = 47 */
(PID.TID 0000.0001)                 1.475591836734693E+01,      /* K = 48 */
(PID.TID 0000.0001)                 1.447999999999999E+01,      /* K = 49 */
(PID.TID 0000.0001)                 1.420408163265305E+01,      /* K = 50 */
(PID.TID 0000.0001)                 1.392816326530611E+01,      /* K = 51 */
(PID.TID 0000.0001)                 1.365224489795917E+01,      /* K = 52 */
(PID.TID 0000.0001)                 1.337632653061223E+01,      /* K = 53 */
(PID.TID 0000.0001)                 1.310040816326529E+01,      /* K = 54 */
(PID.TID 0000.0001)                 1.282448979591836E+01,      /* K = 55 */
(PID.TID 0000.0001)                 1.254857142857142E+01,      /* K = 56 */
(PID.TID 0000.0001)                 1.227265306122448E+01,      /* K = 57 */
(PID.TID 0000.0001)                 1.199673469387754E+01,      /* K = 58 */
(PID.TID 0000.0001)                 1.172081632653060E+01,      /* K = 59 */
(PID.TID 0000.0001)                 1.144489795918366E+01,      /* K = 60 */
(PID.TID 0000.0001)                 1.116897959183672E+01,      /* K = 61 */
(PID.TID 0000.0001)                 1.089306122448978E+01,      /* K = 62 */
(PID.TID 0000.0001)                 1.061714285714284E+01,      /* K = 63 */
(PID.TID 0000.0001)                 1.034122448979590E+01,      /* K = 64 */
(PID.TID 0000.0001)                 1.006530612244896E+01,      /* K = 65 */
(PID.TID 0000.0001)                 9.789387755102023E+00,      /* K = 66 */
(PID.TID 0000.0001)                 9.513469387755084E+00,      /* K = 67 */
(PID.TID 0000.0001)                 9.237551020408144E+00,      /* K = 68 */
(PID.TID 0000.0001)                 8.961632653061205E+00,      /* K = 69 */
(PID.TID 0000.0001)                 8.685714285714266E+00,      /* K = 70 */
(PID.TID 0000.0001)                 8.409795918367326E+00,      /* K = 71 */
(PID.TID 0000.0001)                 8.133877551020387E+00,      /* K = 72 */
(PID.TID 0000.0001)                 7.857959183673447E+00,      /* K = 73 */
(PID.TID 0000.0001)                 7.582040816326508E+00,      /* K = 74 */
(PID.TID 0000.0001)                 7.306122448979568E+00,      /* K = 75 */
(PID.TID 0000.0001)                 7.030204081632629E+00,      /* K = 76 */
(PID.TID 0000.0001)                 6.754285714285690E+00,      /* K = 77 */
(PID.TID 0000.0001)                 6.478367346938750E+00,      /* K = 78 */
(PID.TID 0000.0001)                 6.202448979591811E+00,      /* K = 79 */
(PID.TID 0000.0001)                 5.926530612244871E+00,      /* K = 80 */
(PID.TID 0000.0001)                 5.650612244897932E+00,      /* K = 81 */
(PID.TID 0000.0001)                 5.374693877550992E+00,      /* K = 82 */
(PID.TID 0000.0001)                 5.098775510204053E+00,      /* K = 83 */
(PID.TID 0000.0001)                 4.822857142857114E+00,      /* K = 84 */
(PID.TID 0000.0001)                 4.546938775510174E+00,      /* K = 85 */
(PID.TID 0000.0001)                 4.271020408163235E+00,      /* K = 86 */
(PID.TID 0000.0001)                 3.995102040816295E+00,      /* K = 87 */
(PID.TID 0000.0001)                 3.719183673469356E+00,      /* K = 88 */
(PID.TID 0000.0001)                 3.443265306122417E+00,      /* K = 89 */
(PID.TID 0000.0001)                 3.167346938775477E+00,      /* K = 90 */
(PID.TID 0000.0001)                 2.891428571428538E+00,      /* K = 91 */
(PID.TID 0000.0001)                 2.615510204081598E+00,      /* K = 92 */
(PID.TID 0000.0001)                 2.339591836734659E+00,      /* K = 93 */
(PID.TID 0000.0001)                 2.063673469387719E+00,      /* K = 94 */
(PID.TID 0000.0001)                 1.787755102040780E+00,      /* K = 95 */
(PID.TID 0000.0001)                 1.511836734693841E+00,      /* K = 96 */
(PID.TID 0000.0001)                 1.235918367346901E+00,      /* K = 97 */
(PID.TID 0000.0001)                 9.599999999999618E-01,      /* K = 98 */
(PID.TID 0000.0001)                 6.840816326530224E-01,      /* K = 99 */
(PID.TID 0000.0001)                 4.081632653060829E-01       /* K =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( psu ) */
(PID.TID 0000.0001)   100 @  3.500000000000000E+01              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)   100 @  1.000000000000000E-05              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)   100 @  1.000000000000000E-05              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)   100 @  1.000000000000000E-05              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'LINEAR'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tAlpha = /* Linear EOS thermal expansion coefficient ( 1/oC ) */
(PID.TID 0000.0001)                 2.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sBeta  = /* Linear EOS haline contraction coefficient ( 1/psu ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoNil    = /* Reference density for Linear EOS ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.994000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)   100 @  1.000000000000000E+00              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)   101 @  1.000000000000000E+00              /* K =  1:101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.616400000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.292123516990375E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 2.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2Dflow =  /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(psu)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(psu)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(psu)*/
(PID.TID 0000.0001)                 3.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useEnergyConservingCoriolis= /* Flx-Form Coriolis scheme flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartWetPoints= /* Coriolis WetPoints method flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartMomAdv= /* V.I Non-linear terms Jamart flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAbsVorticity= /* V.I Works with f+zeta in Coriolis */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectVortScheme= /* V.I Scheme selector for Vorticity-Term */
(PID.TID 0000.0001)               123456789
(PID.TID 0000.0001)    = 0 : enstrophy (Shallow-Water Eq.) conserving scheme by Sadourny, JAS 75
(PID.TID 0000.0001)    = 1 : same as 0 with modified hFac
(PID.TID 0000.0001)    = 2 : energy conserving scheme (used by Sadourny in JAS 75 paper)
(PID.TID 0000.0001)    = 3 : energy (general) and enstrophy (2D, nonDiv.) conserving scheme
(PID.TID 0000.0001)          from Sadourny (Burridge & Haseler, ECMWF Rep.4, 1977)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindVorticity= /* V.I Upwind bias vorticity flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) highOrderVorticity= /* V.I High order vort. advect. flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindShear= /* V.I Upwind vertical Shear advection flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectKEscheme= /* V.I Kinetic Energy scheme selector */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                    1000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 6.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 6.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)   100 @  6.000000000000000E+00              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 6.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                     600
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                     600
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 3.600000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 2.160000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_immed =   /* Model IO flag. */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 3.600000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 7.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       3
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 1.500000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) Ro_SeaLevel = /* r(1) ( units of r ==  m ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 1.000200040008002E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 1.000000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)    99 @  2.000000000000000E+01,             /* K =  2:100 */
(PID.TID 0000.0001)                 1.000000000000000E+01       /* K =101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)   100 @  2.000000000000000E+01              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.533995584988962E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.517660044150110E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.657836644591612E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.494481236203090E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.331125827814569E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.167770419426049E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.004415011037528E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.841059602649007E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =200 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =201 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =202 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =203 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.841059602649007E+02,      /* I =298 */
(PID.TID 0000.0001)                 9.004415011037528E+02,      /* I =299 */
(PID.TID 0000.0001)                 9.167770419426049E+02,      /* I =300 */
(PID.TID 0000.0001)                 9.331125827814569E+02,      /* I =301 */
(PID.TID 0000.0001)                 9.494481236203090E+02,      /* I =302 */
(PID.TID 0000.0001)                 9.657836644591612E+02,      /* I =303 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 2.517660044150110E+03,      /* I =398 */
(PID.TID 0000.0001)                 2.533995584988962E+03,      /* I =399 */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* I =400 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 1.275165562913908E+03,      /* I =  1 */
(PID.TID 0000.0001)                 3.817328918322296E+03,      /* I =  2 */
(PID.TID 0000.0001)                 6.343156732891833E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.030981236203090E+05,      /* I = 48 */
(PID.TID 0000.0001)                 1.048725165562914E+05,      /* I = 49 */
(PID.TID 0000.0001)                 1.066305739514349E+05,      /* I = 50 */
(PID.TID 0000.0001)                 1.083722958057395E+05,      /* I = 51 */
(PID.TID 0000.0001)                 1.100976821192053E+05,      /* I = 52 */
(PID.TID 0000.0001)                 1.118067328918322E+05,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.718067328918322E+05,      /* I = 98 */
(PID.TID 0000.0001)                 1.727643487858720E+05,      /* I = 99 */
(PID.TID 0000.0001)                 1.737056291390728E+05,      /* I =100 */
(PID.TID 0000.0001)                 1.746305739514349E+05,      /* I =101 */
(PID.TID 0000.0001)                 1.755391832229581E+05,      /* I =102 */
(PID.TID 0000.0001)                 1.764314569536424E+05,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.996764900662251E+05,      /* I =148 */
(PID.TID 0000.0001)                 1.998173289183223E+05,      /* I =149 */
(PID.TID 0000.0001)                 1.999418322295806E+05,      /* I =150 */
(PID.TID 0000.0001)                 2.000500000000000E+05,      /* I =151 */
(PID.TID 0000.0001)                 2.001500000000000E+05,      /* I =152 */
(PID.TID 0000.0001)                 2.002500000000000E+05,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 2.047500000000000E+05,      /* I =198 */
(PID.TID 0000.0001)                 2.048500000000000E+05,      /* I =199 */
(PID.TID 0000.0001)                 2.049500000000000E+05       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 2.500000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -1.000000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                -3.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -5.000000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -7.000000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -9.000000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                -1.100000000000000E+02,      /* K =  6 */
(PID.TID 0000.0001)                -1.300000000000000E+02,      /* K =  7 */
(PID.TID 0000.0001)                -1.500000000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -1.700000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -1.900000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -2.100000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -2.300000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -2.500000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -2.700000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -2.900000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                -3.100000000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                -3.300000000000000E+02,      /* K = 17 */
(PID.TID 0000.0001)                -3.500000000000000E+02,      /* K = 18 */
(PID.TID 0000.0001)                -3.700000000000000E+02,      /* K = 19 */
(PID.TID 0000.0001)                -3.900000000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                -4.100000000000000E+02,      /* K = 21 */
(PID.TID 0000.0001)                -4.300000000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                -4.500000000000000E+02,      /* K = 23 */
(PID.TID 0000.0001)                -4.700000000000000E+02,      /* K = 24 */
(PID.TID 0000.0001)                -4.900000000000000E+02,      /* K = 25 */
(PID.TID 0000.0001)                -5.100000000000000E+02,      /* K = 26 */
(PID.TID 0000.0001)                -5.300000000000000E+02,      /* K = 27 */
(PID.TID 0000.0001)                -5.500000000000000E+02,      /* K = 28 */
(PID.TID 0000.0001)                -5.700000000000000E+02,      /* K = 29 */
(PID.TID 0000.0001)                -5.900000000000000E+02,      /* K = 30 */
(PID.TID 0000.0001)                -6.100000000000000E+02,      /* K = 31 */
(PID.TID 0000.0001)                -6.300000000000000E+02,      /* K = 32 */
(PID.TID 0000.0001)                -6.500000000000000E+02,      /* K = 33 */
(PID.TID 0000.0001)                -6.700000000000000E+02,      /* K = 34 */
(PID.TID 0000.0001)                -6.900000000000000E+02,      /* K = 35 */
(PID.TID 0000.0001)                -7.100000000000000E+02,      /* K = 36 */
(PID.TID 0000.0001)                -7.300000000000000E+02,      /* K = 37 */
(PID.TID 0000.0001)                -7.500000000000000E+02,      /* K = 38 */
(PID.TID 0000.0001)                -7.700000000000000E+02,      /* K = 39 */
(PID.TID 0000.0001)                -7.900000000000000E+02,      /* K = 40 */
(PID.TID 0000.0001)                -8.100000000000000E+02,      /* K = 41 */
(PID.TID 0000.0001)                -8.300000000000000E+02,      /* K = 42 */
(PID.TID 0000.0001)                -8.500000000000000E+02,      /* K = 43 */
(PID.TID 0000.0001)                -8.700000000000000E+02,      /* K = 44 */
(PID.TID 0000.0001)                -8.900000000000000E+02,      /* K = 45 */
(PID.TID 0000.0001)                -9.100000000000000E+02,      /* K = 46 */
(PID.TID 0000.0001)                -9.300000000000000E+02,      /* K = 47 */
(PID.TID 0000.0001)                -9.500000000000000E+02,      /* K = 48 */
(PID.TID 0000.0001)                -9.700000000000000E+02,      /* K = 49 */
(PID.TID 0000.0001)                -9.900000000000000E+02,      /* K = 50 */
(PID.TID 0000.0001)                -1.010000000000000E+03,      /* K = 51 */
(PID.TID 0000.0001)                -1.030000000000000E+03,      /* K = 52 */
(PID.TID 0000.0001)                -1.050000000000000E+03,      /* K = 53 */
(PID.TID 0000.0001)                -1.070000000000000E+03,      /* K = 54 */
(PID.TID 0000.0001)                -1.090000000000000E+03,      /* K = 55 */
(PID.TID 0000.0001)                -1.110000000000000E+03,      /* K = 56 */
(PID.TID 0000.0001)                -1.130000000000000E+03,      /* K = 57 */
(PID.TID 0000.0001)                -1.150000000000000E+03,      /* K = 58 */
(PID.TID 0000.0001)                -1.170000000000000E+03,      /* K = 59 */
(PID.TID 0000.0001)                -1.190000000000000E+03,      /* K = 60 */
(PID.TID 0000.0001)                -1.210000000000000E+03,      /* K = 61 */
(PID.TID 0000.0001)                -1.230000000000000E+03,      /* K = 62 */
(PID.TID 0000.0001)                -1.250000000000000E+03,      /* K = 63 */
(PID.TID 0000.0001)                -1.270000000000000E+03,      /* K = 64 */
(PID.TID 0000.0001)                -1.290000000000000E+03,      /* K = 65 */
(PID.TID 0000.0001)                -1.310000000000000E+03,      /* K = 66 */
(PID.TID 0000.0001)                -1.330000000000000E+03,      /* K = 67 */
(PID.TID 0000.0001)                -1.350000000000000E+03,      /* K = 68 */
(PID.TID 0000.0001)                -1.370000000000000E+03,      /* K = 69 */
(PID.TID 0000.0001)                -1.390000000000000E+03,      /* K = 70 */
(PID.TID 0000.0001)                -1.410000000000000E+03,      /* K = 71 */
(PID.TID 0000.0001)                -1.430000000000000E+03,      /* K = 72 */
(PID.TID 0000.0001)                -1.450000000000000E+03,      /* K = 73 */
(PID.TID 0000.0001)                -1.470000000000000E+03,      /* K = 74 */
(PID.TID 0000.0001)                -1.490000000000000E+03,      /* K = 75 */
(PID.TID 0000.0001)                -1.510000000000000E+03,      /* K = 76 */
(PID.TID 0000.0001)                -1.530000000000000E+03,      /* K = 77 */
(PID.TID 0000.0001)                -1.550000000000000E+03,      /* K = 78 */
(PID.TID 0000.0001)                -1.570000000000000E+03,      /* K = 79 */
(PID.TID 0000.0001)                -1.590000000000000E+03,      /* K = 80 */
(PID.TID 0000.0001)                -1.610000000000000E+03,      /* K = 81 */
(PID.TID 0000.0001)                -1.630000000000000E+03,      /* K = 82 */
(PID.TID 0000.0001)                -1.650000000000000E+03,      /* K = 83 */
(PID.TID 0000.0001)                -1.670000000000000E+03,      /* K = 84 */
(PID.TID 0000.0001)                -1.690000000000000E+03,      /* K = 85 */
(PID.TID 0000.0001)                -1.710000000000000E+03,      /* K = 86 */
(PID.TID 0000.0001)                -1.730000000000000E+03,      /* K = 87 */
(PID.TID 0000.0001)                -1.750000000000000E+03,      /* K = 88 */
(PID.TID 0000.0001)                -1.770000000000000E+03,      /* K = 89 */
(PID.TID 0000.0001)                -1.790000000000000E+03,      /* K = 90 */
(PID.TID 0000.0001)                -1.810000000000000E+03,      /* K = 91 */
(PID.TID 0000.0001)                -1.830000000000000E+03,      /* K = 92 */
(PID.TID 0000.0001)                -1.850000000000000E+03,      /* K = 93 */
(PID.TID 0000.0001)                -1.870000000000000E+03,      /* K = 94 */
(PID.TID 0000.0001)                -1.890000000000000E+03,      /* K = 95 */
(PID.TID 0000.0001)                -1.910000000000000E+03,      /* K = 96 */
(PID.TID 0000.0001)                -1.930000000000000E+03,      /* K = 97 */
(PID.TID 0000.0001)                -1.950000000000000E+03,      /* K = 98 */
(PID.TID 0000.0001)                -1.970000000000000E+03,      /* K = 99 */
(PID.TID 0000.0001)                -1.990000000000000E+03       /* K =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -2.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -4.000000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -6.000000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -8.000000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                -1.000000000000000E+02,      /* K =  6 */
(PID.TID 0000.0001)                -1.200000000000000E+02,      /* K =  7 */
(PID.TID 0000.0001)                -1.400000000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -1.600000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -1.800000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -2.000000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -2.200000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -2.400000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -2.600000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -2.800000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                -3.000000000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                -3.200000000000000E+02,      /* K = 17 */
(PID.TID 0000.0001)                -3.400000000000000E+02,      /* K = 18 */
(PID.TID 0000.0001)                -3.600000000000000E+02,      /* K = 19 */
(PID.TID 0000.0001)                -3.800000000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                -4.000000000000000E+02,      /* K = 21 */
(PID.TID 0000.0001)                -4.200000000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                -4.400000000000000E+02,      /* K = 23 */
(PID.TID 0000.0001)                -4.600000000000000E+02,      /* K = 24 */
(PID.TID 0000.0001)                -4.800000000000000E+02,      /* K = 25 */
(PID.TID 0000.0001)                -5.000000000000000E+02,      /* K = 26 */
(PID.TID 0000.0001)                -5.200000000000000E+02,      /* K = 27 */
(PID.TID 0000.0001)                -5.400000000000000E+02,      /* K = 28 */
(PID.TID 0000.0001)                -5.600000000000000E+02,      /* K = 29 */
(PID.TID 0000.0001)                -5.800000000000000E+02,      /* K = 30 */
(PID.TID 0000.0001)                -6.000000000000000E+02,      /* K = 31 */
(PID.TID 0000.0001)                -6.200000000000000E+02,      /* K = 32 */
(PID.TID 0000.0001)                -6.400000000000000E+02,      /* K = 33 */
(PID.TID 0000.0001)                -6.600000000000000E+02,      /* K = 34 */
(PID.TID 0000.0001)                -6.800000000000000E+02,      /* K = 35 */
(PID.TID 0000.0001)                -7.000000000000000E+02,      /* K = 36 */
(PID.TID 0000.0001)                -7.200000000000000E+02,      /* K = 37 */
(PID.TID 0000.0001)                -7.400000000000000E+02,      /* K = 38 */
(PID.TID 0000.0001)                -7.600000000000000E+02,      /* K = 39 */
(PID.TID 0000.0001)                -7.800000000000000E+02,      /* K = 40 */
(PID.TID 0000.0001)                -8.000000000000000E+02,      /* K = 41 */
(PID.TID 0000.0001)                -8.200000000000000E+02,      /* K = 42 */
(PID.TID 0000.0001)                -8.400000000000000E+02,      /* K = 43 */
(PID.TID 0000.0001)                -8.600000000000000E+02,      /* K = 44 */
(PID.TID 0000.0001)                -8.800000000000000E+02,      /* K = 45 */
(PID.TID 0000.0001)                -9.000000000000000E+02,      /* K = 46 */
(PID.TID 0000.0001)                -9.200000000000000E+02,      /* K = 47 */
(PID.TID 0000.0001)                -9.400000000000000E+02,      /* K = 48 */
(PID.TID 0000.0001)                -9.600000000000000E+02,      /* K = 49 */
(PID.TID 0000.0001)                -9.800000000000000E+02,      /* K = 50 */
(PID.TID 0000.0001)                -1.000000000000000E+03,      /* K = 51 */
(PID.TID 0000.0001)                -1.020000000000000E+03,      /* K = 52 */
(PID.TID 0000.0001)                -1.040000000000000E+03,      /* K = 53 */
(PID.TID 0000.0001)                -1.060000000000000E+03,      /* K = 54 */
(PID.TID 0000.0001)                -1.080000000000000E+03,      /* K = 55 */
(PID.TID 0000.0001)                -1.100000000000000E+03,      /* K = 56 */
(PID.TID 0000.0001)                -1.120000000000000E+03,      /* K = 57 */
(PID.TID 0000.0001)                -1.140000000000000E+03,      /* K = 58 */
(PID.TID 0000.0001)                -1.160000000000000E+03,      /* K = 59 */
(PID.TID 0000.0001)                -1.180000000000000E+03,      /* K = 60 */
(PID.TID 0000.0001)                -1.200000000000000E+03,      /* K = 61 */
(PID.TID 0000.0001)                -1.220000000000000E+03,      /* K = 62 */
(PID.TID 0000.0001)                -1.240000000000000E+03,      /* K = 63 */
(PID.TID 0000.0001)                -1.260000000000000E+03,      /* K = 64 */
(PID.TID 0000.0001)                -1.280000000000000E+03,      /* K = 65 */
(PID.TID 0000.0001)                -1.300000000000000E+03,      /* K = 66 */
(PID.TID 0000.0001)                -1.320000000000000E+03,      /* K = 67 */
(PID.TID 0000.0001)                -1.340000000000000E+03,      /* K = 68 */
(PID.TID 0000.0001)                -1.360000000000000E+03,      /* K = 69 */
(PID.TID 0000.0001)                -1.380000000000000E+03,      /* K = 70 */
(PID.TID 0000.0001)                -1.400000000000000E+03,      /* K = 71 */
(PID.TID 0000.0001)                -1.420000000000000E+03,      /* K = 72 */
(PID.TID 0000.0001)                -1.440000000000000E+03,      /* K = 73 */
(PID.TID 0000.0001)                -1.460000000000000E+03,      /* K = 74 */
(PID.TID 0000.0001)                -1.480000000000000E+03,      /* K = 75 */
(PID.TID 0000.0001)                -1.500000000000000E+03,      /* K = 76 */
(PID.TID 0000.0001)                -1.520000000000000E+03,      /* K = 77 */
(PID.TID 0000.0001)                -1.540000000000000E+03,      /* K = 78 */
(PID.TID 0000.0001)                -1.560000000000000E+03,      /* K = 79 */
(PID.TID 0000.0001)                -1.580000000000000E+03,      /* K = 80 */
(PID.TID 0000.0001)                -1.600000000000000E+03,      /* K = 81 */
(PID.TID 0000.0001)                -1.620000000000000E+03,      /* K = 82 */
(PID.TID 0000.0001)                -1.640000000000000E+03,      /* K = 83 */
(PID.TID 0000.0001)                -1.660000000000000E+03,      /* K = 84 */
(PID.TID 0000.0001)                -1.680000000000000E+03,      /* K = 85 */
(PID.TID 0000.0001)                -1.700000000000000E+03,      /* K = 86 */
(PID.TID 0000.0001)                -1.720000000000000E+03,      /* K = 87 */
(PID.TID 0000.0001)                -1.740000000000000E+03,      /* K = 88 */
(PID.TID 0000.0001)                -1.760000000000000E+03,      /* K = 89 */
(PID.TID 0000.0001)                -1.780000000000000E+03,      /* K = 90 */
(PID.TID 0000.0001)                -1.800000000000000E+03,      /* K = 91 */
(PID.TID 0000.0001)                -1.820000000000000E+03,      /* K = 92 */
(PID.TID 0000.0001)                -1.840000000000000E+03,      /* K = 93 */
(PID.TID 0000.0001)                -1.860000000000000E+03,      /* K = 94 */
(PID.TID 0000.0001)                -1.880000000000000E+03,      /* K = 95 */
(PID.TID 0000.0001)                -1.900000000000000E+03,      /* K = 96 */
(PID.TID 0000.0001)                -1.920000000000000E+03,      /* K = 97 */
(PID.TID 0000.0001)                -1.940000000000000E+03,      /* K = 98 */
(PID.TID 0000.0001)                -1.960000000000000E+03,      /* K = 99 */
(PID.TID 0000.0001)                -1.980000000000000E+03,      /* K =100 */
(PID.TID 0000.0001)                -2.000000000000000E+03       /* K =101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)   100 @  1.000000000000000E+00              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)   101 @  1.000000000000000E+00              /* K =  1:101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0000.0001)   101 @  1.000000000000000E+00              /* K =  1:101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0000.0001)   101 @  1.000000000000000E+00              /* K =  1:101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                 2.706759183673476E-05,      /* K =  2 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K =  3 */
(PID.TID 0000.0001)     4 @  2.706759183673476E-05,             /* K =  4:  7 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K =  8 */
(PID.TID 0000.0001)     3 @  2.706759183673476E-05,             /* K =  9: 11 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K = 12 */
(PID.TID 0000.0001)     3 @  2.706759183673476E-05,             /* K = 13: 15 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K = 16 */
(PID.TID 0000.0001)     4 @  2.706759183673476E-05,             /* K = 17: 20 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K = 21 */
(PID.TID 0000.0001)     2 @  2.706759183673476E-05,             /* K = 22: 23 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K = 24 */
(PID.TID 0000.0001)    19 @  2.706759183673476E-05,             /* K = 25: 43 */
(PID.TID 0000.0001)                 2.706759183673458E-05,      /* K = 44 */
(PID.TID 0000.0001)    13 @  2.706759183673476E-05,             /* K = 45: 57 */
(PID.TID 0000.0001)                 2.706759183673458E-05,      /* K = 58 */
(PID.TID 0000.0001)    42 @  2.706759183673476E-05              /* K = 59:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.533995584988962E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.517660044150110E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.782560706401766E+03,      /* I = 48 */
(PID.TID 0000.0001)                 1.766225165562914E+03,      /* I = 49 */
(PID.TID 0000.0001)                 1.749889624724062E+03,      /* I = 50 */
(PID.TID 0000.0001)                 1.733554083885210E+03,      /* I = 51 */
(PID.TID 0000.0001)                 1.717218543046358E+03,      /* I = 52 */
(PID.TID 0000.0001)                 1.700883002207506E+03,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.657836644591612E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.494481236203090E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.331125827814569E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.167770419426049E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.004415011037528E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.841059602649007E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.490066225165563E+02,      /* I =148 */
(PID.TID 0000.0001)                 1.326710816777042E+02,      /* I =149 */
(PID.TID 0000.0001)                 1.163355408388521E+02,      /* I =150 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =151 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =152 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)   200 @  5.000000000000000E+03              /* I =  1:200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.533995584988962E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.517660044150110E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.782560706401766E+03,      /* I = 48 */
(PID.TID 0000.0001)                 1.766225165562914E+03,      /* I = 49 */
(PID.TID 0000.0001)                 1.749889624724062E+03,      /* I = 50 */
(PID.TID 0000.0001)                 1.733554083885210E+03,      /* I = 51 */
(PID.TID 0000.0001)                 1.717218543046358E+03,      /* I = 52 */
(PID.TID 0000.0001)                 1.700883002207506E+03,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.657836644591612E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.494481236203090E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.331125827814569E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.167770419426049E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.004415011037528E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.841059602649007E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.490066225165563E+02,      /* I =148 */
(PID.TID 0000.0001)                 1.326710816777042E+02,      /* I =149 */
(PID.TID 0000.0001)                 1.163355408388521E+02,      /* I =150 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =151 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =152 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)   200 @  5.000000000000000E+03              /* I =  1:200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.542163355408388E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.525827814569537E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.790728476821192E+03,      /* I = 48 */
(PID.TID 0000.0001)                 1.774392935982340E+03,      /* I = 49 */
(PID.TID 0000.0001)                 1.758057395143488E+03,      /* I = 50 */
(PID.TID 0000.0001)                 1.741721854304636E+03,      /* I = 51 */
(PID.TID 0000.0001)                 1.725386313465784E+03,      /* I = 52 */
(PID.TID 0000.0001)                 1.709050772626932E+03,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.739514348785872E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.576158940397352E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.412803532008829E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.249448123620309E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.086092715231789E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.922737306843267E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.571743929359823E+02,      /* I =148 */
(PID.TID 0000.0001)                 1.408388520971303E+02,      /* I =149 */
(PID.TID 0000.0001)                 1.245033112582781E+02,      /* I =150 */
(PID.TID 0000.0001)                 1.081677704194260E+02,      /* I =151 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =152 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)   200 @  5.000000000000000E+03              /* I =  1:200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.542163355408388E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.525827814569537E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.790728476821192E+03,      /* I = 48 */
(PID.TID 0000.0001)                 1.774392935982340E+03,      /* I = 49 */
(PID.TID 0000.0001)                 1.758057395143488E+03,      /* I = 50 */
(PID.TID 0000.0001)                 1.741721854304636E+03,      /* I = 51 */
(PID.TID 0000.0001)                 1.725386313465784E+03,      /* I = 52 */
(PID.TID 0000.0001)                 1.709050772626932E+03,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.739514348785872E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.576158940397352E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.412803532008829E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.249448123620309E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.086092715231789E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.922737306843267E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.571743929359823E+02,      /* I =148 */
(PID.TID 0000.0001)                 1.408388520971303E+02,      /* I =149 */
(PID.TID 0000.0001)                 1.245033112582781E+02,      /* I =150 */
(PID.TID 0000.0001)                 1.081677704194260E+02,      /* I =151 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =152 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)   200 @  5.000000000000000E+03              /* I =  1:200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07,      /* I =  1 */
(PID.TID 0000.0001)                 1.266997792494481E+07,      /* I =  2 */
(PID.TID 0000.0001)                 1.258830022075055E+07,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.912803532008830E+06,      /* I = 48 */
(PID.TID 0000.0001)                 8.831125827814570E+06,      /* I = 49 */
(PID.TID 0000.0001)                 8.749448123620309E+06,      /* I = 50 */
(PID.TID 0000.0001)                 8.667770419426048E+06,      /* I = 51 */
(PID.TID 0000.0001)                 8.586092715231787E+06,      /* I = 52 */
(PID.TID 0000.0001)                 8.504415011037529E+06,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 4.828918322295805E+06,      /* I = 98 */
(PID.TID 0000.0001)                 4.747240618101546E+06,      /* I = 99 */
(PID.TID 0000.0001)                 4.665562913907285E+06,      /* I =100 */
(PID.TID 0000.0001)                 4.583885209713024E+06,      /* I =101 */
(PID.TID 0000.0001)                 4.502207505518764E+06,      /* I =102 */
(PID.TID 0000.0001)                 4.420529801324503E+06,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.450331125827815E+05,      /* I =148 */
(PID.TID 0000.0001)                 6.633554083885209E+05,      /* I =149 */
(PID.TID 0000.0001)                 5.816777041942605E+05,      /* I =150 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =151 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =152 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =198 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =199 */
(PID.TID 0000.0001)                 5.000000000000000E+05       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07,      /* I =  1 */
(PID.TID 0000.0001)                 1.271081677704194E+07,      /* I =  2 */
(PID.TID 0000.0001)                 1.262913907284768E+07,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.953642384105960E+06,      /* I = 48 */
(PID.TID 0000.0001)                 8.871964679911701E+06,      /* I = 49 */
(PID.TID 0000.0001)                 8.790286975717438E+06,      /* I = 50 */
(PID.TID 0000.0001)                 8.708609271523179E+06,      /* I = 51 */
(PID.TID 0000.0001)                 8.626931567328919E+06,      /* I = 52 */
(PID.TID 0000.0001)                 8.545253863134658E+06,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 4.869757174392936E+06,      /* I = 98 */
(PID.TID 0000.0001)                 4.788079470198676E+06,      /* I = 99 */
(PID.TID 0000.0001)                 4.706401766004414E+06,      /* I =100 */
(PID.TID 0000.0001)                 4.624724061810154E+06,      /* I =101 */
(PID.TID 0000.0001)                 4.543046357615895E+06,      /* I =102 */
(PID.TID 0000.0001)                 4.461368653421633E+06,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.858719646799116E+05,      /* I =148 */
(PID.TID 0000.0001)                 7.041942604856513E+05,      /* I =149 */
(PID.TID 0000.0001)                 6.225165562913907E+05,      /* I =150 */
(PID.TID 0000.0001)                 5.408388520971303E+05,      /* I =151 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =152 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =198 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =199 */
(PID.TID 0000.0001)                 5.000000000000000E+05       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07,      /* I =  1 */
(PID.TID 0000.0001)                 1.266997792494481E+07,      /* I =  2 */
(PID.TID 0000.0001)                 1.258830022075055E+07,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.912803532008830E+06,      /* I = 48 */
(PID.TID 0000.0001)                 8.831125827814570E+06,      /* I = 49 */
(PID.TID 0000.0001)                 8.749448123620309E+06,      /* I = 50 */
(PID.TID 0000.0001)                 8.667770419426048E+06,      /* I = 51 */
(PID.TID 0000.0001)                 8.586092715231787E+06,      /* I = 52 */
(PID.TID 0000.0001)                 8.504415011037529E+06,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 4.828918322295805E+06,      /* I = 98 */
(PID.TID 0000.0001)                 4.747240618101546E+06,      /* I = 99 */
(PID.TID 0000.0001)                 4.665562913907285E+06,      /* I =100 */
(PID.TID 0000.0001)                 4.583885209713024E+06,      /* I =101 */
(PID.TID 0000.0001)                 4.502207505518764E+06,      /* I =102 */
(PID.TID 0000.0001)                 4.420529801324503E+06,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.450331125827815E+05,      /* I =148 */
(PID.TID 0000.0001)                 6.633554083885209E+05,      /* I =149 */
(PID.TID 0000.0001)                 5.816777041942605E+05,      /* I =150 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =151 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =152 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =198 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =199 */
(PID.TID 0000.0001)                 5.000000000000000E+05       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 2.024496688741722E+09
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OBCS_CHECK: #define ALLOW_OBCS
(PID.TID 0000.0001) OBCS_CHECK: start summary:
(PID.TID 0000.0001) useOBCSprescribe = /* prescribe OB values */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useOBCSbalance = /* balance the flow through OB */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_uvApplyFac = /* Factor to apply to U,V 2nd column/row */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_u1_adv_T = /* Temp uses upwind adv-scheme @ OB */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_u1_adv_S = /* Salt uses upwind adv-scheme @ OB */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_monitorFreq = /* monitor output frequency [s] */
(PID.TID 0000.0001)                 7.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_monSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useOBCStides = /* apply tidal forcing through OB */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tidalPeriod = /* (s) */
(PID.TID 0000.0001)    10 @  0.000000000000000E+00              /* I =  1: 10 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OB_indexNone = /* null value for OB index (i.e. no OB) */
(PID.TID 0000.0001)                     -99
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ======== Tile bi=   1 , bj=   1 ========
(PID.TID 0000.0001)  OB_Jn = /* Northern OB local indices */
(PID.TID 0000.0001)   208 @      -99                            /* I = -3:204 */
(PID.TID 0000.0001)  OB_Js = /* Southern OB local indices */
(PID.TID 0000.0001)   208 @      -99                            /* I = -3:204 */
(PID.TID 0000.0001)  OB_Ie = /* Eastern OB local indices */
(PID.TID 0000.0001)     9 @      -99                            /* J = -3:  5 */
(PID.TID 0000.0001)  OB_Iw = /* Western OB local indices */
(PID.TID 0000.0001)     9 @        1                            /* J = -3:  5 */
(PID.TID 0000.0001) OBCS_CHECK: end summary.
(PID.TID 0000.0001) OBCS_CHECK: set-up OK
(PID.TID 0000.0001) OBCS_CHECK: check Inside Mask and OB locations: OK
(PID.TID 0000.0001) KL10_CHECK: #define ALLOW_KL10
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: U0.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: T0.bin
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  OBCS_FIELDS_LOAD: Reading initial data:         0  0.000000000000E+00
(PID.TID 0000.0001)  MDS_READ_SEC_YZ: opening global file: Ue.bin
(PID.TID 0000.0001)  MDS_READ_SEC_YZ: opening global file: Te.bin
(PID.TID 0000.0001)  MDS_READ_SEC_YZ: opening global file: Uw.bin
(PID.TID 0000.0001)  MDS_READ_SEC_YZ: opening global file: Tw.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     0
(PID.TID 0000.0001) %MON time_secondsf                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   3.3800000000000E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   3.3800000000000E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   3.3800000000000E-01
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   8.3266726846887E-16
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.0668537314016E-01
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.0668537314016E-01
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -5.9295442603316E-20
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   7.7678126215746E-03
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   2.9898948075740E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.7724081632653E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   4.0816326530608E-01
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   1.4088459648444E+01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   7.9567210520253E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4999999999999E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   7.7449158197850E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_sst_max              =   2.7724081632653E+01
(PID.TID 0000.0001) %MON dynstat_sst_min              =   2.7724081632653E+01
(PID.TID 0000.0001) %MON dynstat_sst_mean             =   2.7724081632653E+01
(PID.TID 0000.0001) %MON dynstat_sst_sd               =   1.0658141036402E-14
(PID.TID 0000.0001) %MON dynstat_sst_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_sss_max              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_min              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_mean             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_sd               =   7.1054273576010E-15
(PID.TID 0000.0001) %MON dynstat_sss_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_max            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_min            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_mean           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_sd             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   2.0280000000000E-02
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   6.4011223884097E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   3.2005611942048E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_max                       =   5.9454796909492E-02
(PID.TID 0000.0001) %MON ke_mean                      =   5.7119620572464E-02
(PID.TID 0000.0001) %MON ke_vol                       =   4.0408484990566E+12
(PID.TID 0000.0001) %MON vort_r_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_r_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_a_mean                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_a_sd                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_p_mean                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_p_sd                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -1.8401068864071E-18
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.8401068864071E-18
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin OBCS MONITOR field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON obc_E_uVel_max               =   3.3800000000000E-01
(PID.TID 0000.0001) %MON obc_E_uVel_min               =   3.3800000000000E-01
(PID.TID 0000.0001) %MON obc_E_uVel_mean              =   3.3800000000000E-01
(PID.TID 0000.0001) %MON obc_E_uVel_sd                =   7.4505805969238E-09
(PID.TID 0000.0001) %MON obc_E_uVel_Int               =   3.3800000000000E+06
(PID.TID 0000.0001) %MON obc_W_uVel_max               =   3.3800000000000E-01
(PID.TID 0000.0001) %MON obc_W_uVel_min               =   3.3800000000000E-01
(PID.TID 0000.0001) %MON obc_W_uVel_mean              =   3.3800000000000E-01
(PID.TID 0000.0001) %MON obc_W_uVel_sd                =   7.4505805969238E-09
(PID.TID 0000.0001) %MON obc_W_uVel_Int               =   3.3800000000000E+06
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End OBCS MONITOR field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -1.77635683940025E-15  8.94273269038809E-02
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-14  9.93963535554234E-02
 cg2d: Sum(rhs),rhsMax =  -4.97379915032070E-14  8.91503854514956E-02
 cg2d: Sum(rhs),rhsMax =   7.10542735760100E-15  8.39598805832693E-02
 cg2d: Sum(rhs),rhsMax =  -7.81597009336110E-14  7.37169379584471E-02
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-14  9.77809601926380E-02
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-14  1.21306835481528E-01
 cg2d: Sum(rhs),rhsMax =   1.38555833473220E-13  1.40595823973598E-01
 cg2d: Sum(rhs),rhsMax =   1.27897692436818E-13  1.56081035895907E-01
 cg2d: Sum(rhs),rhsMax =   1.35003119794419E-13  1.68573299862139E-01
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-13  1.78850458652371E-01
 cg2d: Sum(rhs),rhsMax =   1.45661260830821E-13  1.87475874524239E-01
 cg2d: Sum(rhs),rhsMax =   9.23705556488130E-14  1.94748165507240E-01
 cg2d: Sum(rhs),rhsMax =   5.32907051820075E-14  2.00714596937839E-01
 cg2d: Sum(rhs),rhsMax =  -5.32907051820075E-14  2.05685418844018E-01
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-13  2.10634366637013E-01
 cg2d: Sum(rhs),rhsMax =  -2.23820961764432E-13  2.14308047857971E-01
 cg2d: Sum(rhs),rhsMax =  -2.23820961764432E-13  2.18155601452199E-01
 cg2d: Sum(rhs),rhsMax =  -2.02504679691629E-13  2.21335135885699E-01
 cg2d: Sum(rhs),rhsMax =  -2.04281036531029E-13  2.23830156765569E-01
 cg2d: Sum(rhs),rhsMax =  -2.07833750209829E-13  2.26731874401855E-01
 cg2d: Sum(rhs),rhsMax =  -1.75859327100625E-13  2.29285341389276E-01
 cg2d: Sum(rhs),rhsMax =  -1.54543045027822E-13  2.31230418092034E-01
 cg2d: Sum(rhs),rhsMax =  -1.11910480882216E-13  2.32727869572742E-01
 cg2d: Sum(rhs),rhsMax =  -5.68434188608080E-14  2.34832227883865E-01
 cg2d: Sum(rhs),rhsMax =  -8.88178419700125E-15  2.36789259721866E-01
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-14  2.38475302276961E-01
 cg2d: Sum(rhs),rhsMax =   6.03961325396085E-14  2.39961170835564E-01
 cg2d: Sum(rhs),rhsMax =   6.92779167366098E-14  2.41301833189501E-01
 cg2d: Sum(rhs),rhsMax =   1.11910480882216E-13  2.42538071108152E-01
 cg2d: Sum(rhs),rhsMax =   1.04805053524615E-13  2.43698078780988E-01
 cg2d: Sum(rhs),rhsMax =   8.17124146124115E-14  2.44798935125642E-01
 cg2d: Sum(rhs),rhsMax =   5.86197757002083E-14  2.45847943679465E-01
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-14  2.46843821740769E-01
 cg2d: Sum(rhs),rhsMax =   0.00000000000000E+00  2.47777760482223E-01
 cg2d: Sum(rhs),rhsMax =  -2.66453525910038E-14  2.48634373240517E-01
 cg2d: Sum(rhs),rhsMax =  -5.32907051820075E-14  2.49392555942511E-01
 cg2d: Sum(rhs),rhsMax =  -6.21724893790088E-14  2.50026284443865E-01
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-14  2.50505372728927E-01
 cg2d: Sum(rhs),rhsMax =  -9.05941988094128E-14  2.50796213835024E-01
 cg2d: Sum(rhs),rhsMax =  -1.19015908239817E-13  2.51769603608021E-01
 cg2d: Sum(rhs),rhsMax =  -1.24344978758018E-13  2.52787919539828E-01
 cg2d: Sum(rhs),rhsMax =  -1.61648472385423E-13  2.53608414979480E-01
 cg2d: Sum(rhs),rhsMax =  -1.65201186064223E-13  2.54183126227353E-01
 cg2d: Sum(rhs),rhsMax =  -1.72306613421824E-13  2.54463074328081E-01
 cg2d: Sum(rhs),rhsMax =  -1.74082970261225E-13  2.54399048300132E-01
 cg2d: Sum(rhs),rhsMax =  -1.75859327100625E-13  2.55382899003760E-01
 cg2d: Sum(rhs),rhsMax =  -1.58095758706622E-13  2.56273287201773E-01
 cg2d: Sum(rhs),rhsMax =  -1.63424829224823E-13  2.56756856888435E-01
 cg2d: Sum(rhs),rhsMax =  -1.90070181815827E-13  2.56777740997033E-01
 cg2d: Sum(rhs),rhsMax =  -1.88293824976427E-13  2.56936760504496E-01
 cg2d: Sum(rhs),rhsMax =  -1.75859327100625E-13  2.57995899819584E-01
 cg2d: Sum(rhs),rhsMax =  -1.77635683940025E-13  2.58509559562646E-01
 cg2d: Sum(rhs),rhsMax =  -1.86517468137026E-13  2.58418786708394E-01
 cg2d: Sum(rhs),rhsMax =  -2.02504679691629E-13  2.58671565535321E-01
 cg2d: Sum(rhs),rhsMax =  -2.11386463888630E-13  2.59634616613550E-01
 cg2d: Sum(rhs),rhsMax =  -2.07833750209829E-13  2.59896901210195E-01
 cg2d: Sum(rhs),rhsMax =  -2.09610107049230E-13  2.59400631341524E-01
 cg2d: Sum(rhs),rhsMax =  -1.95399252334028E-13  2.60491893243251E-01
 cg2d: Sum(rhs),rhsMax =  -2.04281036531029E-13  2.61015310190678E-01
 cg2d: Sum(rhs),rhsMax =  -1.95399252334028E-13  2.60675326094459E-01
 cg2d: Sum(rhs),rhsMax =  -1.95399252334028E-13  2.61289134077619E-01
 cg2d: Sum(rhs),rhsMax =  -1.79412040779425E-13  2.61951960772505E-01
 cg2d: Sum(rhs),rhsMax =  -1.68753899743024E-13  2.61643150871973E-01
 cg2d: Sum(rhs),rhsMax =  -1.33226762955019E-13  2.62127710252801E-01
 cg2d: Sum(rhs),rhsMax =  -1.11910480882216E-13  2.62786097594057E-01
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-14  2.62362626401418E-01
 cg2d: Sum(rhs),rhsMax =  -7.28306304154103E-14  2.63023530413146E-01
 cg2d: Sum(rhs),rhsMax =  -4.61852778244065E-14  2.63517064227178E-01
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-14  2.62818238189636E-01
 cg2d: Sum(rhs),rhsMax =  -1.77635683940025E-14  2.63923788659647E-01
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-15  2.64079896799083E-01
 cg2d: Sum(rhs),rhsMax =   5.32907051820075E-15  2.63720408833235E-01
 cg2d: Sum(rhs),rhsMax =   3.19744231092045E-14  2.64720309669882E-01
 cg2d: Sum(rhs),rhsMax =   3.90798504668055E-14  2.64358363423350E-01
 cg2d: Sum(rhs),rhsMax =   6.57252030578093E-14  2.64854800936275E-01
 cg2d: Sum(rhs),rhsMax =   7.28306304154103E-14  2.65260612767995E-01
 cg2d: Sum(rhs),rhsMax =   1.01252339845814E-13  2.64588266526004E-01
 cg2d: Sum(rhs),rhsMax =   1.15463194561016E-13  2.65738265369873E-01
 cg2d: Sum(rhs),rhsMax =   1.15463194561016E-13  2.65357869021730E-01
 cg2d: Sum(rhs),rhsMax =   1.13686837721616E-13  2.65878556770459E-01
 cg2d: Sum(rhs),rhsMax =   9.41469124882133E-14  2.66156939220933E-01
 cg2d: Sum(rhs),rhsMax =   1.26121335597418E-13  2.65759458848713E-01
 cg2d: Sum(rhs),rhsMax =   1.36779476633819E-13  2.66665876893491E-01
 cg2d: Sum(rhs),rhsMax =   1.56319401867222E-13  2.65876218012777E-01
 cg2d: Sum(rhs),rhsMax =   1.66977542903624E-13  2.66949070070082E-01
 cg2d: Sum(rhs),rhsMax =   1.79412040779425E-13  2.66694718208882E-01
 cg2d: Sum(rhs),rhsMax =   1.70530256582424E-13  2.67063209409256E-01
 cg2d: Sum(rhs),rhsMax =   1.66977542903624E-13  2.67309066905634E-01
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-13  2.67057605687007E-01
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-13  2.67765522444187E-01
 cg2d: Sum(rhs),rhsMax =   1.56319401867222E-13  2.66974621628717E-01
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-13  2.68104111272955E-01
 cg2d: Sum(rhs),rhsMax =   1.63424829224823E-13  2.67262866293037E-01
 cg2d: Sum(rhs),rhsMax =   1.95399252334028E-13  2.68358980553864E-01
 cg2d: Sum(rhs),rhsMax =   1.70530256582424E-13  2.67841290131225E-01
 cg2d: Sum(rhs),rhsMax =   1.59872115546023E-13  2.68558789529073E-01
 cg2d: Sum(rhs),rhsMax =   1.59872115546023E-13  2.68322718177698E-01
 cg2d: Sum(rhs),rhsMax =   1.38555833473220E-13  2.68727114319330E-01
 cg2d: Sum(rhs),rhsMax =   1.56319401867222E-13  2.68729357645867E-01
 cg2d: Sum(rhs),rhsMax =   1.24344978758018E-13  2.68882853792295E-01
 cg2d: Sum(rhs),rhsMax =   1.27897692436818E-13  2.69079045616804E-01
 cg2d: Sum(rhs),rhsMax =   8.17124146124115E-14  2.69040620599226E-01
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-14  2.69385570177694E-01
 cg2d: Sum(rhs),rhsMax =   6.03961325396085E-14  2.69211106034458E-01
 cg2d: Sum(rhs),rhsMax =   3.90798504668055E-14  2.69658985924488E-01
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-14  2.69401421695117E-01
 cg2d: Sum(rhs),rhsMax =   4.97379915032070E-14  2.69905912804029E-01
 cg2d: Sum(rhs),rhsMax =   5.32907051820075E-14  2.69615411128234E-01
 cg2d: Sum(rhs),rhsMax =   2.84217094304040E-14  2.70129816646739E-01
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-14  2.69853931449760E-01
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-15  2.70331271429705E-01
 cg2d: Sum(rhs),rhsMax =  -1.06581410364015E-14  2.70115108598476E-01
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-14  2.70508202938212E-01
 cg2d: Sum(rhs),rhsMax =  -4.61852778244065E-14  2.70394567266830E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-15  2.70656115411011E-01
 cg2d: Sum(rhs),rhsMax =  -1.06581410364015E-14  2.70685638824179E-01
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-14  2.70768303317221E-01
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-15  2.70979550728330E-01
 cg2d: Sum(rhs),rhsMax =  -1.06581410364015E-14  2.70836050830278E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-15  2.71265601061645E-01
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-14  2.70848822066920E-01
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-15  2.71531322290336E-01
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-14  2.70794445063752E-01
 cg2d: Sum(rhs),rhsMax =  -3.90798504668055E-14  2.71762638001948E-01
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-14  2.70659292140866E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-14  2.71944015632359E-01
 cg2d: Sum(rhs),rhsMax =  -3.90798504668055E-14  2.71155893796106E-01
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-14  2.72058619740464E-01
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-14  2.71648942914169E-01
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-15  2.72088468700273E-01
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-14  2.72085043964051E-01
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-14  2.72014598324363E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-14  2.72443545975201E-01
 cg2d: Sum(rhs),rhsMax =  -6.03961325396085E-14  2.71817238205324E-01
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-14  2.72702884338788E-01
 cg2d: Sum(rhs),rhsMax =  -6.39488462184090E-14  2.71648732554756E-01
 cg2d: Sum(rhs),rhsMax =  -1.10134124042816E-13  2.72840754940069E-01
 cg2d: Sum(rhs),rhsMax =  -9.59232693276135E-14  2.72294074739733E-01
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-14  2.72834331348028E-01
 cg2d: Sum(rhs),rhsMax =  -1.10134124042816E-13  2.72817703652857E-01
 cg2d: Sum(rhs),rhsMax =  -1.17239551400417E-13  2.72660561117168E-01
 cg2d: Sum(rhs),rhsMax =  -8.88178419700125E-14  2.73194753053862E-01
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-14  2.72296600151706E-01
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-14  2.73400427271909E-01
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-14  2.72682275097333E-01
 cg2d: Sum(rhs),rhsMax =  -5.32907051820075E-14  2.73410689301109E-01
 cg2d: Sum(rhs),rhsMax =  -5.32907051820075E-14  2.73306779460632E-01
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-14  2.73203209683309E-01
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-14  2.73732017150802E-01
 cg2d: Sum(rhs),rhsMax =  -8.88178419700125E-14  2.72758490628584E-01
 cg2d: Sum(rhs),rhsMax =  -1.13686837721616E-13  2.73936660941195E-01
 cg2d: Sum(rhs),rhsMax =  -1.03028696685215E-13  2.73376328416530E-01
 cg2d: Sum(rhs),rhsMax =  -8.52651282912120E-14  2.73902932818389E-01
 cg2d: Sum(rhs),rhsMax =  -7.81597009336110E-14  2.74034233867183E-01
 cg2d: Sum(rhs),rhsMax =  -6.39488462184090E-14  2.73616598059215E-01
 cg2d: Sum(rhs),rhsMax =  -9.23705556488130E-14  2.74456329276407E-01
 cg2d: Sum(rhs),rhsMax =  -6.03961325396085E-14  2.73612715834350E-01
 cg2d: Sum(rhs),rhsMax =  -6.75015598972095E-14  2.74627346878248E-01
 cg2d: Sum(rhs),rhsMax =  -4.61852778244065E-14  2.74529782224522E-01
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-14  2.74553032497940E-01
 cg2d: Sum(rhs),rhsMax =  -1.77635683940025E-14  2.75216223846551E-01
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-15  2.74247889184006E-01
 cg2d: Sum(rhs),rhsMax =   2.48689957516035E-14  2.75464761572744E-01
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-14  2.75288788033628E-01
 cg2d: Sum(rhs),rhsMax =   4.97379915032070E-14  2.75259993672525E-01
 cg2d: Sum(rhs),rhsMax =   6.39488462184090E-14  2.75888218924574E-01
 cg2d: Sum(rhs),rhsMax =   7.81597009336110E-14  2.74934738821366E-01
 cg2d: Sum(rhs),rhsMax =   7.46069872548105E-14  2.76008737235869E-01
 cg2d: Sum(rhs),rhsMax =   1.20792265079217E-13  2.75888112439025E-01
 cg2d: Sum(rhs),rhsMax =   9.94759830064140E-14  2.75614669694589E-01
 cg2d: Sum(rhs),rhsMax =   1.88293824976427E-13  2.76336435586672E-01
 cg2d: Sum(rhs),rhsMax =   1.49213974509621E-13  2.75525189349483E-01
 cg2d: Sum(rhs),rhsMax =   1.70530256582424E-13  2.76241247559927E-01
 cg2d: Sum(rhs),rhsMax =   2.02504679691629E-13  2.76299026819415E-01
 cg2d: Sum(rhs),rhsMax =   2.23820961764432E-13  2.75566892424058E-01
 cg2d: Sum(rhs),rhsMax =   2.27373675443232E-13  2.76500159120497E-01
 cg2d: Sum(rhs),rhsMax =   2.23820961764432E-13  2.75948725086482E-01
 cg2d: Sum(rhs),rhsMax =   2.34479102800833E-13  2.76090175905741E-01
 cg2d: Sum(rhs),rhsMax =   2.16715534406831E-13  2.76439356534272E-01
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-13  2.75333720007425E-01
 cg2d: Sum(rhs),rhsMax =   2.20268248085631E-13  2.76286600155945E-01
 cg2d: Sum(rhs),rhsMax =   2.20268248085631E-13  2.76103201581136E-01
 cg2d: Sum(rhs),rhsMax =   2.20268248085631E-13  2.75453106401417E-01
 cg2d: Sum(rhs),rhsMax =   2.45137243837235E-13  2.76196715290684E-01
 cg2d: Sum(rhs),rhsMax =   2.41584530158434E-13  2.75532315337202E-01
 cg2d: Sum(rhs),rhsMax =   2.41584530158434E-13  2.75574176836441E-01
 cg2d: Sum(rhs),rhsMax =   2.59348098552437E-13  2.75857713739051E-01
 cg2d: Sum(rhs),rhsMax =   2.52242671194836E-13  2.74763567159363E-01
 cg2d: Sum(rhs),rhsMax =   2.27373675443232E-13  2.75431339401890E-01
 cg2d: Sum(rhs),rhsMax =   2.45137243837235E-13  2.75303407403431E-01
 cg2d: Sum(rhs),rhsMax =   2.23820961764432E-13  2.74215696766735E-01
 cg2d: Sum(rhs),rhsMax =   2.38031816479634E-13  2.75055326995207E-01
 cg2d: Sum(rhs),rhsMax =   2.16715534406831E-13  2.74564326394870E-01
 cg2d: Sum(rhs),rhsMax =   2.41584530158434E-13  2.73979327157561E-01
 cg2d: Sum(rhs),rhsMax =   2.09610107049230E-13  2.74473962035561E-01
 cg2d: Sum(rhs),rhsMax =   2.23820961764432E-13  2.73667952559980E-01
 cg2d: Sum(rhs),rhsMax =   2.48689957516035E-13  2.73516609137820E-01
 cg2d: Sum(rhs),rhsMax =   2.23820961764432E-13  2.73712451814379E-01
 cg2d: Sum(rhs),rhsMax =   2.20268248085631E-13  2.72639141159148E-01
 cg2d: Sum(rhs),rhsMax =   2.20268248085631E-13  2.72850653460314E-01
 cg2d: Sum(rhs),rhsMax =   2.59348098552437E-13  2.72794021833479E-01
 cg2d: Sum(rhs),rhsMax =   2.55795384873636E-13  2.71500932366559E-01
 cg2d: Sum(rhs),rhsMax =   2.59348098552437E-13  2.72003750111519E-01
 cg2d: Sum(rhs),rhsMax =   2.73558953267639E-13  2.71741462478564E-01
 cg2d: Sum(rhs),rhsMax =   2.55795384873636E-13  2.70276473780437E-01
 cg2d: Sum(rhs),rhsMax =   2.70006239588838E-13  2.71000858116920E-01
 cg2d: Sum(rhs),rhsMax =   3.01980662698043E-13  2.70581437578924E-01
 cg2d: Sum(rhs),rhsMax =   2.73558953267639E-13  2.69249432789477E-01
 cg2d: Sum(rhs),rhsMax =   2.87769807982841E-13  2.69879807827394E-01
 cg2d: Sum(rhs),rhsMax =   2.94875235340442E-13  2.69356831036973E-01
 cg2d: Sum(rhs),rhsMax =   2.73558953267639E-13  2.68164310193707E-01
 cg2d: Sum(rhs),rhsMax =   2.94875235340442E-13  2.68719400524780E-01
 cg2d: Sum(rhs),rhsMax =   2.94875235340442E-13  2.68159927787160E-01
 cg2d: Sum(rhs),rhsMax =   2.80664380625240E-13  2.67137673029266E-01
 cg2d: Sum(rhs),rhsMax =   2.87769807982841E-13  2.67708146752655E-01
 cg2d: Sum(rhs),rhsMax =   3.05533376376843E-13  2.67211147646161E-01
 cg2d: Sum(rhs),rhsMax =   3.26849658449646E-13  2.66551765107647E-01
 cg2d: Sum(rhs),rhsMax =   3.33955085807247E-13  2.67286803315530E-01
 cg2d: Sum(rhs),rhsMax =   3.65929508916452E-13  2.67016113317866E-01
 cg2d: Sum(rhs),rhsMax =   3.87245790989255E-13  2.67233199794380E-01
 cg2d: Sum(rhs),rhsMax =   4.44089209850063E-13  2.68383406519673E-01
 cg2d: Sum(rhs),rhsMax =   4.61852778244065E-13  2.68610558307670E-01
 cg2d: Sum(rhs),rhsMax =   4.22772927777260E-13  2.70727538582035E-01
 cg2d: Sum(rhs),rhsMax =   4.26325641456060E-13  2.72676025917555E-01
 cg2d: Sum(rhs),rhsMax =   4.61852778244065E-13  2.76627040798181E-01
 cg2d: Sum(rhs),rhsMax =   4.79616346638068E-13  2.80506868943121E-01
 cg2d: Sum(rhs),rhsMax =   4.51194637207664E-13  2.86943393582837E-01
 cg2d: Sum(rhs),rhsMax =   4.68958205601666E-13  2.94286313428980E-01
 cg2d: Sum(rhs),rhsMax =   4.51194637207664E-13  3.03160903965402E-01
 cg2d: Sum(rhs),rhsMax =   4.61852778244065E-13  3.14544669524079E-01
 cg2d: Sum(rhs),rhsMax =   4.93827201353270E-13  3.27845047169283E-01
 cg2d: Sum(rhs),rhsMax =   4.68958205601666E-13  3.42010916724703E-01
 cg2d: Sum(rhs),rhsMax =   5.11590769747272E-13  3.55438303118628E-01
 cg2d: Sum(rhs),rhsMax =   4.76063632959267E-13  3.68003193816032E-01
 cg2d: Sum(rhs),rhsMax =   4.65405491922866E-13  3.79588400705763E-01
 cg2d: Sum(rhs),rhsMax =   4.19220214098459E-13  3.90085608474529E-01
 cg2d: Sum(rhs),rhsMax =   3.90798504668055E-13  3.99397296861147E-01
 cg2d: Sum(rhs),rhsMax =   3.73034936274053E-13  4.07438488111129E-01
 cg2d: Sum(rhs),rhsMax =   3.44613226843649E-13  4.14138274833753E-01
 cg2d: Sum(rhs),rhsMax =   3.51718654201250E-13  4.19441088837814E-01
 cg2d: Sum(rhs),rhsMax =   3.76587649952853E-13  4.23307678162884E-01
 cg2d: Sum(rhs),rhsMax =   3.97903932025656E-13  4.25715767241289E-01
 cg2d: Sum(rhs),rhsMax =   3.76587649952853E-13  4.27577151749806E-01
 cg2d: Sum(rhs),rhsMax =   4.05009359383257E-13  4.28080384812164E-01
 cg2d: Sum(rhs),rhsMax =   4.05009359383257E-13  4.27141572631676E-01
 cg2d: Sum(rhs),rhsMax =   4.40536496171262E-13  4.24794857215802E-01
 cg2d: Sum(rhs),rhsMax =   4.44089209850063E-13  4.21090268846417E-01
 cg2d: Sum(rhs),rhsMax =   4.54747350886464E-13  4.16092658037592E-01
 cg2d: Sum(rhs),rhsMax =   4.97379915032070E-13  4.09880360934212E-01
 cg2d: Sum(rhs),rhsMax =   5.36459765498876E-13  4.02543634817161E-01
 cg2d: Sum(rhs),rhsMax =   6.11066752753686E-13  3.94182905737642E-01
 cg2d: Sum(rhs),rhsMax =   6.35935748505290E-13  3.84906874242590E-01
 cg2d: Sum(rhs),rhsMax =   7.03437308402499E-13  3.74830527573589E-01
 cg2d: Sum(rhs),rhsMax =   7.63833440942108E-13  3.64073107583423E-01
 cg2d: Sum(rhs),rhsMax =   8.49098569233320E-13  3.52756082881197E-01
 cg2d: Sum(rhs),rhsMax =   9.30810983845731E-13  3.41001171932309E-01
 cg2d: Sum(rhs),rhsMax =   1.01962882581574E-12  3.28928457711717E-01
 cg2d: Sum(rhs),rhsMax =   1.02673425317334E-12  3.16654637050695E-01
 cg2d: Sum(rhs),rhsMax =   1.05870867628255E-12  3.04291437276574E-01
 cg2d: Sum(rhs),rhsMax =   1.11199938146456E-12  2.91944218878488E-01
 cg2d: Sum(rhs),rhsMax =   1.12265752250096E-12  2.79710794144932E-01
 cg2d: Sum(rhs),rhsMax =   1.19726450975577E-12  2.67680470352612E-01
 cg2d: Sum(rhs),rhsMax =   1.22213350550737E-12  2.55933320811957E-01
 cg2d: Sum(rhs),rhsMax =   1.29674049276218E-12  2.44539686411910E-01
 cg2d: Sum(rhs),rhsMax =   1.32160948851379E-12  2.33559901467491E-01
 cg2d: Sum(rhs),rhsMax =   1.39266376208980E-12  2.23976351604477E-01
 cg2d: Sum(rhs),rhsMax =   1.39266376208980E-12  2.21191421393251E-01
 cg2d: Sum(rhs),rhsMax =   1.36424205265939E-12  2.18995742502052E-01
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-12  2.17540338650303E-01
 cg2d: Sum(rhs),rhsMax =   1.35003119794419E-12  2.16125246552520E-01
 cg2d: Sum(rhs),rhsMax =   1.35003119794419E-12  2.15220298112364E-01
 cg2d: Sum(rhs),rhsMax =   1.32871491587139E-12  2.13914146838798E-01
 cg2d: Sum(rhs),rhsMax =   1.29318777908338E-12  2.13430636337611E-01
 cg2d: Sum(rhs),rhsMax =   1.27187149701058E-12  2.12527450713421E-01
 cg2d: Sum(rhs),rhsMax =   1.26476606965298E-12  2.11802086600115E-01
 cg2d: Sum(rhs),rhsMax =   1.27187149701058E-12  2.11254594449565E-01
 cg2d: Sum(rhs),rhsMax =   1.25766064229538E-12  2.10301454432851E-01
 cg2d: Sum(rhs),rhsMax =   1.24344978758018E-12  2.09953706581631E-01
 cg2d: Sum(rhs),rhsMax =   1.22213350550737E-12  2.09323884318913E-01
 cg2d: Sum(rhs),rhsMax =   1.15818465928896E-12  2.08569202520285E-01
 cg2d: Sum(rhs),rhsMax =   1.12976294985856E-12  2.08238658065893E-01
 cg2d: Sum(rhs),rhsMax =   1.05870867628255E-12  2.07520303338612E-01
 cg2d: Sum(rhs),rhsMax =   1.02318153949454E-12  2.07022947332984E-01
 cg2d: Sum(rhs),rhsMax =   9.94759830064140E-13  2.06586076756229E-01
 cg2d: Sum(rhs),rhsMax =   9.59232693276135E-13  2.05776124201344E-01
 cg2d: Sum(rhs),rhsMax =   9.94759830064140E-13  2.05492122738729E-01
 cg2d: Sum(rhs),rhsMax =   9.45021838560933E-13  2.04947552632138E-01
 cg2d: Sum(rhs),rhsMax =   8.73967564984923E-13  2.04236363389323E-01
 cg2d: Sum(rhs),rhsMax =   8.81072992342524E-13  2.03940275085451E-01
 cg2d: Sum(rhs),rhsMax =   8.81072992342524E-13  2.03287192663979E-01
 cg2d: Sum(rhs),rhsMax =   8.17124146124115E-13  2.02757505086930E-01
 cg2d: Sum(rhs),rhsMax =   7.95807864051312E-13  2.02339891213594E-01
 cg2d: Sum(rhs),rhsMax =   7.53175299905706E-13  2.01577965928619E-01
 cg2d: Sum(rhs),rhsMax =   6.67910171614494E-13  2.01209229437830E-01
 cg2d: Sum(rhs),rhsMax =   6.60804744256893E-13  2.00670541707974E-01
 cg2d: Sum(rhs),rhsMax =   6.39488462184090E-13  1.99905242248249E-01
 cg2d: Sum(rhs),rhsMax =   6.75015598972095E-13  1.99576466531026E-01
 cg2d: Sum(rhs),rhsMax =   6.32383034826489E-13  1.98917563805909E-01
 cg2d: Sum(rhs),rhsMax =   5.25801624462474E-13  1.98307992403254E-01
 cg2d: Sum(rhs),rhsMax =   5.61328761250479E-13  1.97848933749517E-01
 cg2d: Sum(rhs),rhsMax =   5.47117906535277E-13  1.97071107031833E-01
 cg2d: Sum(rhs),rhsMax =   5.75539615965681E-13  1.96607923846362E-01
 cg2d: Sum(rhs),rhsMax =   4.97379915032070E-13  1.96020386573266E-01
 cg2d: Sum(rhs),rhsMax =   5.54223333892878E-13  1.95209662672380E-01
 cg2d: Sum(rhs),rhsMax =   5.47117906535277E-13  1.94801810556230E-01
 cg2d: Sum(rhs),rhsMax =   5.96855898038484E-13  1.94088010985227E-01
 cg2d: Sum(rhs),rhsMax =   6.46593889541691E-13  1.93431387805204E-01
 cg2d: Sum(rhs),rhsMax =   6.32383034826489E-13  1.92889344405417E-01
 cg2d: Sum(rhs),rhsMax =   5.89750470680883E-13  1.92051935905500E-01
 cg2d: Sum(rhs),rhsMax =   6.25277607468888E-13  1.91545980660420E-01
 cg2d: Sum(rhs),rhsMax =   6.96331881044898E-13  1.90872736948515E-01
 cg2d: Sum(rhs),rhsMax =   6.03961325396085E-13  1.90074897711281E-01
 cg2d: Sum(rhs),rhsMax =   6.96331881044898E-13  1.89557355639771E-01
 cg2d: Sum(rhs),rhsMax =   7.88702436693711E-13  1.88756313065500E-01
 cg2d: Sum(rhs),rhsMax =   7.46069872548105E-13  1.88122825129191E-01
 cg2d: Sum(rhs),rhsMax =   8.24229573481716E-13  1.87471059950791E-01
 cg2d: Sum(rhs),rhsMax =   8.38440428196918E-13  1.86585972324317E-01
 cg2d: Sum(rhs),rhsMax =   8.31335000839317E-13  1.86075800608431E-01
 cg2d: Sum(rhs),rhsMax =   8.31335000839317E-13  1.85293681293037E-01
 cg2d: Sum(rhs),rhsMax =   8.38440428196918E-13  1.84586663602207E-01
 cg2d: Sum(rhs),rhsMax =   8.38440428196918E-13  1.83940435362349E-01
 cg2d: Sum(rhs),rhsMax =   8.38440428196918E-13  1.83032030424028E-01
 cg2d: Sum(rhs),rhsMax =   8.24229573481716E-13  1.82501435583987E-01
 cg2d: Sum(rhs),rhsMax =   7.88702436693711E-13  1.81723072282004E-01
 cg2d: Sum(rhs),rhsMax =   8.24229573481716E-13  1.80991664934205E-01
 cg2d: Sum(rhs),rhsMax =   7.74491581978509E-13  1.80336525587173E-01
 cg2d: Sum(rhs),rhsMax =   7.31859017832903E-13  1.79432397793121E-01
 cg2d: Sum(rhs),rhsMax =   7.31859017832903E-13  1.78893496467767E-01
 cg2d: Sum(rhs),rhsMax =   6.60804744256893E-13  1.78104459034365E-01
 cg2d: Sum(rhs),rhsMax =   6.39488462184090E-13  1.77354329160052E-01
 cg2d: Sum(rhs),rhsMax =   6.46593889541691E-13  1.76676567607083E-01
 cg2d: Sum(rhs),rhsMax =   5.89750470680883E-13  1.75757923875870E-01
 cg2d: Sum(rhs),rhsMax =   5.75539615965681E-13  1.75165802931667E-01
 cg2d: Sum(rhs),rhsMax =   6.03961325396085E-13  1.74353405895430E-01
 cg2d: Sum(rhs),rhsMax =   5.61328761250479E-13  1.73585030311959E-01
 cg2d: Sum(rhs),rhsMax =   5.11590769747272E-13  1.72872893549979E-01
 cg2d: Sum(rhs),rhsMax =   4.97379915032070E-13  1.71946488493288E-01
 cg2d: Sum(rhs),rhsMax =   5.11590769747272E-13  1.71328549749862E-01
 cg2d: Sum(rhs),rhsMax =   5.11590769747272E-13  1.70481807556407E-01
 cg2d: Sum(rhs),rhsMax =   5.47117906535277E-13  1.69731606140370E-01
 cg2d: Sum(rhs),rhsMax =   5.40012479177676E-13  1.68974778721359E-01
 cg2d: Sum(rhs),rhsMax =   5.82645043323282E-13  1.68092340675331E-01
 cg2d: Sum(rhs),rhsMax =   5.25801624462474E-13  1.67419705699113E-01
 cg2d: Sum(rhs),rhsMax =   5.61328761250479E-13  1.66529070538195E-01
 cg2d: Sum(rhs),rhsMax =   5.89750470680883E-13  1.65825975735833E-01
 cg2d: Sum(rhs),rhsMax =   5.54223333892878E-13  1.65015558017361E-01
 cg2d: Sum(rhs),rhsMax =   5.82645043323282E-13  1.64202148002207E-01
 cg2d: Sum(rhs),rhsMax =   6.11066752753686E-13  1.63466576907231E-01
 cg2d: Sum(rhs),rhsMax =   6.18172180111287E-13  1.62555987505377E-01
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-13  1.61889926687555E-01
 cg2d: Sum(rhs),rhsMax =   5.47117906535277E-13  1.61018527106585E-01
 cg2d: Sum(rhs),rhsMax =   5.89750470680883E-13  1.60292673325697E-01
 cg2d: Sum(rhs),rhsMax =   5.75539615965681E-13  1.59487435769582E-01
 cg2d: Sum(rhs),rhsMax =   5.82645043323282E-13  1.58681151227061E-01
 cg2d: Sum(rhs),rhsMax =   6.03961325396085E-13  1.57937092625897E-01
 cg2d: Sum(rhs),rhsMax =   5.40012479177676E-13  1.57060977689836E-01
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-13  1.56373176114614E-01
 cg2d: Sum(rhs),rhsMax =   5.54223333892878E-13  1.55493076512871E-01
 cg2d: Sum(rhs),rhsMax =   5.61328761250479E-13  1.54800685372634E-01
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-13  1.53974038152237E-01
 cg2d: Sum(rhs),rhsMax =   5.96855898038484E-13  1.53223980649387E-01
 cg2d: Sum(rhs),rhsMax =   6.18172180111287E-13  1.52446202848304E-01
 cg2d: Sum(rhs),rhsMax =   6.53699316899292E-13  1.51646813505933E-01
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-13  1.50913407224516E-01
 cg2d: Sum(rhs),rhsMax =   6.11066752753686E-13  1.50072354617840E-01
 cg2d: Sum(rhs),rhsMax =   7.24753590475302E-13  1.49378915530903E-01
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-13  1.48508765569448E-01
 cg2d: Sum(rhs),rhsMax =   6.25277607468888E-13  1.47845420130192E-01
 cg2d: Sum(rhs),rhsMax =   6.39488462184090E-13  1.47013175740444E-01
 cg2d: Sum(rhs),rhsMax =   5.96855898038484E-13  1.46315019890856E-01
 cg2d: Sum(rhs),rhsMax =   6.82121026329696E-13  1.45516563262153E-01
 cg2d: Sum(rhs),rhsMax =   5.82645043323282E-13  1.44789191016845E-01
 cg2d: Sum(rhs),rhsMax =   6.11066752753686E-13  1.44020463073131E-01
 cg2d: Sum(rhs),rhsMax =   5.82645043323282E-13  1.43268748194668E-01
 cg2d: Sum(rhs),rhsMax =   5.96855898038484E-13  1.42525737671529E-01
 cg2d: Sum(rhs),rhsMax =   5.11590769747272E-13  1.41753810847140E-01
 cg2d: Sum(rhs),rhsMax =   5.54223333892878E-13  1.41032541192930E-01
 cg2d: Sum(rhs),rhsMax =   5.25801624462474E-13  1.40243758132694E-01
 cg2d: Sum(rhs),rhsMax =   5.11590769747272E-13  1.39540274029903E-01
 cg2d: Sum(rhs),rhsMax =   4.83169060316868E-13  1.38737203589898E-01
 cg2d: Sum(rhs),rhsMax =   4.97379915032070E-13  1.38047561694374E-01
 cg2d: Sum(rhs),rhsMax =   4.26325641456060E-13  1.37231995132240E-01
 cg2d: Sum(rhs),rhsMax =   3.83693077310454E-13  1.36552266046294E-01
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-13  1.35725271199562E-01
 cg2d: Sum(rhs),rhsMax =   4.12114786740858E-13  1.35051559574685E-01
 cg2d: Sum(rhs),rhsMax =   3.12638803734444E-13  1.34229816050462E-01
 cg2d: Sum(rhs),rhsMax =   2.55795384873636E-13  1.33542080789627E-01
 cg2d: Sum(rhs),rhsMax =   3.83693077310454E-13  1.32725161648897E-01
 cg2d: Sum(rhs),rhsMax =   3.41060513164848E-13  1.32020161331655E-01
 cg2d: Sum(rhs),rhsMax =   2.27373675443232E-13  1.31204450329528E-01
 cg2d: Sum(rhs),rhsMax =   2.70006239588838E-13  1.30482092776107E-01
 cg2d: Sum(rhs),rhsMax =   2.27373675443232E-13  1.29664187375942E-01
 cg2d: Sum(rhs),rhsMax =   3.41060513164848E-13  1.28924392192469E-01
 cg2d: Sum(rhs),rhsMax =   2.98427949019242E-13  1.28101163536940E-01
 cg2d: Sum(rhs),rhsMax =   2.98427949019242E-13  1.28059819239819E-01
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-13  1.28075228932017E-01
 cg2d: Sum(rhs),rhsMax =   2.41584530158434E-13  1.28087799717169E-01
 cg2d: Sum(rhs),rhsMax =   1.98951966012828E-13  1.28097605103823E-01
 cg2d: Sum(rhs),rhsMax =   1.98951966012828E-13  1.28104717618630E-01
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-13  1.28109208638768E-01
 cg2d: Sum(rhs),rhsMax =   1.70530256582424E-13  1.28111148236656E-01
 cg2d: Sum(rhs),rhsMax =   2.55795384873636E-13  1.28110605038066E-01
 cg2d: Sum(rhs),rhsMax =   2.84217094304040E-13  1.28107646094692E-01
 cg2d: Sum(rhs),rhsMax =   2.55795384873636E-13  1.28102336772084E-01
 cg2d: Sum(rhs),rhsMax =   1.27897692436818E-13  1.28094740653879E-01
 cg2d: Sum(rhs),rhsMax =   1.84741111297626E-13  1.28084919463004E-01
 cg2d: Sum(rhs),rhsMax =   2.70006239588838E-13  1.28072933000435E-01
 cg2d: Sum(rhs),rhsMax =   1.84741111297626E-13  1.28058839101879E-01
 cg2d: Sum(rhs),rhsMax =   2.27373675443232E-13  1.28042693612605E-01
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-13  1.28024550380407E-01
 cg2d: Sum(rhs),rhsMax =   9.94759830064140E-14  1.28004461266534E-01
 cg2d: Sum(rhs),rhsMax =   1.70530256582424E-13  1.27982476174217E-01
 cg2d: Sum(rhs),rhsMax =   1.56319401867222E-13  1.27958643094235E-01
 cg2d: Sum(rhs),rhsMax =   2.84217094304040E-14  1.27933008166803E-01
 cg2d: Sum(rhs),rhsMax =   2.84217094304040E-14  1.27905615758912E-01
 cg2d: Sum(rhs),rhsMax =   8.52651282912120E-14  1.27876508556062E-01
 cg2d: Sum(rhs),rhsMax =   0.00000000000000E+00  1.27845727667228E-01
 cg2d: Sum(rhs),rhsMax =  -5.68434188608080E-14  1.27813312741732E-01
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-14  1.27779302096572E-01
 cg2d: Sum(rhs),rhsMax =   4.26325641456060E-14  1.27743732852618E-01
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-14  1.27706641077752E-01
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-14  1.27668061936257E-01
 cg2d: Sum(rhs),rhsMax =  -1.27897692436818E-13  1.27628029842029E-01
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-14  1.27586578613743E-01
 cg2d: Sum(rhs),rhsMax =  -1.56319401867222E-13  1.27543741627651E-01
 cg2d: Sum(rhs),rhsMax =  -1.70530256582424E-13  1.27499551970393E-01
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-14  1.27454042596636E-01
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-13  1.27407246476706E-01
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-13  1.27359196740214E-01
 cg2d: Sum(rhs),rhsMax =  -2.98427949019242E-13  1.27309926809889E-01
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-13  1.27259470525272E-01
 cg2d: Sum(rhs),rhsMax =  -1.98951966012828E-13  1.27207862257552E-01
 cg2d: Sum(rhs),rhsMax =  -1.70530256582424E-13  1.27155137014944E-01
 cg2d: Sum(rhs),rhsMax =  -2.70006239588838E-13  1.27101330537971E-01
 cg2d: Sum(rhs),rhsMax =  -2.98427949019242E-13  1.27046479384028E-01
 cg2d: Sum(rhs),rhsMax =  -3.26849658449646E-13  1.26990621000653E-01
 cg2d: Sum(rhs),rhsMax =  -3.41060513164848E-13  1.26933793787092E-01
 cg2d: Sum(rhs),rhsMax =  -3.69482222595252E-13  1.26876037143475E-01
 cg2d: Sum(rhs),rhsMax =  -3.41060513164848E-13  1.26817391507882E-01
 cg2d: Sum(rhs),rhsMax =  -5.11590769747272E-13  1.26757898381464E-01
 cg2d: Sum(rhs),rhsMax =  -3.83693077310454E-13  1.26697600341952E-01
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.26636541046052E-01
 cg2d: Sum(rhs),rhsMax =  -4.54747350886464E-13  1.26574765221298E-01
 cg2d: Sum(rhs),rhsMax =  -4.68958205601666E-13  1.26512318648041E-01
 cg2d: Sum(rhs),rhsMax =  -4.83169060316868E-13  1.26449248132279E-01
 cg2d: Sum(rhs),rhsMax =  -4.83169060316868E-13  1.26385601470092E-01
 cg2d: Sum(rhs),rhsMax =  -4.83169060316868E-13  1.26321427404482E-01
 cg2d: Sum(rhs),rhsMax =  -4.40536496171262E-13  1.26256775575394E-01
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.26191696463771E-01
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.26126241330391E-01
 cg2d: Sum(rhs),rhsMax =  -3.41060513164848E-13  1.26060462150332E-01
 cg2d: Sum(rhs),rhsMax =  -3.12638803734444E-13  1.25994411543913E-01
 cg2d: Sum(rhs),rhsMax =  -4.12114786740858E-13  1.25928142704841E-01
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.25861709326325E-01
 cg2d: Sum(rhs),rhsMax =  -3.41060513164848E-13  1.25795165525763E-01
 cg2d: Sum(rhs),rhsMax =  -4.12114786740858E-13  1.25728565768639E-01
 cg2d: Sum(rhs),rhsMax =  -3.97903932025656E-13  1.25661964792262E-01
 cg2d: Sum(rhs),rhsMax =  -3.41060513164848E-13  1.25595417529615E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-13  1.25528979033713E-01
 cg2d: Sum(rhs),rhsMax =  -3.26849658449646E-13  1.25462704402825E-01
 cg2d: Sum(rhs),rhsMax =  -2.98427949019242E-13  1.25396648706837E-01
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.25330866914988E-01
 cg2d: Sum(rhs),rhsMax =  -3.69482222595252E-13  1.25265413825119E-01
 cg2d: Sum(rhs),rhsMax =  -3.12638803734444E-13  1.25200343994471E-01
 cg2d: Sum(rhs),rhsMax =  -3.69482222595252E-13  1.25135711671998E-01
 cg2d: Sum(rhs),rhsMax =  -4.12114786740858E-13  1.25071570732068E-01
 cg2d: Sum(rhs),rhsMax =  -4.40536496171262E-13  1.25007974609349E-01
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.24944976234637E-01
 cg2d: Sum(rhs),rhsMax =  -4.12114786740858E-13  1.24882627971327E-01
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.24820981552188E-01
 cg2d: Sum(rhs),rhsMax =  -4.83169060316868E-13  1.24760088016071E-01
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.24699997644163E-01
 cg2d: Sum(rhs),rhsMax =  -3.97903932025656E-13  1.24640759895385E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-13  1.24582423340489E-01
 cg2d: Sum(rhs),rhsMax =  -3.41060513164848E-13  1.24525035594460E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-13  1.24468643246766E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-13  1.24413291789069E-01
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-13  1.24359025539991E-01
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-13  1.24305887566555E-01
 cg2d: Sum(rhs),rhsMax =  -3.69482222595252E-13  1.24253919601985E-01
 cg2d: Sum(rhs),rhsMax =  -2.98427949019242E-13  1.24203161959546E-01
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-13  1.24153653442199E-01
 cg2d: Sum(rhs),rhsMax =  -2.70006239588838E-13  1.24105431247862E-01
 cg2d: Sum(rhs),rhsMax =  -2.55795384873636E-13  1.24058530870140E-01
 cg2d: Sum(rhs),rhsMax =  -3.41060513164848E-13  1.24012985994451E-01
 cg2d: Sum(rhs),rhsMax =  -3.26849658449646E-13  1.23968828389546E-01
 cg2d: Sum(rhs),rhsMax =  -2.41584530158434E-13  1.23926087794464E-01
 cg2d: Sum(rhs),rhsMax =  -2.70006239588838E-13  1.23884791801072E-01
 cg2d: Sum(rhs),rhsMax =  -2.20268248085631E-13  1.23844965732381E-01
 cg2d: Sum(rhs),rhsMax =  -2.27373675443232E-13  1.23806632516951E-01
 cg2d: Sum(rhs),rhsMax =  -1.13686837721616E-13  1.23769812559742E-01
 cg2d: Sum(rhs),rhsMax =  -1.49213974509621E-13  1.23734523609877E-01
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-13  1.23700780625825E-01
 cg2d: Sum(rhs),rhsMax =  -7.81597009336110E-14  1.23668595638648E-01
 cg2d: Sum(rhs),rhsMax =  -8.52651282912120E-14  1.23637977614023E-01
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-14  1.23608932313823E-01
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-14  1.23581462158141E-01
 cg2d: Sum(rhs),rhsMax =   1.70530256582424E-13  1.23555566088697E-01
 cg2d: Sum(rhs),rhsMax =   1.20792265079217E-13  1.23531239434657E-01
 cg2d: Sum(rhs),rhsMax =   1.84741111297626E-13  1.23508473781966E-01
 cg2d: Sum(rhs),rhsMax =   2.48689957516035E-13  1.23487256847356E-01
 cg2d: Sum(rhs),rhsMax =   2.62900812231237E-13  1.23467572358238E-01
 cg2d: Sum(rhs),rhsMax =   3.19744231092045E-13  1.23449399939745E-01
 cg2d: Sum(rhs),rhsMax =   4.12114786740858E-13  1.23432715010227E-01
 cg2d: Sum(rhs),rhsMax =   4.12114786740858E-13  1.23417488686496E-01
 cg2d: Sum(rhs),rhsMax =   4.47641923528863E-13  1.23403687700165E-01
 cg2d: Sum(rhs),rhsMax =   4.90274487674469E-13  1.23391274326366E-01
 cg2d: Sum(rhs),rhsMax =   5.04485342389671E-13  1.23380206326139E-01
 cg2d: Sum(rhs),rhsMax =   5.40012479177676E-13  1.23370436903732E-01
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-13  1.23361914679961E-01
 cg2d: Sum(rhs),rhsMax =   5.40012479177676E-13  1.23354583682735E-01
 cg2d: Sum(rhs),rhsMax =   5.18696197104873E-13  1.23348383355708E-01
 cg2d: Sum(rhs),rhsMax =   5.47117906535277E-13  1.23343248585916E-01
 cg2d: Sum(rhs),rhsMax =   5.32907051820075E-13  1.23339109751127E-01
 cg2d: Sum(rhs),rhsMax =   5.61328761250479E-13  1.23335892787430E-01
 cg2d: Sum(rhs),rhsMax =   5.32907051820075E-13  1.23333519277578E-01
 cg2d: Sum(rhs),rhsMax =   5.68434188608080E-13  1.23331906559957E-01
 cg2d: Sum(rhs),rhsMax =   5.96855898038484E-13  1.23330967858384E-01
 cg2d: Sum(rhs),rhsMax =   5.96855898038484E-13  1.23330612432540E-01
 cg2d: Sum(rhs),rhsMax =   6.11066752753686E-13  1.23330745748716E-01
 cg2d: Sum(rhs),rhsMax =   6.25277607468888E-13  1.23331269671434E-01
 cg2d: Sum(rhs),rhsMax =   6.75015598972095E-13  1.23332082672502E-01
 cg2d: Sum(rhs),rhsMax =   6.96331881044898E-13  1.23333080056199E-01
 cg2d: Sum(rhs),rhsMax =   7.03437308402499E-13  1.23334154201168E-01
 cg2d: Sum(rhs),rhsMax =   7.31859017832903E-13  1.23335194817678E-01
 cg2d: Sum(rhs),rhsMax =   7.67386154620908E-13  1.23336089218643E-01
 cg2d: Sum(rhs),rhsMax =   8.24229573481716E-13  1.23336722602590E-01
 cg2d: Sum(rhs),rhsMax =   7.81597009336110E-13  1.23336978346562E-01
 cg2d: Sum(rhs),rhsMax =   7.95807864051312E-13  1.23336738306863E-01
 cg2d: Sum(rhs),rhsMax =   8.31335000839317E-13  1.23335883125492E-01
 cg2d: Sum(rhs),rhsMax =   8.38440428196918E-13  1.23334292540146E-01
 cg2d: Sum(rhs),rhsMax =   7.74491581978509E-13  1.23331845695672E-01
 cg2d: Sum(rhs),rhsMax =   7.67386154620908E-13  1.23328421454887E-01
 cg2d: Sum(rhs),rhsMax =   7.88702436693711E-13  1.23323898706764E-01
 cg2d: Sum(rhs),rhsMax =   7.95807864051312E-13  1.23318156670022E-01
 cg2d: Sum(rhs),rhsMax =   8.17124146124115E-13  1.23311075190291E-01
 cg2d: Sum(rhs),rhsMax =   7.67386154620908E-13  1.23302535029084E-01
 cg2d: Sum(rhs),rhsMax =   7.88702436693711E-13  1.23292418142960E-01
 cg2d: Sum(rhs),rhsMax =   8.73967564984923E-13  1.23280607951408E-01
 cg2d: Sum(rhs),rhsMax =   9.59232693276135E-13  1.23266989592120E-01
 cg2d: Sum(rhs),rhsMax =   9.37916411203332E-13  1.23251450162523E-01
 cg2d: Sum(rhs),rhsMax =   9.66338120633736E-13  1.23233878946592E-01
 cg2d: Sum(rhs),rhsMax =   1.02318153949454E-12  1.23214167626166E-01
 cg2d: Sum(rhs),rhsMax =   1.04449782156735E-12  1.23192210476167E-01
 cg2d: Sum(rhs),rhsMax =   1.10134124042816E-12  1.23167904543295E-01
 cg2d: Sum(rhs),rhsMax =   1.13686837721616E-12  1.23141149807908E-01
 cg2d: Sum(rhs),rhsMax =   1.17239551400417E-12  1.23111849328987E-01
 cg2d: Sum(rhs),rhsMax =   1.15818465928896E-12  1.23079909372165E-01
 cg2d: Sum(rhs),rhsMax =   1.14397380457376E-12  1.23045239520936E-01
 cg2d: Sum(rhs),rhsMax =   1.21502807814977E-12  1.23007752771242E-01
 cg2d: Sum(rhs),rhsMax =   1.19371179607697E-12  1.22967365611377E-01
 cg2d: Sum(rhs),rhsMax =   1.27187149701058E-12  1.22923998085159E-01
 cg2d: Sum(rhs),rhsMax =   1.27187149701058E-12  1.22877573836814E-01
 cg2d: Sum(rhs),rhsMax =   1.25766064229538E-12  1.22828020140666E-01
 cg2d: Sum(rhs),rhsMax =   1.16529008664656E-12  1.22775267916121E-01
 cg2d: Sum(rhs),rhsMax =   1.17950094136177E-12  1.22719251728308E-01
 cg2d: Sum(rhs),rhsMax =   1.13686837721616E-12  1.22659909774584E-01
 cg2d: Sum(rhs),rhsMax =   1.15818465928896E-12  1.22597183856984E-01
 cg2d: Sum(rhs),rhsMax =   1.16529008664656E-12  1.22531019340617E-01
 cg2d: Sum(rhs),rhsMax =   1.21502807814977E-12  1.22461365097977E-01
 cg2d: Sum(rhs),rhsMax =   1.27187149701058E-12  1.22388173439149E-01
 cg2d: Sum(rhs),rhsMax =   1.23634436022257E-12  1.22311400027860E-01
 cg2d: Sum(rhs),rhsMax =   1.30029320644098E-12  1.22231003783390E-01
 cg2d: Sum(rhs),rhsMax =   1.31450406115619E-12  1.22146946768317E-01
 cg2d: Sum(rhs),rhsMax =   1.39266376208980E-12  1.22059194062122E-01
 cg2d: Sum(rhs),rhsMax =   1.42819089887780E-12  1.21967713620680E-01
 cg2d: Sum(rhs),rhsMax =   1.44950718095060E-12  1.21872476121701E-01
 cg2d: Sum(rhs),rhsMax =   1.49924517245381E-12  1.21773454796222E-01
 cg2d: Sum(rhs),rhsMax =   1.51345602716901E-12  1.21670625246330E-01
 cg2d: Sum(rhs),rhsMax =   1.51345602716901E-12  1.21563965249361E-01
 cg2d: Sum(rhs),rhsMax =   1.56319401867222E-12  1.21453454548964E-01
 cg2d: Sum(rhs),rhsMax =   1.56319401867222E-12  1.21339074633483E-01
 cg2d: Sum(rhs),rhsMax =   1.59161572810262E-12  1.21220808502317E-01
 cg2d: Sum(rhs),rhsMax =   1.67688085639384E-12  1.21098640420986E-01
 cg2d: Sum(rhs),rhsMax =   1.66977542903624E-12  1.20972555665837E-01
 cg2d: Sum(rhs),rhsMax =   1.72661884789704E-12  1.20842540259412E-01
 cg2d: Sum(rhs),rhsMax =   1.69819713846664E-12  1.20708580697659E-01
 cg2d: Sum(rhs),rhsMax =   1.71240799318184E-12  1.20570663670286E-01
 cg2d: Sum(rhs),rhsMax =   1.73372427525464E-12  1.20428775775625E-01
 cg2d: Sum(rhs),rhsMax =   1.71951342053944E-12  1.20282903231502E-01
 cg2d: Sum(rhs),rhsMax =   1.73372427525464E-12  1.20133031583612E-01
 cg2d: Sum(rhs),rhsMax =   1.82609483090346E-12  1.19979145412970E-01
 cg2d: Sum(rhs),rhsMax =   1.86872739504906E-12  1.19821228043979E-01
 cg2d: Sum(rhs),rhsMax =   1.79767312147305E-12  1.19659261254641E-01
 cg2d: Sum(rhs),rhsMax =   1.80477854883065E-12  1.19493224990368E-01
 cg2d: Sum(rhs),rhsMax =   1.91135995919467E-12  1.19323097082759E-01
 cg2d: Sum(rhs),rhsMax =   1.91846538655227E-12  1.19148852974583E-01
 cg2d: Sum(rhs),rhsMax =   1.93267624126747E-12  1.18970465452060E-01
 cg2d: Sum(rhs),rhsMax =   1.93267624126747E-12  1.18787904385343E-01
 cg2d: Sum(rhs),rhsMax =   1.91846538655227E-12  1.18601136477917E-01
 cg2d: Sum(rhs),rhsMax =   1.96109795069788E-12  1.18410125025420E-01
 cg2d: Sum(rhs),rhsMax =   1.91135995919467E-12  1.18214829684002E-01
 cg2d: Sum(rhs),rhsMax =   2.06057393370429E-12  1.18015206248164E-01
 cg2d: Sum(rhs),rhsMax =   2.01083594220108E-12  1.17811206437785E-01
 cg2d: Sum(rhs),rhsMax =   2.08899564313469E-12  1.17602777693780E-01
 cg2d: Sum(rhs),rhsMax =   2.12452277992270E-12  1.17389862981507E-01
 cg2d: Sum(rhs),rhsMax =   2.11031192520750E-12  1.17172400600708E-01
 cg2d: Sum(rhs),rhsMax =   2.16004991671070E-12  1.16950324000431E-01
 cg2d: Sum(rhs),rhsMax =   2.17426077142591E-12  1.16723561597109E-01
(PID.TID 0000.0001) %CHECKPOINT       600 ckptA
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   42.730000000000004
(PID.TID 0000.0001)         System time:   8.0000000000000002E-002
(PID.TID 0000.0001)     Wall clock time:   42.816435813903809
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   6.0000000000000005E-002
(PID.TID 0000.0001)         System time:   2.0000000000000000E-002
(PID.TID 0000.0001)     Wall clock time:   8.3294153213500977E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   42.670000000000002
(PID.TID 0000.0001)         System time:   5.9999999999999998E-002
(PID.TID 0000.0001)     Wall clock time:   42.733105182647705
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   3.9999999999999994E-002
(PID.TID 0000.0001)         System time:   2.0000000000000000E-002
(PID.TID 0000.0001)     Wall clock time:   5.7670116424560547E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   42.630000000000003
(PID.TID 0000.0001)         System time:   4.0000000000000001E-002
(PID.TID 0000.0001)     Wall clock time:   42.675404071807861
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   42.630000000000258
(PID.TID 0000.0001)         System time:   3.9999999999999994E-002
(PID.TID 0000.0001)     Wall clock time:   42.669643878936768
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0000.0001)           User time:   42.620000000000267
(PID.TID 0000.0001)         System time:   3.9999999999999994E-002
(PID.TID 0000.0001)     Wall clock time:   42.657784700393677
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.9999999999997158E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   1.7595529556274414E-002
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   0.0000000000000000
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   5.8894157409667969E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   0.0000000000000000
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   5.8867931365966797E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   10.040000000000113
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   10.155766963958740
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   14.050000000000139
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   14.002245664596558
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.59999999999998721
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:  0.65857458114624023
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.81999999999997897
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:  0.82369709014892578
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.25000000000000000
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:  0.20397949218750000
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.7599999999998701
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   3.6989717483520508
(PID.TID 0000.0001)          No. starts:        1200
(PID.TID 0000.0001)           No. stops:        1200
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   12.860000000000184
(PID.TID 0000.0001)         System time:   2.9999999999999999E-002
(PID.TID 0000.0001)     Wall clock time:   12.936140537261963
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.9999999999996021E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   5.7337284088134766E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_STATEVARS_TAVE   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   9.9999999999980105E-003
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   6.1781406402587891E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.0000000000001137E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   6.3884258270263672E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.0000000000005116E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   2.3916244506835938E-002
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   9.9999999999980105E-003
(PID.TID 0000.0001)         System time:   9.9999999999999950E-003
(PID.TID 0000.0001)     Wall clock time:   1.8309831619262695E-002
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =         277370
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =         277370
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
