(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint65d
(PID.TID 0000.0001) // Build user:        hugke729
(PID.TID 0000.0001) // Build host:        hugke729
(PID.TID 0000.0001) // Build date:        Thu Jan 26 13:37:01 PST 2017
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the
(PID.TID 0000.0001) ># namelist terminator. Other systems
(PID.TID 0000.0001) ># use a / character (as shown here).
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    2 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    1 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    1 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =  200 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =    1 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    4 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    4 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =  100 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =  400 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =    1 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    1 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    2 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    T ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=    F ;/* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ======= Starting MPI parallel Run =========
(PID.TID 0000.0001)  My Processor Name (len:  8 ) = hugke729
(PID.TID 0000.0001)  Located at (  0,  0) on processor grid (0:  1,0:  0)
(PID.TID 0000.0001)  Origin at  (     1,     1) on global grid (1:   400,1:     1)
(PID.TID 0000.0001)  North neighbor = processor 0000
(PID.TID 0000.0001)  South neighbor = processor 0000
(PID.TID 0000.0001)   East neighbor = processor 0001
(PID.TID 0000.0001)   West neighbor = processor 0001
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   1,   1:   1)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000002, Process = 000001, Comm = messages
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000002, Process = 000001, Comm = messages
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) ># | Model parameters |
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># See src/ini_parms.F for possible parameters.
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > tRefFile='TRef.bin'
(PID.TID 0000.0001) > sRef= 25*35.,
(PID.TID 0000.0001) > viscAz=1.E-5,
(PID.TID 0000.0001) > viscAh=1.0E-4,
(PID.TID 0000.0001) > no_slip_sides=.FALSE.,
(PID.TID 0000.0001) > no_slip_bottom=.FALSE.,
(PID.TID 0000.0001) > viscA4=0.E12,
(PID.TID 0000.0001) > diffKhT=1.0E-4,
(PID.TID 0000.0001) > diffKzT=1.E-5,
(PID.TID 0000.0001) > diffKhS=1.E3,
(PID.TID 0000.0001) > diffKzS=1.E-5,
(PID.TID 0000.0001) > f0=0.E-4,
(PID.TID 0000.0001) > beta=0.02E-11,
(PID.TID 0000.0001) > tAlpha=2.E-4,
(PID.TID 0000.0001) > sBeta =0.E-4,
(PID.TID 0000.0001) > gravity=9.81,
(PID.TID 0000.0001) > gBaro=9.81,
(PID.TID 0000.0001) > rigidLid=.FALSE.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) > eosType='LINEAR',
(PID.TID 0000.0001) > nonHydrostatic=.FALSE.,
(PID.TID 0000.0001) > readBinaryPrec=64,
(PID.TID 0000.0001) > useSingleCpuIO=.TRUE.
(PID.TID 0000.0001) > writeBinaryPrec=64,
(PID.TID 0000.0001) > writeStatePrec=64,
(PID.TID 0000.0001) > saltStepping=.FALSE.,
(PID.TID 0000.0001) ># minimum cell fraction.  This reduces steppiness..
(PID.TID 0000.0001) >  hFacMin=0.1,
(PID.TID 0000.0001) ># implicSurfPress=0.5,
(PID.TID 0000.0001) ># implicDiv2DFlow=0.5,
(PID.TID 0000.0001) ># nonlinFreeSurf=3,
(PID.TID 0000.0001) ># hFacInf=0.2,
(PID.TID 0000.0001) ># hFacSup=1.8,
(PID.TID 0000.0001) >  exactConserv=.FALSE.,
(PID.TID 0000.0001) >  implicitDiffusion=.TRUE.
(PID.TID 0000.0001) >  implicitViscosity=.TRUE.
(PID.TID 0000.0001) ># Superbee on:
(PID.TID 0000.0001) > tempAdvScheme=77,
(PID.TID 0000.0001) > staggerTimeStep=.TRUE.,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dMaxIters=1000,
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-13,
(PID.TID 0000.0001) > cg3dMaxIters=400,
(PID.TID 0000.0001) > cg3dTargetResidual=1.E-13,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) > niter0=0,
(PID.TID 0000.0001) ># times are in s
(PID.TID 0000.0001) > startTime=0,
(PID.TID 0000.0001) > endTime=3600,
(PID.TID 0000.0001) > deltaT=6,
(PID.TID 0000.0001) > abEps=0.1,
(PID.TID 0000.0001) ># once per tide checkpoint...
(PID.TID 0000.0001) > pChkptFreq=21600,
(PID.TID 0000.0001) > chkptFreq=0.0,
(PID.TID 0000.0001) > dumpFreq=3600,
(PID.TID 0000.0001) > monitorFreq=7200,
(PID.TID 0000.0001) ># Forcing for boundary condition files
(PID.TID 0000.0001) > periodicExternalForcing=.FALSE.,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingCartesianGrid=.TRUE.,
(PID.TID 0000.0001) > usingSphericalPolarGrid=.FALSE.,
(PID.TID 0000.0001) > delXfile='delXvar.bin',
(PID.TID 0000.0001) > delY=5.e3,
(PID.TID 0000.0001) > delRfile = 'delZvar.bin',
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Input datasets
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile='topo.bin',
(PID.TID 0000.0001) > mdsioLocalDir='../../',
(PID.TID 0000.0001) > hydrogThetaFile='T0.bin',
(PID.TID 0000.0001) > uVelInitFile='U0.bin',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > useOBCS=.TRUE.,
(PID.TID 0000.0001) > useKL10=.TRUE.,
(PID.TID 0000.0001) > useDIAGNOSTICS=.FALSE.,
(PID.TID 0000.0001) > useMNC=.FALSE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/obcs                 compiled   and   used ( useOBCS                  = T )
 pkg/kl10                 compiled   and   used ( useKL10                  = T )
 pkg/diagnostics          compiled but not used ( useDiagnostics           = F )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled but not used ( +vectorInvariantMomentum = F )
 pkg/mom_fluxform         compiled   and   used ( & not vectorInvariantMom = T )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/timeave              compiled but not used ( taveFreq > 0.            = F )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  OBCS_READPARMS: opening data.obcs
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.obcs
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.obcs"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Open-boundaries
(PID.TID 0000.0001) > &OBCS_PARM01
(PID.TID 0000.0001) > OB_Iwest=1*1,
(PID.TID 0000.0001) > OB_Ieast=1*-1,
(PID.TID 0000.0001) > OB_Jnorth=80*0,
(PID.TID 0000.0001) > OB_Jsouth=80*0,
(PID.TID 0000.0001) > useOBCSsponge=.TRUE.,
(PID.TID 0000.0001) > OBEuFile = 'Ue.bin',
(PID.TID 0000.0001) > OBWuFile = 'Uw.bin',
(PID.TID 0000.0001) > OBEtFile = 'Te.bin',
(PID.TID 0000.0001) > OBWtFile = 'Tw.bin',
(PID.TID 0000.0001) > useOBCSprescribe=.TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Orlanski parameters
(PID.TID 0000.0001) > &OBCS_PARM02
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Sponge layer parameters
(PID.TID 0000.0001) > &OBCS_PARM03
(PID.TID 0000.0001) > Urelaxobcsinner=1000.,
(PID.TID 0000.0001) > Urelaxobcsbound=100.,
(PID.TID 0000.0001) > Vrelaxobcsinner=1000.0,
(PID.TID 0000.0001) > Vrelaxobcsbound=100.0,
(PID.TID 0000.0001) > spongeThickness=30,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  OBCS_READPARMS: finished reading data.obcs
(PID.TID 0000.0001)  OB_indexUnset = /* unset OB index value (i.e. no OB) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  Northern OB global indices : OB_Jnorth =
(PID.TID 0000.0001)   400 @        0                            /* I =  1:400 */
(PID.TID 0000.0001)  Southern OB global indices : OB_Jsouth =
(PID.TID 0000.0001)   400 @        0                            /* I =  1:400 */
(PID.TID 0000.0001)  Eastern  OB global indices : OB_Ieast =
(PID.TID 0000.0001)                     400                     /* J =  1 */
(PID.TID 0000.0001)  Western  OB global indices : OB_Iwest =
(PID.TID 0000.0001)                       1                     /* J =  1 */
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  KL10_READPARMS: opening data.kl10
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.kl10
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.kl10"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># =====================================================================
(PID.TID 0000.0001) ># | Parameters for Klymak and Legg (2010) vertical mixing scheme      |
(PID.TID 0000.0001) ># =====================================================================
(PID.TID 0000.0001) > &KL10_PARM01
(PID.TID 0000.0001) > KLwriteState=.TRUE.,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  KL10_READPARMS: finished reading data.kl10
(PID.TID 0000.0001) SET_PARMS: done
==> SYSTEM CALL (from INI_MODEL_IO): > mkdir -p ../../0000 <
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: delXvar.bin
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delX loaded from file: delXvar.bin
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: delZvar.bin
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delR loaded from file: delZvar.bin
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) %MON XC_max                       =   4.0872483443709E+05
(PID.TID 0000.0001) %MON XC_min                       =   1.2751655629139E+03
(PID.TID 0000.0001) %MON XC_mean                      =   2.0500000000000E+05
(PID.TID 0000.0001) %MON XC_sd                        =   8.2408027195681E+04
(PID.TID 0000.0001) %MON XG_max                       =   4.0744966887417E+05
(PID.TID 0000.0001) %MON XG_min                       =   4.5474735088646E-13
(PID.TID 0000.0001) %MON XG_mean                      =   2.0448750000000E+05
(PID.TID 0000.0001) %MON XG_sd                        =   8.2409028987204E+04
(PID.TID 0000.0001) %MON DXC_max                      =   2.5503311258278E+03
(PID.TID 0000.0001) %MON DXC_min                      =   1.0000000000000E+02
(PID.TID 0000.0001) %MON DXC_mean                     =   1.0250000000000E+03
(PID.TID 0000.0001) %MON DXC_sd                       =   8.1264954623580E+02
(PID.TID 0000.0001) %MON DXF_max                      =   2.5503311258278E+03
(PID.TID 0000.0001) %MON DXF_min                      =   1.0000000000000E+02
(PID.TID 0000.0001) %MON DXF_mean                     =   1.0250000000000E+03
(PID.TID 0000.0001) %MON DXF_sd                       =   8.1268033035903E+02
(PID.TID 0000.0001) %MON DXG_max                      =   2.5503311258278E+03
(PID.TID 0000.0001) %MON DXG_min                      =   1.0000000000000E+02
(PID.TID 0000.0001) %MON DXG_mean                     =   1.0250000000000E+03
(PID.TID 0000.0001) %MON DXG_sd                       =   8.1268033035903E+02
(PID.TID 0000.0001) %MON DXV_max                      =   2.5503311258278E+03
(PID.TID 0000.0001) %MON DXV_min                      =   1.0000000000000E+02
(PID.TID 0000.0001) %MON DXV_mean                     =   1.0250000000000E+03
(PID.TID 0000.0001) %MON DXV_sd                       =   8.1264954623580E+02
(PID.TID 0000.0001) %MON YC_max                       =   2.5000000000000E+03
(PID.TID 0000.0001) %MON YC_min                       =   2.5000000000000E+03
(PID.TID 0000.0001) %MON YC_mean                      =   2.5000000000000E+03
(PID.TID 0000.0001) %MON YC_sd                        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_max                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_mean                      =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_sd                        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYC_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYF_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYG_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYU_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RA_max                       =   1.2751655629139E+07
(PID.TID 0000.0001) %MON RA_min                       =   5.0000000000000E+05
(PID.TID 0000.0001) %MON RA_mean                      =   5.1250000000000E+06
(PID.TID 0000.0001) %MON RA_sd                        =   4.0634016517952E+06
(PID.TID 0000.0001) %MON RAW_max                      =   1.2751655629139E+07
(PID.TID 0000.0001) %MON RAW_min                      =   5.0000000000000E+05
(PID.TID 0000.0001) %MON RAW_mean                     =   5.1250000000000E+06
(PID.TID 0000.0001) %MON RAW_sd                       =   4.0632477311790E+06
(PID.TID 0000.0001) %MON RAS_max                      =   1.2751655629139E+07
(PID.TID 0000.0001) %MON RAS_min                      =   5.0000000000000E+05
(PID.TID 0000.0001) %MON RAS_mean                     =   5.1250000000000E+06
(PID.TID 0000.0001) %MON RAS_sd                       =   4.0634016517952E+06
(PID.TID 0000.0001) %MON RAZ_max                      =   1.2751655629139E+07
(PID.TID 0000.0001) %MON RAZ_min                      =   5.0000000000000E+05
(PID.TID 0000.0001) %MON RAZ_mean                     =   5.1250000000000E+06
(PID.TID 0000.0001) %MON RAZ_sd                       =   4.0632477311790E+06
(PID.TID 0000.0001) %MON AngleCS_max                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_min                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_mean                 =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_max                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_min                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_mean                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: TRef.bin
(PID.TID 0000.0001) S/R LOAD_REF_FILES: tRef loaded from file: TRef.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: topo.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model R_low (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =         -2.000000000000000E+03
(PID.TID 0000.0001) // CMAX =         -1.500000000000000E+03
(PID.TID 0000.0001) // CINT =          1.851851851851852E+01
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) K =   1
(PID.TID 0000.0001) //                I=6       I=16      I=26      I=36      I=46      I=56      I=66      I=76      I=86      I=96      I=106     I=116     I=126     I=136     I=146     I=156     I=166     I=176     I=186     I=196
(PID.TID 0000.0001) // |--J--|321012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|789012345|78901234
(PID.TID 0000.0001) //      5 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      4 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      3 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      2 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //      0 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //     -1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //     -2 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) //     -3 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------acdfgiklnoprstuvwxyyzz+++++++
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model Ro_surf (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+32
(PID.TID 0000.0001) // CMAX =         -1.000000000000000E+32
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacC at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacW at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacS at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:   204:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(     5:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  2  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) %MON fCori_max                    =   5.0000000000000E-10
(PID.TID 0000.0001) %MON fCori_min                    =   5.0000000000000E-10
(PID.TID 0000.0001) %MON fCori_mean                   =   5.0000000000000E-10
(PID.TID 0000.0001) %MON fCori_sd                     =   1.3441684953987E-24
(PID.TID 0000.0001) %MON fCoriG_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_mean                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_sd                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_max                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_min                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_mean                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   0.0000000000000E+00
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  1.0000000000000001E-05
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)                 2.772408163265306E+01,      /* K =  1 */
(PID.TID 0000.0001)                 2.744816326530612E+01,      /* K =  2 */
(PID.TID 0000.0001)                 2.717224489795919E+01,      /* K =  3 */
(PID.TID 0000.0001)                 2.689632653061225E+01,      /* K =  4 */
(PID.TID 0000.0001)                 2.662040816326531E+01,      /* K =  5 */
(PID.TID 0000.0001)                 2.634448979591837E+01,      /* K =  6 */
(PID.TID 0000.0001)                 2.606857142857143E+01,      /* K =  7 */
(PID.TID 0000.0001)                 2.579265306122449E+01,      /* K =  8 */
(PID.TID 0000.0001)                 2.551673469387755E+01,      /* K =  9 */
(PID.TID 0000.0001)                 2.524081632653061E+01,      /* K = 10 */
(PID.TID 0000.0001)                 2.496489795918367E+01,      /* K = 11 */
(PID.TID 0000.0001)                 2.468897959183674E+01,      /* K = 12 */
(PID.TID 0000.0001)                 2.441306122448980E+01,      /* K = 13 */
(PID.TID 0000.0001)                 2.413714285714286E+01,      /* K = 14 */
(PID.TID 0000.0001)                 2.386122448979592E+01,      /* K = 15 */
(PID.TID 0000.0001)                 2.358530612244898E+01,      /* K = 16 */
(PID.TID 0000.0001)                 2.330938775510204E+01,      /* K = 17 */
(PID.TID 0000.0001)                 2.303346938775510E+01,      /* K = 18 */
(PID.TID 0000.0001)                 2.275755102040817E+01,      /* K = 19 */
(PID.TID 0000.0001)                 2.248163265306123E+01,      /* K = 20 */
(PID.TID 0000.0001)                 2.220571428571429E+01,      /* K = 21 */
(PID.TID 0000.0001)                 2.192979591836735E+01,      /* K = 22 */
(PID.TID 0000.0001)                 2.165387755102041E+01,      /* K = 23 */
(PID.TID 0000.0001)                 2.137795918367348E+01,      /* K = 24 */
(PID.TID 0000.0001)                 2.110204081632654E+01,      /* K = 25 */
(PID.TID 0000.0001)                 2.082612244897960E+01,      /* K = 26 */
(PID.TID 0000.0001)                 2.055020408163266E+01,      /* K = 27 */
(PID.TID 0000.0001)                 2.027428571428572E+01,      /* K = 28 */
(PID.TID 0000.0001)                 1.999836734693878E+01,      /* K = 29 */
(PID.TID 0000.0001)                 1.972244897959184E+01,      /* K = 30 */
(PID.TID 0000.0001)                 1.944653061224490E+01,      /* K = 31 */
(PID.TID 0000.0001)                 1.917061224489796E+01,      /* K = 32 */
(PID.TID 0000.0001)                 1.889469387755102E+01,      /* K = 33 */
(PID.TID 0000.0001)                 1.861877551020408E+01,      /* K = 34 */
(PID.TID 0000.0001)                 1.834285714285714E+01,      /* K = 35 */
(PID.TID 0000.0001)                 1.806693877551020E+01,      /* K = 36 */
(PID.TID 0000.0001)                 1.779102040816326E+01,      /* K = 37 */
(PID.TID 0000.0001)                 1.751510204081632E+01,      /* K = 38 */
(PID.TID 0000.0001)                 1.723918367346938E+01,      /* K = 39 */
(PID.TID 0000.0001)                 1.696326530612244E+01,      /* K = 40 */
(PID.TID 0000.0001)                 1.668734693877551E+01,      /* K = 41 */
(PID.TID 0000.0001)                 1.641142857142857E+01,      /* K = 42 */
(PID.TID 0000.0001)                 1.613551020408163E+01,      /* K = 43 */
(PID.TID 0000.0001)                 1.585959183673469E+01,      /* K = 44 */
(PID.TID 0000.0001)                 1.558367346938775E+01,      /* K = 45 */
(PID.TID 0000.0001)                 1.530775510204081E+01,      /* K = 46 */
(PID.TID 0000.0001)                 1.503183673469387E+01,      /* K = 47 */
(PID.TID 0000.0001)                 1.475591836734693E+01,      /* K = 48 */
(PID.TID 0000.0001)                 1.447999999999999E+01,      /* K = 49 */
(PID.TID 0000.0001)                 1.420408163265305E+01,      /* K = 50 */
(PID.TID 0000.0001)                 1.392816326530611E+01,      /* K = 51 */
(PID.TID 0000.0001)                 1.365224489795917E+01,      /* K = 52 */
(PID.TID 0000.0001)                 1.337632653061223E+01,      /* K = 53 */
(PID.TID 0000.0001)                 1.310040816326529E+01,      /* K = 54 */
(PID.TID 0000.0001)                 1.282448979591836E+01,      /* K = 55 */
(PID.TID 0000.0001)                 1.254857142857142E+01,      /* K = 56 */
(PID.TID 0000.0001)                 1.227265306122448E+01,      /* K = 57 */
(PID.TID 0000.0001)                 1.199673469387754E+01,      /* K = 58 */
(PID.TID 0000.0001)                 1.172081632653060E+01,      /* K = 59 */
(PID.TID 0000.0001)                 1.144489795918366E+01,      /* K = 60 */
(PID.TID 0000.0001)                 1.116897959183672E+01,      /* K = 61 */
(PID.TID 0000.0001)                 1.089306122448978E+01,      /* K = 62 */
(PID.TID 0000.0001)                 1.061714285714284E+01,      /* K = 63 */
(PID.TID 0000.0001)                 1.034122448979590E+01,      /* K = 64 */
(PID.TID 0000.0001)                 1.006530612244896E+01,      /* K = 65 */
(PID.TID 0000.0001)                 9.789387755102023E+00,      /* K = 66 */
(PID.TID 0000.0001)                 9.513469387755084E+00,      /* K = 67 */
(PID.TID 0000.0001)                 9.237551020408144E+00,      /* K = 68 */
(PID.TID 0000.0001)                 8.961632653061205E+00,      /* K = 69 */
(PID.TID 0000.0001)                 8.685714285714266E+00,      /* K = 70 */
(PID.TID 0000.0001)                 8.409795918367326E+00,      /* K = 71 */
(PID.TID 0000.0001)                 8.133877551020387E+00,      /* K = 72 */
(PID.TID 0000.0001)                 7.857959183673447E+00,      /* K = 73 */
(PID.TID 0000.0001)                 7.582040816326508E+00,      /* K = 74 */
(PID.TID 0000.0001)                 7.306122448979568E+00,      /* K = 75 */
(PID.TID 0000.0001)                 7.030204081632629E+00,      /* K = 76 */
(PID.TID 0000.0001)                 6.754285714285690E+00,      /* K = 77 */
(PID.TID 0000.0001)                 6.478367346938750E+00,      /* K = 78 */
(PID.TID 0000.0001)                 6.202448979591811E+00,      /* K = 79 */
(PID.TID 0000.0001)                 5.926530612244871E+00,      /* K = 80 */
(PID.TID 0000.0001)                 5.650612244897932E+00,      /* K = 81 */
(PID.TID 0000.0001)                 5.374693877550992E+00,      /* K = 82 */
(PID.TID 0000.0001)                 5.098775510204053E+00,      /* K = 83 */
(PID.TID 0000.0001)                 4.822857142857114E+00,      /* K = 84 */
(PID.TID 0000.0001)                 4.546938775510174E+00,      /* K = 85 */
(PID.TID 0000.0001)                 4.271020408163235E+00,      /* K = 86 */
(PID.TID 0000.0001)                 3.995102040816295E+00,      /* K = 87 */
(PID.TID 0000.0001)                 3.719183673469356E+00,      /* K = 88 */
(PID.TID 0000.0001)                 3.443265306122417E+00,      /* K = 89 */
(PID.TID 0000.0001)                 3.167346938775477E+00,      /* K = 90 */
(PID.TID 0000.0001)                 2.891428571428538E+00,      /* K = 91 */
(PID.TID 0000.0001)                 2.615510204081598E+00,      /* K = 92 */
(PID.TID 0000.0001)                 2.339591836734659E+00,      /* K = 93 */
(PID.TID 0000.0001)                 2.063673469387719E+00,      /* K = 94 */
(PID.TID 0000.0001)                 1.787755102040780E+00,      /* K = 95 */
(PID.TID 0000.0001)                 1.511836734693841E+00,      /* K = 96 */
(PID.TID 0000.0001)                 1.235918367346901E+00,      /* K = 97 */
(PID.TID 0000.0001)                 9.599999999999618E-01,      /* K = 98 */
(PID.TID 0000.0001)                 6.840816326530224E-01,      /* K = 99 */
(PID.TID 0000.0001)                 4.081632653060829E-01       /* K =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( psu ) */
(PID.TID 0000.0001)   100 @  3.500000000000000E+01              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)   100 @  1.000000000000000E-05              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)   100 @  1.000000000000000E-05              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)   100 @  1.000000000000000E-05              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'LINEAR'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tAlpha = /* Linear EOS thermal expansion coefficient ( 1/oC ) */
(PID.TID 0000.0001)                 2.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sBeta  = /* Linear EOS haline contraction coefficient ( 1/psu ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoNil    = /* Reference density for Linear EOS ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.994000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)   100 @  1.000000000000000E+00              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)   101 @  1.000000000000000E+00              /* K =  1:101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.616400000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.292123516990375E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 2.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2Dflow =  /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(psu)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(psu)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(psu)*/
(PID.TID 0000.0001)                 3.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useEnergyConservingCoriolis= /* Flx-Form Coriolis scheme flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartWetPoints= /* Coriolis WetPoints method flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartMomAdv= /* V.I Non-linear terms Jamart flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAbsVorticity= /* V.I Works with f+zeta in Coriolis */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectVortScheme= /* V.I Scheme selector for Vorticity-Term */
(PID.TID 0000.0001)               123456789
(PID.TID 0000.0001)    = 0 : enstrophy (Shallow-Water Eq.) conserving scheme by Sadourny, JAS 75
(PID.TID 0000.0001)    = 1 : same as 0 with modified hFac
(PID.TID 0000.0001)    = 2 : energy conserving scheme (used by Sadourny in JAS 75 paper)
(PID.TID 0000.0001)    = 3 : energy (general) and enstrophy (2D, nonDiv.) conserving scheme
(PID.TID 0000.0001)          from Sadourny (Burridge & Haseler, ECMWF Rep.4, 1977)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindVorticity= /* V.I Upwind bias vorticity flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) highOrderVorticity= /* V.I High order vort. advect. flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindShear= /* V.I Upwind vertical Shear advection flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectKEscheme= /* V.I Kinetic Energy scheme selector */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                    1000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 6.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 6.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)   100 @  6.000000000000000E+00              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 6.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                     600
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                     600
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 3.600000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 2.160000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_immed =   /* Model IO flag. */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 3.600000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 7.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       3
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 1.500000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) Ro_SeaLevel = /* r(1) ( units of r ==  m ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 1.000200040008002E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 1.000000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)    99 @  2.000000000000000E+01,             /* K =  2:100 */
(PID.TID 0000.0001)                 1.000000000000000E+01       /* K =101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)   100 @  2.000000000000000E+01              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.533995584988962E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.517660044150110E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.657836644591612E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.494481236203090E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.331125827814569E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.167770419426049E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.004415011037528E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.841059602649007E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =200 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =201 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =202 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =203 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.841059602649007E+02,      /* I =298 */
(PID.TID 0000.0001)                 9.004415011037528E+02,      /* I =299 */
(PID.TID 0000.0001)                 9.167770419426049E+02,      /* I =300 */
(PID.TID 0000.0001)                 9.331125827814569E+02,      /* I =301 */
(PID.TID 0000.0001)                 9.494481236203090E+02,      /* I =302 */
(PID.TID 0000.0001)                 9.657836644591612E+02,      /* I =303 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 2.517660044150110E+03,      /* I =398 */
(PID.TID 0000.0001)                 2.533995584988962E+03,      /* I =399 */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* I =400 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 1.275165562913908E+03,      /* I =  1 */
(PID.TID 0000.0001)                 3.817328918322296E+03,      /* I =  2 */
(PID.TID 0000.0001)                 6.343156732891833E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.030981236203090E+05,      /* I = 48 */
(PID.TID 0000.0001)                 1.048725165562914E+05,      /* I = 49 */
(PID.TID 0000.0001)                 1.066305739514349E+05,      /* I = 50 */
(PID.TID 0000.0001)                 1.083722958057395E+05,      /* I = 51 */
(PID.TID 0000.0001)                 1.100976821192053E+05,      /* I = 52 */
(PID.TID 0000.0001)                 1.118067328918322E+05,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.718067328918322E+05,      /* I = 98 */
(PID.TID 0000.0001)                 1.727643487858720E+05,      /* I = 99 */
(PID.TID 0000.0001)                 1.737056291390728E+05,      /* I =100 */
(PID.TID 0000.0001)                 1.746305739514349E+05,      /* I =101 */
(PID.TID 0000.0001)                 1.755391832229581E+05,      /* I =102 */
(PID.TID 0000.0001)                 1.764314569536424E+05,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.996764900662251E+05,      /* I =148 */
(PID.TID 0000.0001)                 1.998173289183223E+05,      /* I =149 */
(PID.TID 0000.0001)                 1.999418322295806E+05,      /* I =150 */
(PID.TID 0000.0001)                 2.000500000000000E+05,      /* I =151 */
(PID.TID 0000.0001)                 2.001500000000000E+05,      /* I =152 */
(PID.TID 0000.0001)                 2.002500000000000E+05,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 2.047500000000000E+05,      /* I =198 */
(PID.TID 0000.0001)                 2.048500000000000E+05,      /* I =199 */
(PID.TID 0000.0001)                 2.049500000000000E+05       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 2.500000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -1.000000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                -3.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -5.000000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -7.000000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -9.000000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                -1.100000000000000E+02,      /* K =  6 */
(PID.TID 0000.0001)                -1.300000000000000E+02,      /* K =  7 */
(PID.TID 0000.0001)                -1.500000000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -1.700000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -1.900000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -2.100000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -2.300000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -2.500000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -2.700000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -2.900000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                -3.100000000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                -3.300000000000000E+02,      /* K = 17 */
(PID.TID 0000.0001)                -3.500000000000000E+02,      /* K = 18 */
(PID.TID 0000.0001)                -3.700000000000000E+02,      /* K = 19 */
(PID.TID 0000.0001)                -3.900000000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                -4.100000000000000E+02,      /* K = 21 */
(PID.TID 0000.0001)                -4.300000000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                -4.500000000000000E+02,      /* K = 23 */
(PID.TID 0000.0001)                -4.700000000000000E+02,      /* K = 24 */
(PID.TID 0000.0001)                -4.900000000000000E+02,      /* K = 25 */
(PID.TID 0000.0001)                -5.100000000000000E+02,      /* K = 26 */
(PID.TID 0000.0001)                -5.300000000000000E+02,      /* K = 27 */
(PID.TID 0000.0001)                -5.500000000000000E+02,      /* K = 28 */
(PID.TID 0000.0001)                -5.700000000000000E+02,      /* K = 29 */
(PID.TID 0000.0001)                -5.900000000000000E+02,      /* K = 30 */
(PID.TID 0000.0001)                -6.100000000000000E+02,      /* K = 31 */
(PID.TID 0000.0001)                -6.300000000000000E+02,      /* K = 32 */
(PID.TID 0000.0001)                -6.500000000000000E+02,      /* K = 33 */
(PID.TID 0000.0001)                -6.700000000000000E+02,      /* K = 34 */
(PID.TID 0000.0001)                -6.900000000000000E+02,      /* K = 35 */
(PID.TID 0000.0001)                -7.100000000000000E+02,      /* K = 36 */
(PID.TID 0000.0001)                -7.300000000000000E+02,      /* K = 37 */
(PID.TID 0000.0001)                -7.500000000000000E+02,      /* K = 38 */
(PID.TID 0000.0001)                -7.700000000000000E+02,      /* K = 39 */
(PID.TID 0000.0001)                -7.900000000000000E+02,      /* K = 40 */
(PID.TID 0000.0001)                -8.100000000000000E+02,      /* K = 41 */
(PID.TID 0000.0001)                -8.300000000000000E+02,      /* K = 42 */
(PID.TID 0000.0001)                -8.500000000000000E+02,      /* K = 43 */
(PID.TID 0000.0001)                -8.700000000000000E+02,      /* K = 44 */
(PID.TID 0000.0001)                -8.900000000000000E+02,      /* K = 45 */
(PID.TID 0000.0001)                -9.100000000000000E+02,      /* K = 46 */
(PID.TID 0000.0001)                -9.300000000000000E+02,      /* K = 47 */
(PID.TID 0000.0001)                -9.500000000000000E+02,      /* K = 48 */
(PID.TID 0000.0001)                -9.700000000000000E+02,      /* K = 49 */
(PID.TID 0000.0001)                -9.900000000000000E+02,      /* K = 50 */
(PID.TID 0000.0001)                -1.010000000000000E+03,      /* K = 51 */
(PID.TID 0000.0001)                -1.030000000000000E+03,      /* K = 52 */
(PID.TID 0000.0001)                -1.050000000000000E+03,      /* K = 53 */
(PID.TID 0000.0001)                -1.070000000000000E+03,      /* K = 54 */
(PID.TID 0000.0001)                -1.090000000000000E+03,      /* K = 55 */
(PID.TID 0000.0001)                -1.110000000000000E+03,      /* K = 56 */
(PID.TID 0000.0001)                -1.130000000000000E+03,      /* K = 57 */
(PID.TID 0000.0001)                -1.150000000000000E+03,      /* K = 58 */
(PID.TID 0000.0001)                -1.170000000000000E+03,      /* K = 59 */
(PID.TID 0000.0001)                -1.190000000000000E+03,      /* K = 60 */
(PID.TID 0000.0001)                -1.210000000000000E+03,      /* K = 61 */
(PID.TID 0000.0001)                -1.230000000000000E+03,      /* K = 62 */
(PID.TID 0000.0001)                -1.250000000000000E+03,      /* K = 63 */
(PID.TID 0000.0001)                -1.270000000000000E+03,      /* K = 64 */
(PID.TID 0000.0001)                -1.290000000000000E+03,      /* K = 65 */
(PID.TID 0000.0001)                -1.310000000000000E+03,      /* K = 66 */
(PID.TID 0000.0001)                -1.330000000000000E+03,      /* K = 67 */
(PID.TID 0000.0001)                -1.350000000000000E+03,      /* K = 68 */
(PID.TID 0000.0001)                -1.370000000000000E+03,      /* K = 69 */
(PID.TID 0000.0001)                -1.390000000000000E+03,      /* K = 70 */
(PID.TID 0000.0001)                -1.410000000000000E+03,      /* K = 71 */
(PID.TID 0000.0001)                -1.430000000000000E+03,      /* K = 72 */
(PID.TID 0000.0001)                -1.450000000000000E+03,      /* K = 73 */
(PID.TID 0000.0001)                -1.470000000000000E+03,      /* K = 74 */
(PID.TID 0000.0001)                -1.490000000000000E+03,      /* K = 75 */
(PID.TID 0000.0001)                -1.510000000000000E+03,      /* K = 76 */
(PID.TID 0000.0001)                -1.530000000000000E+03,      /* K = 77 */
(PID.TID 0000.0001)                -1.550000000000000E+03,      /* K = 78 */
(PID.TID 0000.0001)                -1.570000000000000E+03,      /* K = 79 */
(PID.TID 0000.0001)                -1.590000000000000E+03,      /* K = 80 */
(PID.TID 0000.0001)                -1.610000000000000E+03,      /* K = 81 */
(PID.TID 0000.0001)                -1.630000000000000E+03,      /* K = 82 */
(PID.TID 0000.0001)                -1.650000000000000E+03,      /* K = 83 */
(PID.TID 0000.0001)                -1.670000000000000E+03,      /* K = 84 */
(PID.TID 0000.0001)                -1.690000000000000E+03,      /* K = 85 */
(PID.TID 0000.0001)                -1.710000000000000E+03,      /* K = 86 */
(PID.TID 0000.0001)                -1.730000000000000E+03,      /* K = 87 */
(PID.TID 0000.0001)                -1.750000000000000E+03,      /* K = 88 */
(PID.TID 0000.0001)                -1.770000000000000E+03,      /* K = 89 */
(PID.TID 0000.0001)                -1.790000000000000E+03,      /* K = 90 */
(PID.TID 0000.0001)                -1.810000000000000E+03,      /* K = 91 */
(PID.TID 0000.0001)                -1.830000000000000E+03,      /* K = 92 */
(PID.TID 0000.0001)                -1.850000000000000E+03,      /* K = 93 */
(PID.TID 0000.0001)                -1.870000000000000E+03,      /* K = 94 */
(PID.TID 0000.0001)                -1.890000000000000E+03,      /* K = 95 */
(PID.TID 0000.0001)                -1.910000000000000E+03,      /* K = 96 */
(PID.TID 0000.0001)                -1.930000000000000E+03,      /* K = 97 */
(PID.TID 0000.0001)                -1.950000000000000E+03,      /* K = 98 */
(PID.TID 0000.0001)                -1.970000000000000E+03,      /* K = 99 */
(PID.TID 0000.0001)                -1.990000000000000E+03       /* K =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -2.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -4.000000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -6.000000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -8.000000000000000E+01,      /* K =  5 */
(PID.TID 0000.0001)                -1.000000000000000E+02,      /* K =  6 */
(PID.TID 0000.0001)                -1.200000000000000E+02,      /* K =  7 */
(PID.TID 0000.0001)                -1.400000000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -1.600000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -1.800000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -2.000000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -2.200000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -2.400000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -2.600000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -2.800000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                -3.000000000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                -3.200000000000000E+02,      /* K = 17 */
(PID.TID 0000.0001)                -3.400000000000000E+02,      /* K = 18 */
(PID.TID 0000.0001)                -3.600000000000000E+02,      /* K = 19 */
(PID.TID 0000.0001)                -3.800000000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                -4.000000000000000E+02,      /* K = 21 */
(PID.TID 0000.0001)                -4.200000000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                -4.400000000000000E+02,      /* K = 23 */
(PID.TID 0000.0001)                -4.600000000000000E+02,      /* K = 24 */
(PID.TID 0000.0001)                -4.800000000000000E+02,      /* K = 25 */
(PID.TID 0000.0001)                -5.000000000000000E+02,      /* K = 26 */
(PID.TID 0000.0001)                -5.200000000000000E+02,      /* K = 27 */
(PID.TID 0000.0001)                -5.400000000000000E+02,      /* K = 28 */
(PID.TID 0000.0001)                -5.600000000000000E+02,      /* K = 29 */
(PID.TID 0000.0001)                -5.800000000000000E+02,      /* K = 30 */
(PID.TID 0000.0001)                -6.000000000000000E+02,      /* K = 31 */
(PID.TID 0000.0001)                -6.200000000000000E+02,      /* K = 32 */
(PID.TID 0000.0001)                -6.400000000000000E+02,      /* K = 33 */
(PID.TID 0000.0001)                -6.600000000000000E+02,      /* K = 34 */
(PID.TID 0000.0001)                -6.800000000000000E+02,      /* K = 35 */
(PID.TID 0000.0001)                -7.000000000000000E+02,      /* K = 36 */
(PID.TID 0000.0001)                -7.200000000000000E+02,      /* K = 37 */
(PID.TID 0000.0001)                -7.400000000000000E+02,      /* K = 38 */
(PID.TID 0000.0001)                -7.600000000000000E+02,      /* K = 39 */
(PID.TID 0000.0001)                -7.800000000000000E+02,      /* K = 40 */
(PID.TID 0000.0001)                -8.000000000000000E+02,      /* K = 41 */
(PID.TID 0000.0001)                -8.200000000000000E+02,      /* K = 42 */
(PID.TID 0000.0001)                -8.400000000000000E+02,      /* K = 43 */
(PID.TID 0000.0001)                -8.600000000000000E+02,      /* K = 44 */
(PID.TID 0000.0001)                -8.800000000000000E+02,      /* K = 45 */
(PID.TID 0000.0001)                -9.000000000000000E+02,      /* K = 46 */
(PID.TID 0000.0001)                -9.200000000000000E+02,      /* K = 47 */
(PID.TID 0000.0001)                -9.400000000000000E+02,      /* K = 48 */
(PID.TID 0000.0001)                -9.600000000000000E+02,      /* K = 49 */
(PID.TID 0000.0001)                -9.800000000000000E+02,      /* K = 50 */
(PID.TID 0000.0001)                -1.000000000000000E+03,      /* K = 51 */
(PID.TID 0000.0001)                -1.020000000000000E+03,      /* K = 52 */
(PID.TID 0000.0001)                -1.040000000000000E+03,      /* K = 53 */
(PID.TID 0000.0001)                -1.060000000000000E+03,      /* K = 54 */
(PID.TID 0000.0001)                -1.080000000000000E+03,      /* K = 55 */
(PID.TID 0000.0001)                -1.100000000000000E+03,      /* K = 56 */
(PID.TID 0000.0001)                -1.120000000000000E+03,      /* K = 57 */
(PID.TID 0000.0001)                -1.140000000000000E+03,      /* K = 58 */
(PID.TID 0000.0001)                -1.160000000000000E+03,      /* K = 59 */
(PID.TID 0000.0001)                -1.180000000000000E+03,      /* K = 60 */
(PID.TID 0000.0001)                -1.200000000000000E+03,      /* K = 61 */
(PID.TID 0000.0001)                -1.220000000000000E+03,      /* K = 62 */
(PID.TID 0000.0001)                -1.240000000000000E+03,      /* K = 63 */
(PID.TID 0000.0001)                -1.260000000000000E+03,      /* K = 64 */
(PID.TID 0000.0001)                -1.280000000000000E+03,      /* K = 65 */
(PID.TID 0000.0001)                -1.300000000000000E+03,      /* K = 66 */
(PID.TID 0000.0001)                -1.320000000000000E+03,      /* K = 67 */
(PID.TID 0000.0001)                -1.340000000000000E+03,      /* K = 68 */
(PID.TID 0000.0001)                -1.360000000000000E+03,      /* K = 69 */
(PID.TID 0000.0001)                -1.380000000000000E+03,      /* K = 70 */
(PID.TID 0000.0001)                -1.400000000000000E+03,      /* K = 71 */
(PID.TID 0000.0001)                -1.420000000000000E+03,      /* K = 72 */
(PID.TID 0000.0001)                -1.440000000000000E+03,      /* K = 73 */
(PID.TID 0000.0001)                -1.460000000000000E+03,      /* K = 74 */
(PID.TID 0000.0001)                -1.480000000000000E+03,      /* K = 75 */
(PID.TID 0000.0001)                -1.500000000000000E+03,      /* K = 76 */
(PID.TID 0000.0001)                -1.520000000000000E+03,      /* K = 77 */
(PID.TID 0000.0001)                -1.540000000000000E+03,      /* K = 78 */
(PID.TID 0000.0001)                -1.560000000000000E+03,      /* K = 79 */
(PID.TID 0000.0001)                -1.580000000000000E+03,      /* K = 80 */
(PID.TID 0000.0001)                -1.600000000000000E+03,      /* K = 81 */
(PID.TID 0000.0001)                -1.620000000000000E+03,      /* K = 82 */
(PID.TID 0000.0001)                -1.640000000000000E+03,      /* K = 83 */
(PID.TID 0000.0001)                -1.660000000000000E+03,      /* K = 84 */
(PID.TID 0000.0001)                -1.680000000000000E+03,      /* K = 85 */
(PID.TID 0000.0001)                -1.700000000000000E+03,      /* K = 86 */
(PID.TID 0000.0001)                -1.720000000000000E+03,      /* K = 87 */
(PID.TID 0000.0001)                -1.740000000000000E+03,      /* K = 88 */
(PID.TID 0000.0001)                -1.760000000000000E+03,      /* K = 89 */
(PID.TID 0000.0001)                -1.780000000000000E+03,      /* K = 90 */
(PID.TID 0000.0001)                -1.800000000000000E+03,      /* K = 91 */
(PID.TID 0000.0001)                -1.820000000000000E+03,      /* K = 92 */
(PID.TID 0000.0001)                -1.840000000000000E+03,      /* K = 93 */
(PID.TID 0000.0001)                -1.860000000000000E+03,      /* K = 94 */
(PID.TID 0000.0001)                -1.880000000000000E+03,      /* K = 95 */
(PID.TID 0000.0001)                -1.900000000000000E+03,      /* K = 96 */
(PID.TID 0000.0001)                -1.920000000000000E+03,      /* K = 97 */
(PID.TID 0000.0001)                -1.940000000000000E+03,      /* K = 98 */
(PID.TID 0000.0001)                -1.960000000000000E+03,      /* K = 99 */
(PID.TID 0000.0001)                -1.980000000000000E+03,      /* K =100 */
(PID.TID 0000.0001)                -2.000000000000000E+03       /* K =101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)   100 @  1.000000000000000E+00              /* K =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)   101 @  1.000000000000000E+00              /* K =  1:101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0000.0001)   101 @  1.000000000000000E+00              /* K =  1:101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0000.0001)   101 @  1.000000000000000E+00              /* K =  1:101 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                 2.706759183673476E-05,      /* K =  2 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K =  3 */
(PID.TID 0000.0001)     4 @  2.706759183673476E-05,             /* K =  4:  7 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K =  8 */
(PID.TID 0000.0001)     3 @  2.706759183673476E-05,             /* K =  9: 11 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K = 12 */
(PID.TID 0000.0001)     3 @  2.706759183673476E-05,             /* K = 13: 15 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K = 16 */
(PID.TID 0000.0001)     4 @  2.706759183673476E-05,             /* K = 17: 20 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K = 21 */
(PID.TID 0000.0001)     2 @  2.706759183673476E-05,             /* K = 22: 23 */
(PID.TID 0000.0001)                 2.706759183673441E-05,      /* K = 24 */
(PID.TID 0000.0001)    19 @  2.706759183673476E-05,             /* K = 25: 43 */
(PID.TID 0000.0001)                 2.706759183673458E-05,      /* K = 44 */
(PID.TID 0000.0001)    13 @  2.706759183673476E-05,             /* K = 45: 57 */
(PID.TID 0000.0001)                 2.706759183673458E-05,      /* K = 58 */
(PID.TID 0000.0001)    42 @  2.706759183673476E-05              /* K = 59:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.533995584988962E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.517660044150110E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.782560706401766E+03,      /* I = 48 */
(PID.TID 0000.0001)                 1.766225165562914E+03,      /* I = 49 */
(PID.TID 0000.0001)                 1.749889624724062E+03,      /* I = 50 */
(PID.TID 0000.0001)                 1.733554083885210E+03,      /* I = 51 */
(PID.TID 0000.0001)                 1.717218543046358E+03,      /* I = 52 */
(PID.TID 0000.0001)                 1.700883002207506E+03,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.657836644591612E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.494481236203090E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.331125827814569E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.167770419426049E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.004415011037528E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.841059602649007E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.490066225165563E+02,      /* I =148 */
(PID.TID 0000.0001)                 1.326710816777042E+02,      /* I =149 */
(PID.TID 0000.0001)                 1.163355408388521E+02,      /* I =150 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =151 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =152 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)   200 @  5.000000000000000E+03              /* I =  1:200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.533995584988962E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.517660044150110E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.782560706401766E+03,      /* I = 48 */
(PID.TID 0000.0001)                 1.766225165562914E+03,      /* I = 49 */
(PID.TID 0000.0001)                 1.749889624724062E+03,      /* I = 50 */
(PID.TID 0000.0001)                 1.733554083885210E+03,      /* I = 51 */
(PID.TID 0000.0001)                 1.717218543046358E+03,      /* I = 52 */
(PID.TID 0000.0001)                 1.700883002207506E+03,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.657836644591612E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.494481236203090E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.331125827814569E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.167770419426049E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.004415011037528E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.841059602649007E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.490066225165563E+02,      /* I =148 */
(PID.TID 0000.0001)                 1.326710816777042E+02,      /* I =149 */
(PID.TID 0000.0001)                 1.163355408388521E+02,      /* I =150 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =151 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =152 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)   200 @  5.000000000000000E+03              /* I =  1:200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.542163355408388E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.525827814569537E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.790728476821192E+03,      /* I = 48 */
(PID.TID 0000.0001)                 1.774392935982340E+03,      /* I = 49 */
(PID.TID 0000.0001)                 1.758057395143488E+03,      /* I = 50 */
(PID.TID 0000.0001)                 1.741721854304636E+03,      /* I = 51 */
(PID.TID 0000.0001)                 1.725386313465784E+03,      /* I = 52 */
(PID.TID 0000.0001)                 1.709050772626932E+03,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.739514348785872E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.576158940397352E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.412803532008829E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.249448123620309E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.086092715231789E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.922737306843267E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.571743929359823E+02,      /* I =148 */
(PID.TID 0000.0001)                 1.408388520971303E+02,      /* I =149 */
(PID.TID 0000.0001)                 1.245033112582781E+02,      /* I =150 */
(PID.TID 0000.0001)                 1.081677704194260E+02,      /* I =151 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =152 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)   200 @  5.000000000000000E+03              /* I =  1:200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03,      /* I =  1 */
(PID.TID 0000.0001)                 2.542163355408388E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.525827814569537E+03,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.790728476821192E+03,      /* I = 48 */
(PID.TID 0000.0001)                 1.774392935982340E+03,      /* I = 49 */
(PID.TID 0000.0001)                 1.758057395143488E+03,      /* I = 50 */
(PID.TID 0000.0001)                 1.741721854304636E+03,      /* I = 51 */
(PID.TID 0000.0001)                 1.725386313465784E+03,      /* I = 52 */
(PID.TID 0000.0001)                 1.709050772626932E+03,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.739514348785872E+02,      /* I = 98 */
(PID.TID 0000.0001)                 9.576158940397352E+02,      /* I = 99 */
(PID.TID 0000.0001)                 9.412803532008829E+02,      /* I =100 */
(PID.TID 0000.0001)                 9.249448123620309E+02,      /* I =101 */
(PID.TID 0000.0001)                 9.086092715231789E+02,      /* I =102 */
(PID.TID 0000.0001)                 8.922737306843267E+02,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.571743929359823E+02,      /* I =148 */
(PID.TID 0000.0001)                 1.408388520971303E+02,      /* I =149 */
(PID.TID 0000.0001)                 1.245033112582781E+02,      /* I =150 */
(PID.TID 0000.0001)                 1.081677704194260E+02,      /* I =151 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =152 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =198 */
(PID.TID 0000.0001)                 1.000000000000000E+02,      /* I =199 */
(PID.TID 0000.0001)                 1.000000000000000E+02       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.550331125827815E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)   200 @  5.000000000000000E+03              /* I =  1:200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07,      /* I =  1 */
(PID.TID 0000.0001)                 1.266997792494481E+07,      /* I =  2 */
(PID.TID 0000.0001)                 1.258830022075055E+07,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.912803532008830E+06,      /* I = 48 */
(PID.TID 0000.0001)                 8.831125827814570E+06,      /* I = 49 */
(PID.TID 0000.0001)                 8.749448123620309E+06,      /* I = 50 */
(PID.TID 0000.0001)                 8.667770419426048E+06,      /* I = 51 */
(PID.TID 0000.0001)                 8.586092715231787E+06,      /* I = 52 */
(PID.TID 0000.0001)                 8.504415011037529E+06,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 4.828918322295805E+06,      /* I = 98 */
(PID.TID 0000.0001)                 4.747240618101546E+06,      /* I = 99 */
(PID.TID 0000.0001)                 4.665562913907285E+06,      /* I =100 */
(PID.TID 0000.0001)                 4.583885209713024E+06,      /* I =101 */
(PID.TID 0000.0001)                 4.502207505518764E+06,      /* I =102 */
(PID.TID 0000.0001)                 4.420529801324503E+06,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.450331125827815E+05,      /* I =148 */
(PID.TID 0000.0001)                 6.633554083885209E+05,      /* I =149 */
(PID.TID 0000.0001)                 5.816777041942605E+05,      /* I =150 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =151 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =152 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =198 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =199 */
(PID.TID 0000.0001)                 5.000000000000000E+05       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07,      /* I =  1 */
(PID.TID 0000.0001)                 1.271081677704194E+07,      /* I =  2 */
(PID.TID 0000.0001)                 1.262913907284768E+07,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.953642384105960E+06,      /* I = 48 */
(PID.TID 0000.0001)                 8.871964679911701E+06,      /* I = 49 */
(PID.TID 0000.0001)                 8.790286975717438E+06,      /* I = 50 */
(PID.TID 0000.0001)                 8.708609271523179E+06,      /* I = 51 */
(PID.TID 0000.0001)                 8.626931567328919E+06,      /* I = 52 */
(PID.TID 0000.0001)                 8.545253863134658E+06,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 4.869757174392936E+06,      /* I = 98 */
(PID.TID 0000.0001)                 4.788079470198676E+06,      /* I = 99 */
(PID.TID 0000.0001)                 4.706401766004414E+06,      /* I =100 */
(PID.TID 0000.0001)                 4.624724061810154E+06,      /* I =101 */
(PID.TID 0000.0001)                 4.543046357615895E+06,      /* I =102 */
(PID.TID 0000.0001)                 4.461368653421633E+06,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.858719646799116E+05,      /* I =148 */
(PID.TID 0000.0001)                 7.041942604856513E+05,      /* I =149 */
(PID.TID 0000.0001)                 6.225165562913907E+05,      /* I =150 */
(PID.TID 0000.0001)                 5.408388520971303E+05,      /* I =151 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =152 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =198 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =199 */
(PID.TID 0000.0001)                 5.000000000000000E+05       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07,      /* I =  1 */
(PID.TID 0000.0001)                 1.266997792494481E+07,      /* I =  2 */
(PID.TID 0000.0001)                 1.258830022075055E+07,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.912803532008830E+06,      /* I = 48 */
(PID.TID 0000.0001)                 8.831125827814570E+06,      /* I = 49 */
(PID.TID 0000.0001)                 8.749448123620309E+06,      /* I = 50 */
(PID.TID 0000.0001)                 8.667770419426048E+06,      /* I = 51 */
(PID.TID 0000.0001)                 8.586092715231787E+06,      /* I = 52 */
(PID.TID 0000.0001)                 8.504415011037529E+06,      /* I = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 4.828918322295805E+06,      /* I = 98 */
(PID.TID 0000.0001)                 4.747240618101546E+06,      /* I = 99 */
(PID.TID 0000.0001)                 4.665562913907285E+06,      /* I =100 */
(PID.TID 0000.0001)                 4.583885209713024E+06,      /* I =101 */
(PID.TID 0000.0001)                 4.502207505518764E+06,      /* I =102 */
(PID.TID 0000.0001)                 4.420529801324503E+06,      /* I =103 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.450331125827815E+05,      /* I =148 */
(PID.TID 0000.0001)                 6.633554083885209E+05,      /* I =149 */
(PID.TID 0000.0001)                 5.816777041942605E+05,      /* I =150 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =151 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =152 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =153 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =198 */
(PID.TID 0000.0001)                 5.000000000000000E+05,      /* I =199 */
(PID.TID 0000.0001)                 5.000000000000000E+05       /* I =200 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 1.275165562913907E+07       /* J =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 2.024496688741722E+09
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OBCS_CHECK: #define ALLOW_OBCS
(PID.TID 0000.0001) OBCS_CHECK: start summary:
(PID.TID 0000.0001) useOBCSprescribe = /* prescribe OB values */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useOBCSbalance = /* balance the flow through OB */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_uvApplyFac = /* Factor to apply to U,V 2nd column/row */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_u1_adv_T = /* Temp uses upwind adv-scheme @ OB */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_u1_adv_S = /* Salt uses upwind adv-scheme @ OB */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_monitorFreq = /* monitor output frequency [s] */
(PID.TID 0000.0001)                 7.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_monSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useOBCStides = /* apply tidal forcing through OB */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tidalPeriod = /* (s) */
(PID.TID 0000.0001)    10 @  0.000000000000000E+00              /* I =  1: 10 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OB_indexNone = /* null value for OB index (i.e. no OB) */
(PID.TID 0000.0001)                     -99
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ======== Tile bi=   1 , bj=   1 ========
(PID.TID 0000.0001)  OB_Jn = /* Northern OB local indices */
(PID.TID 0000.0001)   208 @      -99                            /* I = -3:204 */
(PID.TID 0000.0001)  OB_Js = /* Southern OB local indices */
(PID.TID 0000.0001)   208 @      -99                            /* I = -3:204 */
(PID.TID 0000.0001)  OB_Ie = /* Eastern OB local indices */
(PID.TID 0000.0001)     9 @      -99                            /* J = -3:  5 */
(PID.TID 0000.0001)  OB_Iw = /* Western OB local indices */
(PID.TID 0000.0001)     9 @        1                            /* J = -3:  5 */
(PID.TID 0000.0001) OBCS_CHECK: end summary.
(PID.TID 0000.0001) OBCS_CHECK: set-up OK
(PID.TID 0000.0001) OBCS_CHECK: check Inside Mask and OB locations: OK
(PID.TID 0000.0001) KL10_CHECK: #define ALLOW_KL10
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: U0.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: T0.bin
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  OBCS_FIELDS_LOAD: Reading initial data:         0  0.000000000000E+00
(PID.TID 0000.0001)  MDS_READ_SEC_YZ: opening global file: Ue.bin
(PID.TID 0000.0001)  MDS_READ_SEC_YZ: opening global file: Te.bin
(PID.TID 0000.0001)  MDS_READ_SEC_YZ: opening global file: Uw.bin
(PID.TID 0000.0001)  MDS_READ_SEC_YZ: opening global file: Tw.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     0
(PID.TID 0000.0001) %MON time_secondsf                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   5.6333333333333E-02
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   5.6333333333333E-02
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   5.6333333333332E-02
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.7555401576885E-15
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.7780895523360E-02
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.7780895523360E-02
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   7.4119303254145E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   1.2946354369291E-03
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   4.9831580126233E-06
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.7724081632653E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   4.0816326530608E-01
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   1.4088459648444E+01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   7.9567210520253E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4999999999999E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   7.7449158197850E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_sst_max              =   2.7724081632653E+01
(PID.TID 0000.0001) %MON dynstat_sst_min              =   2.7724081632653E+01
(PID.TID 0000.0001) %MON dynstat_sst_mean             =   2.7724081632653E+01
(PID.TID 0000.0001) %MON dynstat_sst_sd               =   1.0658141036402E-14
(PID.TID 0000.0001) %MON dynstat_sst_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_sss_max              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_min              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_mean             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_sd               =   7.1054273576010E-15
(PID.TID 0000.0001) %MON dynstat_sss_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_max            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_min            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_mean           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_sd             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   3.3800000000000E-03
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.0668537314016E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   5.3342686570081E-03
(PID.TID 0000.0001) %MON pe_b_mean                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_max                       =   1.6515221363748E-03
(PID.TID 0000.0001) %MON ke_mean                      =   1.5866561270130E-03
(PID.TID 0000.0001) %MON ke_vol                       =   4.0408484990566E+12
(PID.TID 0000.0001) %MON vort_r_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_r_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_a_mean                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_a_sd                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_p_mean                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_p_sd                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -9.2005344320353E-19
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin OBCS MONITOR field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON obc_E_uVel_max               =   5.6333333333333E-02
(PID.TID 0000.0001) %MON obc_E_uVel_min               =   5.6333333333333E-02
(PID.TID 0000.0001) %MON obc_E_uVel_mean              =   5.6333333333333E-02
(PID.TID 0000.0001) %MON obc_E_uVel_sd                =  -4.3368086899420E-19
(PID.TID 0000.0001) %MON obc_E_uVel_Int               =   5.6333333333333E+05
(PID.TID 0000.0001) %MON obc_W_uVel_max               =   5.6333333333333E-02
(PID.TID 0000.0001) %MON obc_W_uVel_min               =   5.6333333333333E-02
(PID.TID 0000.0001) %MON obc_W_uVel_mean              =   5.6333333333333E-02
(PID.TID 0000.0001) %MON obc_W_uVel_sd                =  -4.3368086899420E-19
(PID.TID 0000.0001) %MON obc_W_uVel_Int               =   5.6333333333333E+05
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End OBCS MONITOR field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -1.77635683940025E-15  1.48319362560151E-02
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-14  1.65428516792864E-02
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-14  1.48432354482229E-02
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-14  1.39518913182241E-02
 cg2d: Sum(rhs),rhsMax =  -1.35003119794419E-13  1.22598533009340E-02
 cg2d: Sum(rhs),rhsMax =  -1.49213974509621E-13  1.62995265220968E-02
 cg2d: Sum(rhs),rhsMax =  -6.39488462184090E-14  2.02306000895154E-02
 cg2d: Sum(rhs),rhsMax =   9.23705556488130E-14  2.34566416120396E-02
 cg2d: Sum(rhs),rhsMax =   1.13686837721616E-13  2.60482690139419E-02
 cg2d: Sum(rhs),rhsMax =   1.03028696685215E-13  2.81395485986608E-02
 cg2d: Sum(rhs),rhsMax =   9.59232693276135E-14  2.98594438624187E-02
 cg2d: Sum(rhs),rhsMax =   7.10542735760100E-14  3.13014172870179E-02
 cg2d: Sum(rhs),rhsMax =   4.26325641456060E-14  3.25149410070618E-02
 cg2d: Sum(rhs),rhsMax =   4.61852778244065E-14  3.35076771718113E-02
 cg2d: Sum(rhs),rhsMax =  -7.81597009336110E-14  3.43528273358650E-02
 cg2d: Sum(rhs),rhsMax =  -1.31450406115619E-13  3.51714019541339E-02
 cg2d: Sum(rhs),rhsMax =  -1.84741111297626E-13  3.57507939089778E-02
 cg2d: Sum(rhs),rhsMax =  -1.91846538655227E-13  3.64285192119352E-02
 cg2d: Sum(rhs),rhsMax =  -1.61648472385423E-13  3.69183927785689E-02
 cg2d: Sum(rhs),rhsMax =  -1.66977542903624E-13  3.73705891640957E-02
 cg2d: Sum(rhs),rhsMax =  -1.68753899743024E-13  3.78591729957365E-02
 cg2d: Sum(rhs),rhsMax =  -1.58095758706622E-13  3.82221200678016E-02
 cg2d: Sum(rhs),rhsMax =  -1.36779476633819E-13  3.84908408874671E-02
 cg2d: Sum(rhs),rhsMax =  -9.41469124882133E-14  3.88545035124190E-02
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-14  3.92004725327527E-02
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-14  3.94923161276120E-02
 cg2d: Sum(rhs),rhsMax =  -8.88178419700125E-15  3.97445736414281E-02
 cg2d: Sum(rhs),rhsMax =   7.81597009336110E-14  3.99688169297382E-02
 cg2d: Sum(rhs),rhsMax =   9.41469124882133E-14  4.01739490599067E-02
 cg2d: Sum(rhs),rhsMax =   9.94759830064140E-14  4.03665010773870E-02
 cg2d: Sum(rhs),rhsMax =   1.19015908239817E-13  4.05509109777515E-02
 cg2d: Sum(rhs),rhsMax =   8.88178419700125E-14  4.07297773198865E-02
 cg2d: Sum(rhs),rhsMax =   8.34887714518118E-14  4.09040853349656E-02
 cg2d: Sum(rhs),rhsMax =   7.81597009336110E-14  4.10734054591879E-02
 cg2d: Sum(rhs),rhsMax =   3.73034936274053E-14  4.12360684551036E-02
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-14  4.13893202249557E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-15  4.15294610348173E-02
 cg2d: Sum(rhs),rhsMax =  -2.66453525910038E-14  4.16519736124177E-02
 cg2d: Sum(rhs),rhsMax =  -4.08562073062058E-14  4.17516444840721E-02
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-14  4.18226824318659E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-14  4.18588373252205E-02
 cg2d: Sum(rhs),rhsMax =  -3.90798504668055E-14  4.20231037000627E-02
 cg2d: Sum(rhs),rhsMax =  -6.39488462184090E-14  4.21715193745370E-02
 cg2d: Sum(rhs),rhsMax =  -7.81597009336110E-14  4.23004363456179E-02
 cg2d: Sum(rhs),rhsMax =  -1.10134124042816E-13  4.23824683617072E-02
 cg2d: Sum(rhs),rhsMax =  -8.88178419700125E-14  4.24091851141577E-02
 cg2d: Sum(rhs),rhsMax =  -7.99360577730113E-14  4.24479893068981E-02
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-14  4.26071614158779E-02
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-14  4.27227436800994E-02
 cg2d: Sum(rhs),rhsMax =  -1.08357767203415E-13  4.27719957628914E-02
 cg2d: Sum(rhs),rhsMax =  -1.27897692436818E-13  4.27367052174695E-02
 cg2d: Sum(rhs),rhsMax =  -1.38555833473220E-13  4.28891989001436E-02
 cg2d: Sum(rhs),rhsMax =  -1.45661260830821E-13  4.30033573989123E-02
 cg2d: Sum(rhs),rhsMax =  -1.43884903991420E-13  4.30411884399006E-02
 cg2d: Sum(rhs),rhsMax =  -1.79412040779425E-13  4.29884327547056E-02
 cg2d: Sum(rhs),rhsMax =  -1.72306613421824E-13  4.31648159615730E-02
 cg2d: Sum(rhs),rhsMax =  -1.59872115546023E-13  4.32499833596801E-02
 cg2d: Sum(rhs),rhsMax =  -1.63424829224823E-13  4.32264250376892E-02
 cg2d: Sum(rhs),rhsMax =  -1.86517468137026E-13  4.32992641292105E-02
 cg2d: Sum(rhs),rhsMax =  -2.14939177567430E-13  4.34119589078354E-02
 cg2d: Sum(rhs),rhsMax =  -2.32702745961433E-13  4.34189459891299E-02
 cg2d: Sum(rhs),rhsMax =  -2.32702745961433E-13  4.34270719779004E-02
 cg2d: Sum(rhs),rhsMax =  -2.20268248085631E-13  4.35578501239809E-02
 cg2d: Sum(rhs),rhsMax =  -2.02504679691629E-13  4.35720983627567E-02
 cg2d: Sum(rhs),rhsMax =  -1.82964754458226E-13  4.35651208753186E-02
 cg2d: Sum(rhs),rhsMax =  -1.66977542903624E-13  4.36968951846672E-02
 cg2d: Sum(rhs),rhsMax =  -1.59872115546023E-13  4.36948387777557E-02
 cg2d: Sum(rhs),rhsMax =  -1.50990331349021E-13  4.37160766866582E-02
 cg2d: Sum(rhs),rhsMax =  -1.35003119794419E-13  4.38253958534769E-02
 cg2d: Sum(rhs),rhsMax =  -1.08357767203415E-13  4.37838263124335E-02
 cg2d: Sum(rhs),rhsMax =  -9.05941988094128E-14  4.38711797721747E-02
 cg2d: Sum(rhs),rhsMax =  -9.59232693276135E-14  4.39386834077944E-02
 cg2d: Sum(rhs),rhsMax =  -7.99360577730113E-14  4.38258703900673E-02
 cg2d: Sum(rhs),rhsMax =  -5.68434188608080E-14  4.40124551671438E-02
 cg2d: Sum(rhs),rhsMax =  -6.57252030578093E-14  4.40137836635800E-02
 cg2d: Sum(rhs),rhsMax =  -4.61852778244065E-14  4.40186730698972E-02
 cg2d: Sum(rhs),rhsMax =  -3.37507799486048E-14  4.41181274700702E-02
 cg2d: Sum(rhs),rhsMax =  -1.59872115546023E-14  4.40240117682174E-02
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-15  4.41795390909703E-02
 cg2d: Sum(rhs),rhsMax =   3.01980662698043E-14  4.41771710023767E-02
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-14  4.41892428548524E-02
 cg2d: Sum(rhs),rhsMax =   4.26325641456060E-14  4.42729690077100E-02
 cg2d: Sum(rhs),rhsMax =   9.23705556488130E-14  4.41566624106179E-02
 cg2d: Sum(rhs),rhsMax =   1.13686837721616E-13  4.43392807420459E-02
 cg2d: Sum(rhs),rhsMax =   1.47437617670221E-13  4.42818571245182E-02
 cg2d: Sum(rhs),rhsMax =   1.70530256582424E-13  4.43752969480115E-02
 cg2d: Sum(rhs),rhsMax =   1.70530256582424E-13  4.43888917582669E-02
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-13  4.43840353749585E-02
 cg2d: Sum(rhs),rhsMax =   1.84741111297626E-13  4.44646928564832E-02
 cg2d: Sum(rhs),rhsMax =   1.88293824976427E-13  4.43737155512482E-02
 cg2d: Sum(rhs),rhsMax =   2.34479102800833E-13  4.45268386293952E-02
 cg2d: Sum(rhs),rhsMax =   2.48689957516035E-13  4.44118420827802E-02
 cg2d: Sum(rhs),rhsMax =   2.87769807982841E-13  4.45754815929980E-02
 cg2d: Sum(rhs),rhsMax =   2.91322521661641E-13  4.45095365415811E-02
 cg2d: Sum(rhs),rhsMax =   3.41060513164848E-13  4.46110409383470E-02
 cg2d: Sum(rhs),rhsMax =   3.58824081558851E-13  4.45891031196011E-02
 cg2d: Sum(rhs),rhsMax =   3.69482222595252E-13  4.46382919689363E-02
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-13  4.46549853719683E-02
 cg2d: Sum(rhs),rhsMax =   3.73034936274053E-13  4.46611609587746E-02
 cg2d: Sum(rhs),rhsMax =   3.65929508916452E-13  4.47108367551285E-02
 cg2d: Sum(rhs),rhsMax =   3.73034936274053E-13  4.46827937667407E-02
 cg2d: Sum(rhs),rhsMax =   3.62376795237651E-13  4.47595780149894E-02
 cg2d: Sum(rhs),rhsMax =   3.26849658449646E-13  4.47056216894223E-02
 cg2d: Sum(rhs),rhsMax =   3.05533376376843E-13  4.48045322860268E-02
 cg2d: Sum(rhs),rhsMax =   2.87769807982841E-13  4.47314233083834E-02
 cg2d: Sum(rhs),rhsMax =   2.84217094304040E-13  4.48483385504860E-02
 cg2d: Sum(rhs),rhsMax =   2.87769807982841E-13  4.47613816992305E-02
 cg2d: Sum(rhs),rhsMax =   2.52242671194836E-13  4.48885952770761E-02
 cg2d: Sum(rhs),rhsMax =   2.41584530158434E-13  4.47961365549311E-02
 cg2d: Sum(rhs),rhsMax =   2.38031816479634E-13  4.49258810837293E-02
 cg2d: Sum(rhs),rhsMax =   2.06057393370429E-13  4.48358313995283E-02
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-13  4.49602927482991E-02
 cg2d: Sum(rhs),rhsMax =   2.20268248085631E-13  4.48801560422102E-02
 cg2d: Sum(rhs),rhsMax =   2.09610107049230E-13  4.49914857795609E-02
 cg2d: Sum(rhs),rhsMax =   2.06057393370429E-13  4.49283847402283E-02
 cg2d: Sum(rhs),rhsMax =   1.95399252334028E-13  4.50187120368672E-02
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-13  4.49794105961764E-02
 cg2d: Sum(rhs),rhsMax =   1.81188397618826E-13  4.50443371984445E-02
 cg2d: Sum(rhs),rhsMax =   1.81188397618826E-13  4.50317767553380E-02
 cg2d: Sum(rhs),rhsMax =   1.95399252334028E-13  4.50652623202185E-02
 cg2d: Sum(rhs),rhsMax =   1.74082970261225E-13  4.50837050950886E-02
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-13  4.50789293742286E-02
 cg2d: Sum(rhs),rhsMax =   1.42108547152020E-13  4.51331229566931E-02
 cg2d: Sum(rhs),rhsMax =   1.31450406115619E-13  4.50832641172000E-02
 cg2d: Sum(rhs),rhsMax =   1.24344978758018E-13  4.51776886383066E-02
 cg2d: Sum(rhs),rhsMax =   1.13686837721616E-13  4.50759465735450E-02
 cg2d: Sum(rhs),rhsMax =   1.20792265079217E-13  4.52148162824775E-02
 cg2d: Sum(rhs),rhsMax =   1.10134124042816E-13  4.50544397601068E-02
 cg2d: Sum(rhs),rhsMax =   1.10134124042816E-13  4.52417006903455E-02
 cg2d: Sum(rhs),rhsMax =   9.23705556488130E-14  4.51292258404872E-02
 cg2d: Sum(rhs),rhsMax =   6.03961325396085E-14  4.52553427159439E-02
 cg2d: Sum(rhs),rhsMax =   6.75015598972095E-14  4.52104298990069E-02
 cg2d: Sum(rhs),rhsMax =   1.06581410364015E-13  4.52574156958599E-02
 cg2d: Sum(rhs),rhsMax =   7.81597009336110E-14  4.52796150052622E-02
 cg2d: Sum(rhs),rhsMax =   6.75015598972095E-14  4.52474513439151E-02
 cg2d: Sum(rhs),rhsMax =   5.32907051820075E-14  4.53331873448286E-02
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-14  4.52151172463175E-02
 cg2d: Sum(rhs),rhsMax =   2.84217094304040E-14  4.53674250241309E-02
 cg2d: Sum(rhs),rhsMax =   7.10542735760100E-15  4.52321081179106E-02
 cg2d: Sum(rhs),rhsMax =   4.26325641456060E-14  4.53785135832165E-02
 cg2d: Sum(rhs),rhsMax =   1.77635683940025E-14  4.53313420172536E-02
 cg2d: Sum(rhs),rhsMax =   2.13162820728030E-14  4.53681783677015E-02
 cg2d: Sum(rhs),rhsMax =  -4.61852778244065E-14  4.54071014814853E-02
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-14  4.53375812815076E-02
 cg2d: Sum(rhs),rhsMax =  -1.77635683940025E-14  4.54552451257097E-02
 cg2d: Sum(rhs),rhsMax =  -9.23705556488130E-14  4.52913888758381E-02
 cg2d: Sum(rhs),rhsMax =  -6.39488462184090E-14  4.54717524228922E-02
 cg2d: Sum(rhs),rhsMax =  -6.75015598972095E-14  4.54100250774899E-02
 cg2d: Sum(rhs),rhsMax =  -9.59232693276135E-14  4.54567275665351E-02
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-14  4.54964673958885E-02
 cg2d: Sum(rhs),rhsMax =  -5.32907051820075E-14  4.54180261595537E-02
 cg2d: Sum(rhs),rhsMax =  -4.61852778244065E-14  4.55471517581097E-02
 cg2d: Sum(rhs),rhsMax =  -3.19744231092045E-14  4.54095211252153E-02
 cg2d: Sum(rhs),rhsMax =  -3.90798504668055E-14  4.55590960594879E-02
 cg2d: Sum(rhs),rhsMax =  -4.97379915032070E-14  4.55365090944725E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-14  4.55415799432097E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-14  4.56252845440924E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-14  4.54905305055374E-02
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-14  4.56732535931803E-02
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-15  4.56126014120426E-02
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-14  4.56867350422705E-02
 cg2d: Sum(rhs),rhsMax =   3.55271367880050E-15  4.57472653146847E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-15  4.56441323688094E-02
 cg2d: Sum(rhs),rhsMax =  -1.77635683940025E-14  4.58100181259919E-02
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-14  4.57363296652734E-02
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-14  4.58016706818017E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-14  4.58583650495171E-02
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-14  4.57343167917890E-02
 cg2d: Sum(rhs),rhsMax =  -3.90798504668055E-14  4.59016469904053E-02
 cg2d: Sum(rhs),rhsMax =  -5.32907051820075E-14  4.58372286239733E-02
 cg2d: Sum(rhs),rhsMax =  -6.75015598972095E-14  4.58656676268114E-02
 cg2d: Sum(rhs),rhsMax =  -9.23705556488130E-14  4.59359634397347E-02
 cg2d: Sum(rhs),rhsMax =  -6.75015598972095E-14  4.57597159815625E-02
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-14  4.59451652168834E-02
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-14  4.59105498336806E-02
 cg2d: Sum(rhs),rhsMax =  -6.75015598972095E-14  4.58701891316070E-02
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-14  4.59699885858812E-02
 cg2d: Sum(rhs),rhsMax =  -8.52651282912120E-14  4.58341811483125E-02
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-14  4.59285823693678E-02
 cg2d: Sum(rhs),rhsMax =  -1.13686837721616E-13  4.59426557583334E-02
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-14  4.58013053752568E-02
 cg2d: Sum(rhs),rhsMax =  -1.17239551400417E-13  4.59450117044045E-02
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-13  4.58706243106095E-02
 cg2d: Sum(rhs),rhsMax =  -1.59872115546023E-13  4.58392837288570E-02
 cg2d: Sum(rhs),rhsMax =  -1.91846538655227E-13  4.59148639242674E-02
 cg2d: Sum(rhs),rhsMax =  -1.98951966012828E-13  4.57607161422799E-02
 cg2d: Sum(rhs),rhsMax =  -2.20268248085631E-13  4.58407825919101E-02
 cg2d: Sum(rhs),rhsMax =  -2.20268248085631E-13  4.58443979948624E-02
 cg2d: Sum(rhs),rhsMax =  -2.27373675443232E-13  4.56618882692332E-02
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-13  4.58039054390818E-02
 cg2d: Sum(rhs),rhsMax =  -2.77111666946439E-13  4.57393008868965E-02
 cg2d: Sum(rhs),rhsMax =  -2.45137243837235E-13  4.56394145231577E-02
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-13  4.57293862823648E-02
 cg2d: Sum(rhs),rhsMax =  -2.77111666946439E-13  4.56047072149549E-02
 cg2d: Sum(rhs),rhsMax =  -2.73558953267639E-13  4.55824488971597E-02
 cg2d: Sum(rhs),rhsMax =  -3.12638803734444E-13  4.56219185611241E-02
 cg2d: Sum(rhs),rhsMax =  -3.37507799486048E-13  4.54452411622890E-02
 cg2d: Sum(rhs),rhsMax =  -3.48165940522449E-13  4.54956830953091E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-13  4.54857588121457E-02
 cg2d: Sum(rhs),rhsMax =  -3.58824081558851E-13  4.52650901303402E-02
 cg2d: Sum(rhs),rhsMax =  -3.90798504668055E-13  4.53763672697978E-02
 cg2d: Sum(rhs),rhsMax =  -3.69482222595252E-13  4.53248375081985E-02
 cg2d: Sum(rhs),rhsMax =  -3.58824081558851E-13  4.51203484894728E-02
 cg2d: Sum(rhs),rhsMax =  -3.30402372128447E-13  4.52282946959211E-02
 cg2d: Sum(rhs),rhsMax =  -3.23296944770846E-13  4.51430270624715E-02
 cg2d: Sum(rhs),rhsMax =  -3.30402372128447E-13  4.49723003258717E-02
 cg2d: Sum(rhs),rhsMax =  -2.70006239588838E-13  4.50557357983324E-02
 cg2d: Sum(rhs),rhsMax =  -2.52242671194836E-13  4.49448858656831E-02
 cg2d: Sum(rhs),rhsMax =  -2.62900812231237E-13  4.48010280361695E-02
 cg2d: Sum(rhs),rhsMax =  -2.62900812231237E-13  4.48651982683340E-02
 cg2d: Sum(rhs),rhsMax =  -2.59348098552437E-13  4.47377865336126E-02
 cg2d: Sum(rhs),rhsMax =  -2.70006239588838E-13  4.46178818262479E-02
 cg2d: Sum(rhs),rhsMax =  -2.38031816479634E-13  4.46702595966858E-02
 cg2d: Sum(rhs),rhsMax =  -1.98951966012828E-13  4.45376173866601E-02
 cg2d: Sum(rhs),rhsMax =  -1.95399252334028E-13  4.44473626650732E-02
 cg2d: Sum(rhs),rhsMax =  -1.59872115546023E-13  4.45033403788806E-02
 cg2d: Sum(rhs),rhsMax =  -1.31450406115619E-13  4.43822539192706E-02
 cg2d: Sum(rhs),rhsMax =  -1.45661260830821E-13  4.43550430481455E-02
 cg2d: Sum(rhs),rhsMax =  -1.17239551400417E-13  4.44399795290264E-02
 cg2d: Sum(rhs),rhsMax =  -1.03028696685215E-13  4.43582711631871E-02
 cg2d: Sum(rhs),rhsMax =  -9.59232693276135E-14  4.44946016287547E-02
 cg2d: Sum(rhs),rhsMax =  -9.59232693276135E-14  4.46385069464084E-02
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-14  4.47259957452264E-02
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-14  4.51287024106564E-02
 cg2d: Sum(rhs),rhsMax =  -8.52651282912120E-14  4.53921057655209E-02
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-14  4.60579401592692E-02
 cg2d: Sum(rhs),rhsMax =  -7.81597009336110E-14  4.66625040279034E-02
 cg2d: Sum(rhs),rhsMax =  -1.49213974509621E-13  4.76926054877697E-02
 cg2d: Sum(rhs),rhsMax =  -1.77635683940025E-13  4.88023271317928E-02
 cg2d: Sum(rhs),rhsMax =  -1.95399252334028E-13  5.02845731464934E-02
 cg2d: Sum(rhs),rhsMax =  -2.02504679691629E-13  5.20955923600583E-02
 cg2d: Sum(rhs),rhsMax =  -2.20268248085631E-13  5.41862130031422E-02
 cg2d: Sum(rhs),rhsMax =  -2.55795384873636E-13  5.65433088979413E-02
 cg2d: Sum(rhs),rhsMax =  -2.45137243837235E-13  5.88122955940746E-02
 cg2d: Sum(rhs),rhsMax =  -2.13162820728030E-13  6.09422114309659E-02
 cg2d: Sum(rhs),rhsMax =  -2.38031816479634E-13  6.29132512709514E-02
 cg2d: Sum(rhs),rhsMax =  -2.34479102800833E-13  6.47070090374319E-02
 cg2d: Sum(rhs),rhsMax =  -2.52242671194836E-13  6.63068027745408E-02
 cg2d: Sum(rhs),rhsMax =  -2.73558953267639E-13  6.76979725078811E-02
 cg2d: Sum(rhs),rhsMax =  -2.62900812231237E-13  6.88681433020020E-02
 cg2d: Sum(rhs),rhsMax =  -2.70006239588838E-13  6.98074467388365E-02
 cg2d: Sum(rhs),rhsMax =  -2.62900812231237E-13  7.05086950949060E-02
 cg2d: Sum(rhs),rhsMax =  -2.55795384873636E-13  7.09675037392523E-02
 cg2d: Sum(rhs),rhsMax =  -2.23820961764432E-13  7.11847281183915E-02
 cg2d: Sum(rhs),rhsMax =  -2.55795384873636E-13  7.12091257776843E-02
 cg2d: Sum(rhs),rhsMax =  -2.30926389122033E-13  7.09941944459122E-02
 cg2d: Sum(rhs),rhsMax =  -2.70006239588838E-13  7.05462859396243E-02
 cg2d: Sum(rhs),rhsMax =  -2.52242671194836E-13  6.98743673534487E-02
 cg2d: Sum(rhs),rhsMax =  -2.41584530158434E-13  6.89898313121836E-02
 cg2d: Sum(rhs),rhsMax =  -2.45137243837235E-13  6.79062629921191E-02
 cg2d: Sum(rhs),rhsMax =  -2.52242671194836E-13  6.66391702870175E-02
 cg2d: Sum(rhs),rhsMax =  -2.94875235340442E-13  6.52056843384008E-02
 cg2d: Sum(rhs),rhsMax =  -3.05533376376843E-13  6.36242382505861E-02
 cg2d: Sum(rhs),rhsMax =  -2.94875235340442E-13  6.19142321540512E-02
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-13  6.00956928624150E-02
 cg2d: Sum(rhs),rhsMax =  -2.73558953267639E-13  5.81889361984813E-02
 cg2d: Sum(rhs),rhsMax =  -2.66453525910038E-13  5.62142396329491E-02
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-13  5.41915322370313E-02
 cg2d: Sum(rhs),rhsMax =  -2.48689957516035E-13  5.21401082487834E-02
 cg2d: Sum(rhs),rhsMax =  -2.77111666946439E-13  5.00783695401318E-02
 cg2d: Sum(rhs),rhsMax =  -2.77111666946439E-13  4.80236009437160E-02
 cg2d: Sum(rhs),rhsMax =  -2.84217094304040E-13  4.59917817806685E-02
 cg2d: Sum(rhs),rhsMax =  -3.26849658449646E-13  4.39974353194874E-02
 cg2d: Sum(rhs),rhsMax =  -3.16191517413245E-13  4.20535168953472E-02
 cg2d: Sum(rhs),rhsMax =  -3.62376795237651E-13  4.01713404368075E-02
 cg2d: Sum(rhs),rhsMax =  -3.62376795237651E-13  3.83605420927041E-02
 cg2d: Sum(rhs),rhsMax =  -3.69482222595252E-13  3.70982113305651E-02
 cg2d: Sum(rhs),rhsMax =  -3.90798504668055E-13  3.66922275433500E-02
 cg2d: Sum(rhs),rhsMax =  -3.55271367880050E-13  3.63737439400828E-02
 cg2d: Sum(rhs),rhsMax =  -3.76587649952853E-13  3.61164495804869E-02
 cg2d: Sum(rhs),rhsMax =  -3.41060513164848E-13  3.59189954249046E-02
 cg2d: Sum(rhs),rhsMax =  -4.12114786740858E-13  3.57526729809989E-02
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  3.55684003089541E-02
 cg2d: Sum(rhs),rhsMax =  -3.90798504668055E-13  3.54723610763624E-02
 cg2d: Sum(rhs),rhsMax =  -4.19220214098459E-13  3.53068468780783E-02
 cg2d: Sum(rhs),rhsMax =  -4.68958205601666E-13  3.52164892925841E-02
 cg2d: Sum(rhs),rhsMax =  -4.83169060316868E-13  3.51105706213247E-02
 cg2d: Sum(rhs),rhsMax =  -4.97379915032070E-13  3.49603198898576E-02
 cg2d: Sum(rhs),rhsMax =  -5.18696197104873E-13  3.49083217311505E-02
 cg2d: Sum(rhs),rhsMax =  -5.40012479177676E-13  3.47894978555246E-02
 cg2d: Sum(rhs),rhsMax =  -5.04485342389671E-13  3.46909930460275E-02
 cg2d: Sum(rhs),rhsMax =  -5.40012479177676E-13  3.46224139408174E-02
 cg2d: Sum(rhs),rhsMax =  -5.25801624462474E-13  3.44895728130999E-02
 cg2d: Sum(rhs),rhsMax =  -5.18696197104873E-13  3.44324100711174E-02
 cg2d: Sum(rhs),rhsMax =  -5.68434188608080E-13  3.43467524502165E-02
 cg2d: Sum(rhs),rhsMax =  -6.03961325396085E-13  3.42177049975698E-02
 cg2d: Sum(rhs),rhsMax =  -6.53699316899292E-13  3.41760736909285E-02
 cg2d: Sum(rhs),rhsMax =  -6.11066752753686E-13  3.40730301074205E-02
 cg2d: Sum(rhs),rhsMax =  -6.32383034826489E-13  3.39771204728635E-02
 cg2d: Sum(rhs),rhsMax =  -6.82121026329696E-13  3.39157142230414E-02
 cg2d: Sum(rhs),rhsMax =  -6.53699316899292E-13  3.37950922443010E-02
 cg2d: Sum(rhs),rhsMax =  -7.31859017832903E-13  3.37278634344266E-02
 cg2d: Sum(rhs),rhsMax =  -6.89226453687297E-13  3.36466550626881E-02
 cg2d: Sum(rhs),rhsMax =  -7.31859017832903E-13  3.35106739651984E-02
 cg2d: Sum(rhs),rhsMax =  -7.24753590475302E-13  3.34664319950350E-02
 cg2d: Sum(rhs),rhsMax =  -7.03437308402499E-13  3.33654721571445E-02
 cg2d: Sum(rhs),rhsMax =  -7.38964445190504E-13  3.32561363138579E-02
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-13  3.31903322541350E-02
 cg2d: Sum(rhs),rhsMax =  -7.38964445190504E-13  3.30697483631900E-02
 cg2d: Sum(rhs),rhsMax =  -7.38964445190504E-13  3.29850326919124E-02
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-13  3.28978935504981E-02
 cg2d: Sum(rhs),rhsMax =  -7.38964445190504E-13  3.27578902826179E-02
 cg2d: Sum(rhs),rhsMax =  -6.89226453687297E-13  3.26963085194107E-02
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-13  3.25881293603666E-02
 cg2d: Sum(rhs),rhsMax =  -6.89226453687297E-13  3.24675711543512E-02
 cg2d: Sum(rhs),rhsMax =  -6.96331881044898E-13  3.23894859456477E-02
 cg2d: Sum(rhs),rhsMax =  -6.82121026329696E-13  3.22606344100763E-02
 cg2d: Sum(rhs),rhsMax =  -6.96331881044898E-13  3.21646874215025E-02
 cg2d: Sum(rhs),rhsMax =  -6.82121026329696E-13  3.20645858036723E-02
 cg2d: Sum(rhs),rhsMax =  -6.89226453687297E-13  3.19165684032569E-02
 cg2d: Sum(rhs),rhsMax =  -6.46593889541691E-13  3.18436749230591E-02
 cg2d: Sum(rhs),rhsMax =  -5.89750470680883E-13  3.17220633203222E-02
 cg2d: Sum(rhs),rhsMax =  -6.67910171614494E-13  3.16008035087364E-02
 cg2d: Sum(rhs),rhsMax =  -6.03961325396085E-13  3.15052838687355E-02
 cg2d: Sum(rhs),rhsMax =  -6.18172180111287E-13  3.13627407454525E-02
 cg2d: Sum(rhs),rhsMax =  -6.18172180111287E-13  3.12680816214179E-02
 cg2d: Sum(rhs),rhsMax =  -6.67910171614494E-13  3.11505469094237E-02
 cg2d: Sum(rhs),rhsMax =  -6.18172180111287E-13  3.10133311880333E-02
 cg2d: Sum(rhs),rhsMax =  -5.96855898038484E-13  3.09195525643449E-02
 cg2d: Sum(rhs),rhsMax =  -6.25277607468888E-13  3.07806601323472E-02
 cg2d: Sum(rhs),rhsMax =  -5.40012479177676E-13  3.06725003494676E-02
 cg2d: Sum(rhs),rhsMax =  -6.25277607468888E-13  3.05563943846269E-02
 cg2d: Sum(rhs),rhsMax =  -6.25277607468888E-13  3.04119847669717E-02
 cg2d: Sum(rhs),rhsMax =  -5.40012479177676E-13  3.03174729495752E-02
 cg2d: Sum(rhs),rhsMax =  -5.61328761250479E-13  3.01796891741356E-02
 cg2d: Sum(rhs),rhsMax =  -5.96855898038484E-13  3.00663755129237E-02
 cg2d: Sum(rhs),rhsMax =  -5.82645043323282E-13  2.99492409686328E-02
 cg2d: Sum(rhs),rhsMax =  -5.89750470680883E-13  2.98065917627912E-02
 cg2d: Sum(rhs),rhsMax =  -6.03961325396085E-13  2.97089329634355E-02
 cg2d: Sum(rhs),rhsMax =  -6.39488462184090E-13  2.95697629995331E-02
 cg2d: Sum(rhs),rhsMax =  -6.67910171614494E-13  2.94520804493307E-02
 cg2d: Sum(rhs),rhsMax =  -6.96331881044898E-13  2.93315200475225E-02
 cg2d: Sum(rhs),rhsMax =  -6.96331881044898E-13  2.91818935371272E-02
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-13  2.90788746572962E-02
 cg2d: Sum(rhs),rhsMax =  -7.67386154620908E-13  2.89361073130772E-02
 cg2d: Sum(rhs),rhsMax =  -7.24753590475302E-13  2.88139836127945E-02
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-13  2.86879743394899E-02
 cg2d: Sum(rhs),rhsMax =  -7.74491581978509E-13  2.85389305722809E-02
 cg2d: Sum(rhs),rhsMax =  -7.46069872548105E-13  2.84286898552886E-02
 cg2d: Sum(rhs),rhsMax =  -7.60280727263307E-13  2.82804880143032E-02
 cg2d: Sum(rhs),rhsMax =  -7.10542735760100E-13  2.81602101080163E-02
 cg2d: Sum(rhs),rhsMax =  -8.31335000839317E-13  2.80270717027417E-02
 cg2d: Sum(rhs),rhsMax =  -7.60280727263307E-13  2.78843542454230E-02
 cg2d: Sum(rhs),rhsMax =  -7.38964445190504E-13  2.77653547040446E-02
 cg2d: Sum(rhs),rhsMax =  -7.74491581978509E-13  2.76102066985386E-02
 cg2d: Sum(rhs),rhsMax =  -6.89226453687297E-13  2.74970078216376E-02
 cg2d: Sum(rhs),rhsMax =  -7.53175299905706E-13  2.73553490401050E-02
 cg2d: Sum(rhs),rhsMax =  -6.60804744256893E-13  2.72235572859978E-02
 cg2d: Sum(rhs),rhsMax =  -6.75015598972095E-13  2.70945180470995E-02
 cg2d: Sum(rhs),rhsMax =  -6.25277607468888E-13  2.69463907642848E-02
 cg2d: Sum(rhs),rhsMax =  -6.89226453687297E-13  2.68291050481976E-02
 cg2d: Sum(rhs),rhsMax =  -6.32383034826489E-13  2.66777824727072E-02
 cg2d: Sum(rhs),rhsMax =  -6.46593889541691E-13  2.65603758139426E-02
 cg2d: Sum(rhs),rhsMax =  -6.25277607468888E-13  2.64202612425723E-02
 cg2d: Sum(rhs),rhsMax =  -6.25277607468888E-13  2.62894747928406E-02
 cg2d: Sum(rhs),rhsMax =  -6.46593889541691E-13  2.61597609956562E-02
 cg2d: Sum(rhs),rhsMax =  -6.75015598972095E-13  2.60174249219886E-02
 cg2d: Sum(rhs),rhsMax =  -6.46593889541691E-13  2.58973132717683E-02
 cg2d: Sum(rhs),rhsMax =  -6.46593889541691E-13  2.57453465042283E-02
 cg2d: Sum(rhs),rhsMax =  -6.89226453687297E-13  2.56338303690832E-02
 cg2d: Sum(rhs),rhsMax =  -5.75539615965681E-13  2.54910101386071E-02
 cg2d: Sum(rhs),rhsMax =  -6.11066752753686E-13  2.53701065985131E-02
 cg2d: Sum(rhs),rhsMax =  -6.18172180111287E-13  2.52356858518997E-02
 cg2d: Sum(rhs),rhsMax =  -6.60804744256893E-13  2.51068238244214E-02
 cg2d: Sum(rhs),rhsMax =  -5.96855898038484E-13  2.49800669764548E-02
 cg2d: Sum(rhs),rhsMax =  -6.53699316899292E-13  2.48445586617118E-02
 cg2d: Sum(rhs),rhsMax =  -6.11066752753686E-13  2.47247440983768E-02
 cg2d: Sum(rhs),rhsMax =  -6.67910171614494E-13  2.45837881127191E-02
 cg2d: Sum(rhs),rhsMax =  -5.96855898038484E-13  2.44702096305357E-02
 cg2d: Sum(rhs),rhsMax =  -6.82121026329696E-13  2.43277475015833E-02
 cg2d: Sum(rhs),rhsMax =  -7.67386154620908E-13  2.42168598233467E-02
 cg2d: Sum(rhs),rhsMax =  -6.82121026329696E-13  2.40803328177363E-02
 cg2d: Sum(rhs),rhsMax =  -6.96331881044898E-13  2.39649959946787E-02
 cg2d: Sum(rhs),rhsMax =  -7.24753590475302E-13  2.38337460595394E-02
 cg2d: Sum(rhs),rhsMax =  -7.95807864051312E-13  2.37148263512814E-02
 cg2d: Sum(rhs),rhsMax =  -8.10018718766514E-13  2.35882092403259E-02
 cg2d: Sum(rhs),rhsMax =  -7.67386154620908E-13  2.34664679804348E-02
 cg2d: Sum(rhs),rhsMax =  -8.38440428196918E-13  2.33438534499634E-02
 cg2d: Sum(rhs),rhsMax =  -7.95807864051312E-13  2.32199484092501E-02
 cg2d: Sum(rhs),rhsMax =  -8.52651282912120E-13  2.31007195627727E-02
 cg2d: Sum(rhs),rhsMax =  -8.38440428196918E-13  2.29752038177219E-02
 cg2d: Sum(rhs),rhsMax =  -8.38440428196918E-13  2.28587553647429E-02
 cg2d: Sum(rhs),rhsMax =  -8.81072992342524E-13  2.27320738522913E-02
 cg2d: Sum(rhs),rhsMax =  -9.52127265918534E-13  2.26178095957483E-02
 cg2d: Sum(rhs),rhsMax =  -9.80548975348938E-13  2.24902950564219E-02
 cg2d: Sum(rhs),rhsMax =  -1.02318153949454E-12  2.23776253031473E-02
 cg2d: Sum(rhs),rhsMax =  -8.81072992342524E-13  2.22494954331394E-02
 cg2d: Sum(rhs),rhsMax =  -1.08002495835535E-12  2.21378349814370E-02
 cg2d: Sum(rhs),rhsMax =  -1.06581410364015E-12  2.20091924428436E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.18979594970837E-02
 cg2d: Sum(rhs),rhsMax =  -9.52127265918534E-13  2.17687949192077E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.16574110573487E-02
 cg2d: Sum(rhs),rhsMax =  -1.03739239420975E-12  2.15276092692204E-02
 cg2d: Sum(rhs),rhsMax =  -9.52127265918534E-13  2.14155006668775E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.12848517359466E-02
 cg2d: Sum(rhs),rhsMax =  -1.03739239420975E-12  2.12577694539276E-02
 cg2d: Sum(rhs),rhsMax =  -9.66338120633736E-13  2.12587408695725E-02
 cg2d: Sum(rhs),rhsMax =  -9.66338120633736E-13  2.12592184348252E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.12592140461750E-02
 cg2d: Sum(rhs),rhsMax =  -8.52651282912120E-13  2.12587393436339E-02
 cg2d: Sum(rhs),rhsMax =  -9.09494701772928E-13  2.12578056851777E-02
 cg2d: Sum(rhs),rhsMax =  -9.09494701772928E-13  2.12564241245415E-02
 cg2d: Sum(rhs),rhsMax =  -8.24229573481716E-13  2.12546053925561E-02
 cg2d: Sum(rhs),rhsMax =  -9.37916411203332E-13  2.12523598821848E-02
 cg2d: Sum(rhs),rhsMax =  -8.66862137627322E-13  2.12496976373735E-02
 cg2d: Sum(rhs),rhsMax =  -8.81072992342524E-13  2.12466283457870E-02
 cg2d: Sum(rhs),rhsMax =  -9.52127265918534E-13  2.12431613354555E-02
 cg2d: Sum(rhs),rhsMax =  -7.95807864051312E-13  2.12393055753088E-02
 cg2d: Sum(rhs),rhsMax =  -7.53175299905706E-13  2.12350696795300E-02
 cg2d: Sum(rhs),rhsMax =  -8.10018718766514E-13  2.12304619156097E-02
 cg2d: Sum(rhs),rhsMax =  -7.81597009336110E-13  2.12254902159398E-02
 cg2d: Sum(rhs),rhsMax =  -8.24229573481716E-13  2.12201621927430E-02
 cg2d: Sum(rhs),rhsMax =  -8.66862137627322E-13  2.12144851560915E-02
 cg2d: Sum(rhs),rhsMax =  -8.10018718766514E-13  2.12084661347387E-02
 cg2d: Sum(rhs),rhsMax =  -9.23705556488130E-13  2.12021118994534E-02
 cg2d: Sum(rhs),rhsMax =  -9.52127265918534E-13  2.11954289885154E-02
 cg2d: Sum(rhs),rhsMax =  -1.02318153949454E-12  2.11884237350315E-02
 cg2d: Sum(rhs),rhsMax =  -9.52127265918534E-13  2.11811022957123E-02
 cg2d: Sum(rhs),rhsMax =  -8.95283847057726E-13  2.11734706807285E-02
 cg2d: Sum(rhs),rhsMax =  -9.09494701772928E-13  2.11655347842694E-02
 cg2d: Sum(rhs),rhsMax =  -1.00897068477934E-12  2.11573004153430E-02
 cg2d: Sum(rhs),rhsMax =  -1.02318153949454E-12  2.11487733285240E-02
 cg2d: Sum(rhs),rhsMax =  -9.52127265918534E-13  2.11399592547122E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.11308639311222E-02
 cg2d: Sum(rhs),rhsMax =  -1.12265752250096E-12  2.11214931300350E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.11118526864201E-02
 cg2d: Sum(rhs),rhsMax =  -1.05160324892495E-12  2.11019485240913E-02
 cg2d: Sum(rhs),rhsMax =  -1.06581410364015E-12  2.10917866801526E-02
 cg2d: Sum(rhs),rhsMax =  -1.05160324892495E-12  2.10813733274942E-02
 cg2d: Sum(rhs),rhsMax =  -1.02318153949454E-12  2.10707147953018E-02
 cg2d: Sum(rhs),rhsMax =  -1.00897068477934E-12  2.10598175874963E-02
 cg2d: Sum(rhs),rhsMax =  -1.09423581307055E-12  2.10486883990344E-02
 cg2d: Sum(rhs),rhsMax =  -1.05160324892495E-12  2.10373341300256E-02
 cg2d: Sum(rhs),rhsMax =  -1.08002495835535E-12  2.10257618976516E-02
 cg2d: Sum(rhs),rhsMax =  -1.09423581307055E-12  2.10139790458886E-02
 cg2d: Sum(rhs),rhsMax =  -1.13686837721616E-12  2.10019931530638E-02
 cg2d: Sum(rhs),rhsMax =  -1.10844666778576E-12  2.09898120373123E-02
 cg2d: Sum(rhs),rhsMax =  -1.26476606965298E-12  2.09774437600138E-02
 cg2d: Sum(rhs),rhsMax =  -1.20792265079217E-12  2.09648966273038E-02
 cg2d: Sum(rhs),rhsMax =  -1.17950094136177E-12  2.09521791897683E-02
 cg2d: Sum(rhs),rhsMax =  -1.09423581307055E-12  2.09393002404369E-02
 cg2d: Sum(rhs),rhsMax =  -1.23634436022257E-12  2.09262688111974E-02
 cg2d: Sum(rhs),rhsMax =  -1.15107923193136E-12  2.09130941677546E-02
 cg2d: Sum(rhs),rhsMax =  -1.20792265079217E-12  2.08997858032586E-02
 cg2d: Sum(rhs),rhsMax =  -1.10844666778576E-12  2.08863534307259E-02
 cg2d: Sum(rhs),rhsMax =  -1.20792265079217E-12  2.08728069743706E-02
 cg2d: Sum(rhs),rhsMax =  -1.26476606965298E-12  2.08591565599660E-02
 cg2d: Sum(rhs),rhsMax =  -1.15107923193136E-12  2.08454125043463E-02
 cg2d: Sum(rhs),rhsMax =  -1.20792265079217E-12  2.08315853041615E-02
 cg2d: Sum(rhs),rhsMax =  -1.20792265079217E-12  2.08176856239835E-02
 cg2d: Sum(rhs),rhsMax =  -1.02318153949454E-12  2.08037242838627E-02
 cg2d: Sum(rhs),rhsMax =  -1.12265752250096E-12  2.07897122464304E-02
 cg2d: Sum(rhs),rhsMax =  -1.15107923193136E-12  2.07756606036270E-02
 cg2d: Sum(rhs),rhsMax =  -1.10844666778576E-12  2.07615805631383E-02
 cg2d: Sum(rhs),rhsMax =  -1.12265752250096E-12  2.07474834346177E-02
 cg2d: Sum(rhs),rhsMax =  -1.15107923193136E-12  2.07333806157677E-02
 cg2d: Sum(rhs),rhsMax =  -1.15107923193136E-12  2.07192835783543E-02
 cg2d: Sum(rhs),rhsMax =  -1.12265752250096E-12  2.07052038542195E-02
 cg2d: Sum(rhs),rhsMax =  -1.12265752250096E-12  2.06911530213541E-02
 cg2d: Sum(rhs),rhsMax =  -1.09423581307055E-12  2.06771426900898E-02
 cg2d: Sum(rhs),rhsMax =  -1.16529008664656E-12  2.06631844894615E-02
 cg2d: Sum(rhs),rhsMax =  -1.08002495835535E-12  2.06492900537884E-02
 cg2d: Sum(rhs),rhsMax =  -1.02318153949454E-12  2.06354710095161E-02
 cg2d: Sum(rhs),rhsMax =  -1.08002495835535E-12  2.06217389623581E-02
 cg2d: Sum(rhs),rhsMax =  -1.06581410364015E-12  2.06081054847662E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.05945821037587E-02
 cg2d: Sum(rhs),rhsMax =  -1.06581410364015E-12  2.05811802891222E-02
 cg2d: Sum(rhs),rhsMax =  -1.12265752250096E-12  2.05679114420022E-02
 cg2d: Sum(rhs),rhsMax =  -1.17950094136177E-12  2.05547868838869E-02
 cg2d: Sum(rhs),rhsMax =  -1.13686837721616E-12  2.05418178459817E-02
 cg2d: Sum(rhs),rhsMax =  -1.29318777908338E-12  2.05290154589675E-02
 cg2d: Sum(rhs),rhsMax =  -1.27897692436818E-12  2.05163907431245E-02
 cg2d: Sum(rhs),rhsMax =  -1.23634436022257E-12  2.05039545988010E-02
 cg2d: Sum(rhs),rhsMax =  -1.26476606965298E-12  2.04917177971967E-02
 cg2d: Sum(rhs),rhsMax =  -1.30739863379858E-12  2.04796909714282E-02
 cg2d: Sum(rhs),rhsMax =  -1.39266376208980E-12  2.04678846078348E-02
 cg2d: Sum(rhs),rhsMax =  -1.37845290737459E-12  2.04563090374845E-02
 cg2d: Sum(rhs),rhsMax =  -1.29318777908338E-12  2.04449744278300E-02
 cg2d: Sum(rhs),rhsMax =  -1.39266376208980E-12  2.04338907744679E-02
 cg2d: Sum(rhs),rhsMax =  -1.37845290737459E-12  2.04230678929485E-02
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-12  2.04125154105847E-02
 cg2d: Sum(rhs),rhsMax =  -1.43529632623540E-12  2.04022427582048E-02
 cg2d: Sum(rhs),rhsMax =  -1.50635059981141E-12  2.03922591618004E-02
 cg2d: Sum(rhs),rhsMax =  -1.54898316395702E-12  2.03825736340131E-02
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-12  2.03731949654119E-02
 cg2d: Sum(rhs),rhsMax =  -1.46371803566581E-12  2.03641317155089E-02
 cg2d: Sum(rhs),rhsMax =  -1.43529632623540E-12  2.03553922034675E-02
 cg2d: Sum(rhs),rhsMax =  -1.53477230924182E-12  2.03469844984533E-02
 cg2d: Sum(rhs),rhsMax =  -1.62003743753303E-12  2.03389164095863E-02
 cg2d: Sum(rhs),rhsMax =  -1.59161572810262E-12  2.03311954754476E-02
 cg2d: Sum(rhs),rhsMax =  -1.55608859131462E-12  2.03238289531013E-02
 cg2d: Sum(rhs),rhsMax =  -1.51345602716901E-12  2.03168238065912E-02
 cg2d: Sum(rhs),rhsMax =  -1.57029944602982E-12  2.03101866948737E-02
 cg2d: Sum(rhs),rhsMax =  -1.54898316395702E-12  2.03039239591506E-02
 cg2d: Sum(rhs),rhsMax =  -1.53477230924182E-12  2.02980416095687E-02
 cg2d: Sum(rhs),rhsMax =  -1.57029944602982E-12  2.02925453112526E-02
 cg2d: Sum(rhs),rhsMax =  -1.53477230924182E-12  2.02874403696414E-02
 cg2d: Sum(rhs),rhsMax =  -1.51345602716901E-12  2.02827317151026E-02
 cg2d: Sum(rhs),rhsMax =  -1.51345602716901E-12  2.02784238867998E-02
 cg2d: Sum(rhs),rhsMax =  -1.49924517245381E-12  2.02745210157947E-02
 cg2d: Sum(rhs),rhsMax =  -1.55608859131462E-12  2.02710268073684E-02
 cg2d: Sum(rhs),rhsMax =  -1.46371803566581E-12  2.02679445225524E-02
 cg2d: Sum(rhs),rhsMax =  -1.52766688188422E-12  2.02652769588671E-02
 cg2d: Sum(rhs),rhsMax =  -1.44950718095060E-12  2.02630264302701E-02
 cg2d: Sum(rhs),rhsMax =  -1.47082346302341E-12  2.02611947463279E-02
 cg2d: Sum(rhs),rhsMax =  -1.44240175359300E-12  2.02597831906299E-02
 cg2d: Sum(rhs),rhsMax =  -1.41398004416260E-12  2.02587924984755E-02
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-12  2.02582228338742E-02
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-12  2.02580737659103E-02
 cg2d: Sum(rhs),rhsMax =  -1.39976918944740E-12  2.02583442445345E-02
 cg2d: Sum(rhs),rhsMax =  -1.43529632623540E-12  2.02590325758594E-02
 cg2d: Sum(rhs),rhsMax =  -1.44240175359300E-12  2.02601363970326E-02
 cg2d: Sum(rhs),rhsMax =  -1.36424205265939E-12  2.02616526508009E-02
 cg2d: Sum(rhs),rhsMax =  -1.48503431773861E-12  2.02635775598711E-02
 cg2d: Sum(rhs),rhsMax =  -1.41398004416260E-12  2.02659066011887E-02
 cg2d: Sum(rhs),rhsMax =  -1.35003119794419E-12  2.02686344802705E-02
 cg2d: Sum(rhs),rhsMax =  -1.36424205265939E-12  2.02717551057347E-02
 cg2d: Sum(rhs),rhsMax =  -1.32871491587139E-12  2.02752615642259E-02
 cg2d: Sum(rhs),rhsMax =  -1.31450406115619E-12  2.02791460959099E-02
 cg2d: Sum(rhs),rhsMax =  -1.39976918944740E-12  2.02834000705025E-02
 cg2d: Sum(rhs),rhsMax =  -1.39976918944740E-12  2.02880139641904E-02
 cg2d: Sum(rhs),rhsMax =  -1.39266376208980E-12  2.02929773376442E-02
 cg2d: Sum(rhs),rhsMax =  -1.36424205265939E-12  2.02982788153224E-02
 cg2d: Sum(rhs),rhsMax =  -1.42108547152020E-12  2.03039060662669E-02
 cg2d: Sum(rhs),rhsMax =  -1.38555833473220E-12  2.03098457865912E-02
 cg2d: Sum(rhs),rhsMax =  -1.35003119794419E-12  2.03160836837387E-02
 cg2d: Sum(rhs),rhsMax =  -1.37134748001699E-12  2.03226044629815E-02
 cg2d: Sum(rhs),rhsMax =  -1.30739863379858E-12  2.03293918162730E-02
 cg2d: Sum(rhs),rhsMax =  -1.30029320644098E-12  2.03364284138602E-02
 cg2d: Sum(rhs),rhsMax =  -1.31450406115619E-12  2.03436958982625E-02
 cg2d: Sum(rhs),rhsMax =  -1.27187149701058E-12  2.03511748809702E-02
 cg2d: Sum(rhs),rhsMax =  -1.23634436022257E-12  2.03588449420582E-02
 cg2d: Sum(rhs),rhsMax =  -1.25055521493778E-12  2.03666846335818E-02
 cg2d: Sum(rhs),rhsMax =  -1.16529008664656E-12  2.03746714864550E-02
 cg2d: Sum(rhs),rhsMax =  -1.17239551400417E-12  2.03827820209420E-02
 cg2d: Sum(rhs),rhsMax =  -1.17950094136177E-12  2.03909917609074E-02
 cg2d: Sum(rhs),rhsMax =  -1.12265752250096E-12  2.03992752519361E-02
 cg2d: Sum(rhs),rhsMax =  -1.14397380457376E-12  2.04076060834343E-02
 cg2d: Sum(rhs),rhsMax =  -1.14397380457376E-12  2.04159569148093E-02
 cg2d: Sum(rhs),rhsMax =  -1.10134124042816E-12  2.04242995058123E-02
 cg2d: Sum(rhs),rhsMax =  -1.07291953099775E-12  2.04326047511021E-02
 cg2d: Sum(rhs),rhsMax =  -1.12265752250096E-12  2.04408427190630E-02
 cg2d: Sum(rhs),rhsMax =  -1.04449782156735E-12  2.04489826948757E-02
 cg2d: Sum(rhs),rhsMax =  -9.87654402706539E-13  2.04569932278138E-02
 cg2d: Sum(rhs),rhsMax =  -1.03739239420975E-12  2.04648421827007E-02
 cg2d: Sum(rhs),rhsMax =  -9.73443547991337E-13  2.04724967954349E-02
 cg2d: Sum(rhs),rhsMax =  -1.04449782156735E-12  2.04799237324574E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.04870891540004E-02
 cg2d: Sum(rhs),rhsMax =  -1.03739239420975E-12  2.04939587809227E-02
 cg2d: Sum(rhs),rhsMax =  -1.01607611213694E-12  2.05004979649461E-02
 cg2d: Sum(rhs),rhsMax =  -9.94759830064140E-13  2.05066717620131E-02
 cg2d: Sum(rhs),rhsMax =  -9.73443547991337E-13  2.05124450084779E-02
 cg2d: Sum(rhs),rhsMax =  -9.66338120633736E-13  2.05177823998140E-02
 cg2d: Sum(rhs),rhsMax =  -9.59232693276135E-13  2.05226485714931E-02
 cg2d: Sum(rhs),rhsMax =  -9.02389274415327E-13  2.05270081816590E-02
 cg2d: Sum(rhs),rhsMax =  -9.45021838560933E-13  2.05308259951924E-02
 cg2d: Sum(rhs),rhsMax =  -8.73967564984923E-13  2.05340669687345E-02
 cg2d: Sum(rhs),rhsMax =  -9.09494701772928E-13  2.05366963362134E-02
 cg2d: Sum(rhs),rhsMax =  -8.31335000839317E-13  2.05386796943951E-02
 cg2d: Sum(rhs),rhsMax =  -8.10018718766514E-13  2.05399830879588E-02
 cg2d: Sum(rhs),rhsMax =  -8.66862137627322E-13  2.05405730935841E-02
 cg2d: Sum(rhs),rhsMax =  -8.17124146124115E-13  2.05404169025250E-02
 cg2d: Sum(rhs),rhsMax =  -8.38440428196918E-13  2.05394824011451E-02
 cg2d: Sum(rhs),rhsMax =  -8.52651282912120E-13  2.05377382488217E-02
 cg2d: Sum(rhs),rhsMax =  -7.31859017832903E-13  2.05351539527446E-02
 cg2d: Sum(rhs),rhsMax =  -7.74491581978509E-13  2.05316999390510E-02
 cg2d: Sum(rhs),rhsMax =  -7.03437308402499E-13  2.05273476197793E-02
 cg2d: Sum(rhs),rhsMax =  -7.03437308402499E-13  2.05220694551308E-02
 cg2d: Sum(rhs),rhsMax =  -7.03437308402499E-13  2.05158390105532E-02
 cg2d: Sum(rhs),rhsMax =  -7.53175299905706E-13  2.05086310081835E-02
 cg2d: Sum(rhs),rhsMax =  -7.24753590475302E-13  2.05004213722200E-02
 cg2d: Sum(rhs),rhsMax =  -6.96331881044898E-13  2.04911872678264E-02
 cg2d: Sum(rhs),rhsMax =  -7.03437308402499E-13  2.04809071332174E-02
 cg2d: Sum(rhs),rhsMax =  -6.96331881044898E-13  2.04695607046052E-02
 cg2d: Sum(rhs),rhsMax =  -6.75015598972095E-13  2.04571290337794E-02
 cg2d: Sum(rhs),rhsMax =  -6.82121026329696E-13  2.04435944979551E-02
 cg2d: Sum(rhs),rhsMax =  -6.46593889541691E-13  2.04289408022402E-02
 cg2d: Sum(rhs),rhsMax =  -6.25277607468888E-13  2.04131529740898E-02
 cg2d: Sum(rhs),rhsMax =  -6.25277607468888E-13  2.03962173499294E-02
 cg2d: Sum(rhs),rhsMax =  -6.11066752753686E-13  2.03781215539956E-02
 cg2d: Sum(rhs),rhsMax =  -5.40012479177676E-13  2.03588544695151E-02
 cg2d: Sum(rhs),rhsMax =  -6.11066752753686E-13  2.03384062024034E-02
 cg2d: Sum(rhs),rhsMax =  -6.18172180111287E-13  2.03167680377292E-02
 cg2d: Sum(rhs),rhsMax =  -6.32383034826489E-13  2.02939323892468E-02
 cg2d: Sum(rhs),rhsMax =  -6.11066752753686E-13  2.02698927423571E-02
 cg2d: Sum(rhs),rhsMax =  -6.46593889541691E-13  2.02446435909076E-02
 cg2d: Sum(rhs),rhsMax =  -6.18172180111287E-13  2.02181803682923E-02
 cg2d: Sum(rhs),rhsMax =  -5.82645043323282E-13  2.01904993733421E-02
 cg2d: Sum(rhs),rhsMax =  -5.68434188608080E-13  2.01615976915325E-02
 cg2d: Sum(rhs),rhsMax =  -5.82645043323282E-13  2.01314731121159E-02
 cg2d: Sum(rhs),rhsMax =  -5.32907051820075E-13  2.01001240417085E-02
 cg2d: Sum(rhs),rhsMax =  -5.61328761250479E-13  2.00675494149062E-02
 cg2d: Sum(rhs),rhsMax =  -5.04485342389671E-13  2.00337486025020E-02
 cg2d: Sum(rhs),rhsMax =  -5.11590769747272E-13  1.99987213178592E-02
 cg2d: Sum(rhs),rhsMax =  -4.76063632959267E-13  1.99624675219736E-02
 cg2d: Sum(rhs),rhsMax =  -4.26325641456060E-13  1.99249873277155E-02
 cg2d: Sum(rhs),rhsMax =  -4.47641923528863E-13  1.98862809036955E-02
 cg2d: Sum(rhs),rhsMax =  -3.97903932025656E-13  1.98463483781378E-02
 cg2d: Sum(rhs),rhsMax =  -3.97903932025656E-13  1.98051897430740E-02
 cg2d: Sum(rhs),rhsMax =  -2.98427949019242E-13  1.97628047590964E-02
(PID.TID 0000.0001) %CHECKPOINT       600 ckptA
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   51.400000000000006
(PID.TID 0000.0001)         System time:  0.14000000000000001
(PID.TID 0000.0001)     Wall clock time:   52.591835021972656
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   6.0000000000000005E-002
(PID.TID 0000.0001)         System time:   2.0000000000000000E-002
(PID.TID 0000.0001)     Wall clock time:   7.7860116958618164E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   51.340000000000003
(PID.TID 0000.0001)         System time:  0.12000000000000001
(PID.TID 0000.0001)     Wall clock time:   52.513939142227173
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   2.9999999999999999E-002
(PID.TID 0000.0001)         System time:   3.0000000000000002E-002
(PID.TID 0000.0001)     Wall clock time:   5.7106971740722656E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   51.310000000000002
(PID.TID 0000.0001)         System time:   9.0000000000000011E-002
(PID.TID 0000.0001)     Wall clock time:   52.456799030303955
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   51.310000000000294
(PID.TID 0000.0001)         System time:   9.0000000000000080E-002
(PID.TID 0000.0001)     Wall clock time:   52.450793981552124
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0000.0001)           User time:   51.280000000000292
(PID.TID 0000.0001)         System time:   9.0000000000000080E-002
(PID.TID 0000.0001)     Wall clock time:   52.438490867614746
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.0000000000010232E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   1.8648624420166016E-002
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   1.0000000000005116E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   6.1066150665283203E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   0.0000000000000000
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   6.1509609222412109E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   12.400000000000006
(PID.TID 0000.0001)         System time:   2.0000000000000018E-002
(PID.TID 0000.0001)     Wall clock time:   12.566793918609619
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   16.900000000000027
(PID.TID 0000.0001)         System time:   2.0000000000000018E-002
(PID.TID 0000.0001)     Wall clock time:   17.487248897552490
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.89000000000002899
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:  0.87738418579101562
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.0400000000000276
(PID.TID 0000.0001)         System time:   1.0000000000000009E-002
(PID.TID 0000.0001)     Wall clock time:  0.95904397964477539
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.17000000000000881
(PID.TID 0000.0001)         System time:   1.0000000000000009E-002
(PID.TID 0000.0001)     Wall clock time:  0.22375464439392090
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.8700000000000188
(PID.TID 0000.0001)         System time:   2.0000000000000018E-002
(PID.TID 0000.0001)     Wall clock time:   4.9938392639160156
(PID.TID 0000.0001)          No. starts:        1200
(PID.TID 0000.0001)           No. stops:        1200
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   14.780000000000058
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   15.118655443191528
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   0.0000000000000000
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   6.8550109863281250E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_STATEVARS_TAVE   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   0.0000000000000000
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   6.4516067504882812E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   0.0000000000000000
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   6.7267417907714844E-003
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.0000000000001137E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   3.3164024353027344E-002
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.0000000000001137E-002
(PID.TID 0000.0001)         System time:   1.0000000000000009E-002
(PID.TID 0000.0001)     Wall clock time:   3.4096240997314453E-002
(PID.TID 0000.0001)          No. starts:         600
(PID.TID 0000.0001)           No. stops:         600
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =         278426
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =         278426
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
